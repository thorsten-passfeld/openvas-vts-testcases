{
  "Endpoints": [
    {
      "URI": "/",
      "Methods": {
        "GET": {
          "Criteria": {
            "Superset": [
              {
                "ID": "GET1",
                "URL_Parameters": "",
                "Headers": {
                  "accept": "*/*"
                },
                "Body": {},
                "Responses": [
                  0
                ]
              },
              {
                "ID": "GET3",
                "URL_Parameters": "",
                "Headers": {
                  "cache-control": "no-cache",
                  "user-agent": "Mozilla/5.0 [en] (X11, U; OpenVAS-VT 21.4.5~dev1)",
                  "accept": "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*",
                  "accept-language": "en",
                  "accept-charset": "iso-8859-1,*,utf-8"
                },
                "Body": {},
                "Responses": [
                  0
                ]
              }
            ],
            "Subset": [
              {
                "ID": "GET2",
                "URL_Parameters": "",
                "Headers": {
                  "pragma": "no-cache",
                  "user-agent": "Mozilla/5.0 [en] (X11, U; OpenVAS-VT 21.4.5)"
                },
                "Body": {},
                "Responses": [
                  0,
                  0
                ]
              }
            ]
          },
          "Responses": [
            {
              "Status": "200",
              "Headers": {
                "Accept-Ranges": "bytes",
                "Cache-Control": "no-store",
                "Content-Type": "text/html; charset=utf-8",
                "Last-Modified": "Fri, 24 Aug 2018 05:39:29 GMT"
              },
              "Body": " <!doctype html> <html ng-app=\"kubernetesDashboard\"> <head> <meta charset=\"utf-8\"> <title ng-controller=\"kdTitle as $ctrl\" ng-bind=\"$ctrl.title()\"></title> <link rel=\"icon\" type=\"image/png\" href=\"assets/images/kubernetes-logo.png\"> <meta name=\"viewport\" content=\"width=device-width\"> <link rel=\"stylesheet\" href=\"static/vendor.93db0a0d.css\"> <link rel=\"stylesheet\" href=\"static/app.ef45991b.css\"> </head> <body ng-controller=\"kdMain as $ctrl\"> <!--[if lt IE 10]>\n      <p class=\"browsehappy\">You are using an <strong>outdated</strong> browser.\n      Please <a href=\"http://browsehappy.com/\">upgrade your browser</a> to improve your\n      experience.</p>\n    <![endif]--> <kd-login layout=\"column\" layout-fill ng-if=\"$ctrl.isLoginState()\"> </kd-login> <kd-chrome layout=\"column\" layout-fill ng-if=\"!$ctrl.isLoginState()\"> </kd-chrome> <script src=\"static/vendor.bd425c26.js\"></script> <script src=\"api/appConfig.json\"></script> <script src=\"static/app.58f1fb61.js\"></script> </body> </html> "
            }
          ]
        }
      }
    },
    {
      "URI": "/api/v1/overview",
      "Methods": {
        "GET": {
          "Criteria": {
            "Superset": [
              {
                "ID": "GET1",
                "URL_Parameters": "",
                "Headers": {
                  "pragma": "no-cache",
                  "cache-control": "no-cache",
                  "user-agent": "Mozilla/5.0 [en] (X11, U; OpenVAS-VT 21.4.5~dev1)",
                  "accept": "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*",
                  "accept-language": "en",
                  "accept-charset": "iso-8859-1,*,utf-8"
                },
                "Body": {},
                "Responses": [
                  0
                ]
              }
            ],
            "Subset": []
          },
          "Responses": [
            {
              "Status": "200",
              "Headers": {
                "Content-Type": "application/json",
                "Transfer-Encoding": "chunked"
              },
              "Body": "{\n  \"configMapList\": {\n   \"listMeta\": {\n    \"totalItems\": 11\n   },\n   \"items\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"preconfig\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"EUREKA_SERVER_ADDRESS\\\":\\\"http://eureka-0.eureka:10011/eureka\\\",\\\"VERSION\\\":\\\"1.1.6.4\\\",\\\"adscriptcmd\\\":\\\"/etc/csp/addadserver-docker.sh ${adrealmip} 192.168.77.224 ${adrealm}\\\",\\\"adscriptsshuri\\\":\\\"ssh://root@192.168.77.224:22\\\",\\\"ampurl\\\":\\\"rabbitmq\\\",\\\"anv\\\":\\\"3.0.6.1045\\\",\\\"apGatherInterval\\\":\\\"3\\\",\\\"authsource\\\":\\\"2\\\",\\\"certfile\\\":\\\"/data/crt/cert.pem\\\",\\\"certkey\\\":\\\"/data/crt/key.pem\\\",\\\"cloudurl\\\":\\\"http://39.105.99.95:7080\\\",\\\"cmccnasip\\\":\\\"39.106.133.97\\\",\\\"consumeoffset\\\":\\\"new\\\",\\\"corpnum\\\":\\\"16\\\",\\\"createportalidurl_api\\\":\\\"http://39.106.133.97:8060\\\",\\\"csp_statistic_loglevel\\\":\\\"debug\\\",\\\"cspadmin_report\\\":\\\"http://39.106.133.97:8881\\\",\\\"cspespwebuiurlprefix\\\":\\\"https://39.106.133.97:8081\\\",\\\"currversion\\\":\\\"1.1.6.4\\\",\\\"dayLimit\\\":\\\"1\\\",\\\"deploy_env\\\":\\\"TEST\\\",\\\"devicecodepath\\\":\\\"/etc/csp/devicecode\\\",\\\"dspmgoname\\\":\\\"dsp_alpha\\\",\\\"esaddress\\\":\\\"https://es.han-networks.com:9201\\\",\\\"escacertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/ca.crt\\\",\\\"esclientcertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.crt\\\",\\\"esclientkeyfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.key\\\",\\\"espassword\\\":\\\"elastic\\\",\\\"esusername\\\":\\\"elastic\\\",\\\"ftpurl\\\":\\\"cespapftp_aptransfer_39.105.67.8:21_pub\\\",\\\"gateway_url\\\":\\\"39.106.133.97:10010\\\",\\\"go_debug\\\":\\\"true\\\",\\\"gpn\\\":\\\"10000\\\",\\\"greyconfig\\\":\\\"/data/\\\",\\\"greyconfigaddr\\\":\\\"http://greyconfig:8080\\\",\\\"grpcmaxkeepalive\\\":\\\"120\\\",\\\"hamqrurl\\\":\\\"http://39.106.133.97:8282\\\",\\\"hamserverip\\\":\\\"39.106.133.97\\\",\\\"han_networks.host.whitelist\\\":\\\"39.106.133.97:8443\\\",\\\"han_networks.server.env\\\":\\\"false\\\",\\\"iov\\\":\\\"false\\\",\\\"ittgroupidsuffix\\\":\\\"39.106.133.97\\\",\\\"ittmgoname\\\":\\\"itt_alpha\\\",\\\"kccf\\\":\\\"/data/crt/cert.pem\\\",\\\"kcf\\\":\\\"/data/crt/cacert.pem\\\",\\\"kckf\\\":\\\"/data/crt/key.pem\\\",\\\"licenseServerAddr\\\":\\\"http://106.38.8.234:7070/csp-license\\\",\\\"licenseurl\\\":\\\"http://106.38.8.234:8800\\\",\\\"lkafkaip\\\":\\\"192.168.77.224:9093\\\",\\\"local_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234:41022/download3\\\",\\\"localhosturl\\\":\\\"https://39.106.133.97/apiv1\\\",\\\"logcenteraddr\\\":\\\"udp://192.168.77.224:514\\\",\\\"login_page_url\\\":\\\"https://login-nginx:4433\\\",\\\"lvu\\\":\\\"http://39.106.133.97:8081\\\",\\\"maxupgrade\\\":\\\"20\\\",\\\"mgoname\\\":\\\"csp_alpha\\\",\\\"mgonew\\\":\\\"\\\",\\\"mgopassword\\\":\\\"admin123qwe\\\",\\\"mgourl\\\":\\\"192.168.78.145:3717\\\",\\\"mgouser\\\":\\\"writer-alpha\\\",\\\"mqrurl\\\":\\\"vernemq\\\",\\\"mqurl\\\":\\\"vernemq\\\",\\\"ndmgo\\\":\\\"mongodb://writer-alpha:admin123qwe@192.168.78.145:3717/csp_alpha\\\",\\\"needforward\\\":\\\"yes\\\",\\\"ntpaddr\\\":\\\"192.168.77.224\\\",\\\"ntptz\\\":\\\"Beijing,Chongqing,HongKong,Urumqi@UTC-08\\\",\\\"oemiconurl\\\":\\\"https://39.106.133.97/static/company_logo.png\\\",\\\"portal.server.ssl.key-store\\\":\\\"/data/ssl/server.keystore-han\\\",\\\"portalmgoname\\\":\\\"portal_alpha\\\",\\\"postgresurl\\\":\\\"postgres_123qwe_39.106.133.97_5432\\\",\\\"proj.portal.oem\\\":\\\"han\\\",\\\"push2userportalurl\\\":\\\"http://39.106.133.97:8060\\\",\\\"qoeftpurl\\\":\\\"cespapftp_aptransfer_39.105.67.8:21_qoeftp\\\",\\\"qoereportaddress\\\":\\\"47.93.114.215:9193\\\",\\\"qoestatus\\\":\\\"1\\\",\\\"rabbitmqurl\\\":\\\"rabbitmq:15672\\\",\\\"radiusserver\\\":\\\"39.106.133.97\\\",\\\"redirectserverip\\\":\\\"39.106.133.97\\\",\\\"redisurl\\\":\\\"192.168.77.227:6379,10,Han201818\\\",\\\"remote_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234:41022/download3\\\",\\\"report_transferstate\\\":\\\"false\\\",\\\"reportmgoname\\\":\\\"csp_report_server_alpha\\\",\\\"retryLimit\\\":\\\"5\\\",\\\"rkafkaip\\\":\\\"47.93.114.215:9193\\\",\\\"rurl\\\":\\\"rabbitmq\\\",\\\"sampmode\\\":\\\"false\\\",\\\"sitenum\\\":\\\"256\\\",\\\"spring.redis.port\\\":\\\"6379\\\",\\\"spring_data_mongodb_uri\\\":\\\"mongodb://writer:admin123qwe@192.168.78.145:3717\\\",\\\"swlvu\\\":\\\"http://39.106.133.97:8081/switch\\\",\\\"swvu\\\":\\\"http://106.38.8.234:8800/switch_version/\\\",\\\"syslogserver\\\":\\\"39.106.133.97\\\",\\\"systemtype\\\":\\\"csp\\\",\\\"threadCount\\\":\\\"5\\\",\\\"tracingreporthttpurl\\\":\\\"\\\",\\\"tracingreporttype\\\":\\\"1\\\",\\\"transferstate\\\":\\\"false\\\",\\\"url\\\":\\\"rabbitmq\\\",\\\"usecsp_demo\\\":\\\"true\\\",\\\"vmqip\\\":\\\"vernemq:8888\\\",\\\"vmqkey\\\":\\\"^[[BCBxH9SymSoUE2OrghdVpK5mdqEJ1LVn5\\\",\\\"vu\\\":\\\"http://106.38.8.234:8800/download3\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"preconfig\\\",\\\"namespace\\\":\\\"alpha\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T05:44:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"preconfig\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"EUREKA_SERVER_ADDRESS\\\":\\\"http://eureka-0.eureka:10011/eureka\\\",\\\"VERSION\\\":\\\"1.1.6.1\\\",\\\"adscriptcmd\\\":\\\"/etc/csp-demo/addadserver-docker.sh ${adrealmip} 192.168.77.224 ${adrealm}\\\",\\\"adscriptsshuri\\\":\\\"ssh://root@192.168.77.224:41022\\\",\\\"ampurl\\\":\\\"rabbitmq\\\",\\\"anv\\\":\\\"3.0.6.1045\\\",\\\"apGatherInterval\\\":\\\"3\\\",\\\"authsource\\\":\\\"2\\\",\\\"certfile\\\":\\\"/data/crt/cert.pem\\\",\\\"certkey\\\":\\\"/data/crt/key.pem\\\",\\\"cloudurl\\\":\\\"http://39.105.99.95:7080\\\",\\\"cmccnasip\\\":\\\"39.107.255.146\\\",\\\"consumeoffset\\\":\\\"new\\\",\\\"corpnum\\\":\\\"16\\\",\\\"createportalidurl_api\\\":\\\"http://39.107.255.146:8060\\\",\\\"csp_statistic_loglevel\\\":\\\"debug\\\",\\\"cspadmin_report\\\":\\\"http://39.107.255.146:8881\\\",\\\"cspespwebuiurlprefix\\\":\\\"https://39.107.255.146:8081\\\",\\\"currversion\\\":\\\"1.1.6.1\\\",\\\"deploy_env\\\":\\\"TEST\\\",\\\"devicecodepath\\\":\\\"/etc/csp/devicecode\\\",\\\"dspmgoname\\\":\\\"dsp_trx\\\",\\\"esaddress\\\":\\\"https://es.han-networks.com:9201\\\",\\\"escacertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/ca.crt\\\",\\\"esclientcertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.crt\\\",\\\"esclientkeyfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.key\\\",\\\"espassword\\\":\\\"elastic\\\",\\\"esusername\\\":\\\"elastic\\\",\\\"ftpurl\\\":\\\"cespapftp_aptransfer_39.107.255.146:21_pub\\\",\\\"gateway_url\\\":\\\"39.107.255.146:10010\\\",\\\"go_debug\\\":\\\"false\\\",\\\"gpn\\\":\\\"10000\\\",\\\"greyconfig\\\":\\\"/data/\\\",\\\"greyconfigaddr\\\":\\\"http://greyconfig:8080\\\",\\\"grpcmaxkeepalive\\\":\\\"120\\\",\\\"hamqrurl\\\":\\\"http://39.107.255.146:8282\\\",\\\"hamserverip\\\":\\\"39.107.255.146\\\",\\\"han_networks.host.whitelist\\\":\\\"39.107.255.146:8443\\\",\\\"han_networks.server.env\\\":\\\"false\\\",\\\"iov\\\":\\\"false\\\",\\\"ittgroupidsuffix\\\":\\\"39.107.255.146\\\",\\\"ittmgoname\\\":\\\"itt_trx\\\",\\\"kccf\\\":\\\"/data/crt/cert.pem\\\",\\\"kcf\\\":\\\"/data/crt/cacert.pem\\\",\\\"kckf\\\":\\\"/data/crt/key.pem\\\",\\\"licenseServerAddr\\\":\\\"http://106.38.8.234:7070/csp-license\\\",\\\"licenseurl\\\":\\\"http://106.38.8.234:8800\\\",\\\"lkafkaip\\\":\\\"192.168.77.224:9093\\\",\\\"local_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234:41022/download3\\\",\\\"localhosturl\\\":\\\"https://39.107.255.146/apiv1\\\",\\\"logcenteraddr\\\":\\\"\\\",\\\"logcmd\\\":\\\"/etc/csp/logstash/hourlylog.sh\\\",\\\"login_page_url\\\":\\\"https://login-nginx:4433\\\",\\\"logpath\\\":\\\"/log/hourlylog\\\",\\\"logsshuri\\\":\\\"ssh://root@192.168.77.224:41022\\\",\\\"lvu\\\":\\\"http://39.107.255.146:8081\\\",\\\"maxupgrade\\\":\\\"20\\\",\\\"mgoname\\\":\\\"csp_trx\\\",\\\"mgonew\\\":\\\"\\\",\\\"mgopassword\\\":\\\"admin123qwe\\\",\\\"mgourl\\\":\\\"dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717\\\",\\\"mgouser\\\":\\\"writer-trx\\\",\\\"mqrurl\\\":\\\"vernemq\\\",\\\"mqurl\\\":\\\"vernemq\\\",\\\"ndmgo\\\":\\\"mongodb://writer-trx:admin123qwe@dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717/csp_trx\\\",\\\"needforward\\\":\\\"yes\\\",\\\"ntpaddr\\\":\\\"192.168.77.224\\\",\\\"ntptz\\\":\\\"Beijing,Chongqing,HongKong,Urumqi@UTC-08\\\",\\\"oemiconurl\\\":\\\"https://39.107.255.146/static/company_logo.png\\\",\\\"portal.server.ssl.key-store\\\":\\\"/data/ssl/server.keystore-han\\\",\\\"portalmgoname\\\":\\\"portal_trx\\\",\\\"postgresurl\\\":\\\"postgres_123qwe_39.107.255.146_5432\\\",\\\"proj.portal.oem\\\":\\\"han\\\",\\\"push2userportalurl\\\":\\\"http://39.107.255.146:8060\\\",\\\"qoeftpurl\\\":\\\"cespapftp_aptransfer_39.107.255.146:21_qoeftp\\\",\\\"qoereportaddress\\\":\\\"47.93.114.215:9193\\\",\\\"qoestatus\\\":\\\"1\\\",\\\"rabbitmqurl\\\":\\\"rabbitmq:15672\\\",\\\"radiusserver\\\":\\\"39.107.255.146\\\",\\\"redirectserverip\\\":\\\"39.107.255.146\\\",\\\"redisurl\\\":\\\"r-2ze17460b8a50f34.redis.rds.aliyuncs.com:6379,10,Han201818\\\",\\\"remote_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234:41022/download3\\\",\\\"report_transferstate\\\":\\\"false\\\",\\\"reportmgoname\\\":\\\"csp_report_server_trx\\\",\\\"rkafkaip\\\":\\\"47.93.114.215:9193\\\",\\\"rurl\\\":\\\"rabbitmq\\\",\\\"sampmode\\\":\\\"false\\\",\\\"sitenum\\\":\\\"256\\\",\\\"spring.redis.port\\\":\\\"6379\\\",\\\"spring_data_mongodb_uri\\\":\\\"mongodb://writer-trx:admin123qwe@dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717\\\",\\\"swlvu\\\":\\\"http://39.107.255.146:8081/switch\\\",\\\"swvu\\\":\\\"http://106.38.8.234:8800/switch_version/\\\",\\\"syslogserver\\\":\\\"39.107.255.146\\\",\\\"systemtype\\\":\\\"csp\\\",\\\"threadCount\\\":\\\"5\\\",\\\"tracingreporthttpurl\\\":\\\"\\\",\\\"tracingreporttype\\\":\\\"1\\\",\\\"transferstate\\\":\\\"false\\\",\\\"url\\\":\\\"rabbitmq\\\",\\\"usecsp_demo\\\":\\\"true\\\",\\\"vmqip\\\":\\\"vernemq:8888\\\",\\\"vmqkey\\\":\\\"vdMKu0IvYnRXHSgOYRKsbB8ZCRCNHWPK\\\",\\\"vu\\\":\\\"http://106.38.8.234:8800/download3\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"preconfig\\\",\\\"namespace\\\":\\\"demo\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:14:09Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"preconfig\",\n      \"namespace\": \"han\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"EUREKA_SERVER_ADDRESS\\\":\\\"http://eureka-0.eureka:10011/eureka\\\",\\\"VERSION\\\":\\\"1.1.4.1001\\\",\\\"adscriptcmd\\\":\\\"/etc/csp/addadserver-docker.sh ${adrealmip} 192.168.77.224 ${adrealm}\\\",\\\"adscriptsshuri\\\":\\\"ssh://root@192.168.77.224:22\\\",\\\"ampurl\\\":\\\"rabbitmq\\\",\\\"anv\\\":\\\"3.0.6.1045\\\",\\\"apGatherInterval\\\":\\\"3\\\",\\\"authsource\\\":\\\"2\\\",\\\"certfile\\\":\\\"/data/crt/cert.pem\\\",\\\"certkey\\\":\\\"/data/crt/key.pem\\\",\\\"cloudurl\\\":\\\"http://39.105.99.95:7080\\\",\\\"cmccnasip\\\":\\\"39.105.99.95\\\",\\\"consumeoffset\\\":\\\"new\\\",\\\"corpnum\\\":\\\"16\\\",\\\"createportalidurl_api\\\":\\\"http://39.105.99.95:8060\\\",\\\"csp_statistic_loglevel\\\":\\\"debug\\\",\\\"cspadmin_report\\\":\\\"http://39.105.99.95:8881\\\",\\\"cspespwebuiurlprefix\\\":\\\"https://39.105.99.95:8081\\\",\\\"dspmgoname\\\":\\\"dsp_han\\\",\\\"esaddress\\\":\\\"https://es.han-networks.com:9201\\\",\\\"escacertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/ca.crt\\\",\\\"esclientcertfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.crt\\\",\\\"esclientkeyfile\\\":\\\"/data/docker-nginx/nginx/conf.d/qoessl/product/client.key\\\",\\\"espassword\\\":\\\"elastic\\\",\\\"esusername\\\":\\\"elastic\\\",\\\"ftpurl\\\":\\\"cespapftp_aptransfer_39.105.99.95:21_pub\\\",\\\"go_debug\\\":\\\"false\\\",\\\"gpn\\\":\\\"10000\\\",\\\"hamqrurl\\\":\\\"http://39.105.99.95:8282\\\",\\\"hamserverip\\\":\\\"39.105.99.95\\\",\\\"han_networks.host.whitelist\\\":\\\"39.105.99.95:8443\\\",\\\"han_networks.server.env\\\":\\\"false\\\",\\\"iov\\\":\\\"false\\\",\\\"ittgroupidsuffix\\\":\\\"39.105.99.95\\\",\\\"ittmgoname\\\":\\\"itt_han\\\",\\\"kccf\\\":\\\"/data/crt/cert.pem\\\",\\\"kcf\\\":\\\"/data/crt/cacert.pem\\\",\\\"kckf\\\":\\\"/data/crt/key.pem\\\",\\\"licenseServerAddr\\\":\\\"http://106.38.8.234:7070/csp-license\\\",\\\"licenseurl\\\":\\\"http://106.38.8.234:8800\\\",\\\"lkafkaip\\\":\\\"192.168.77.224:9093\\\",\\\"local_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234/download3\\\",\\\"localhosturl\\\":\\\"https://39.105.99.95/apiv1\\\",\\\"logcenteraddr\\\":\\\"\\\",\\\"lvu\\\":\\\"http://39.105.99.95:8081\\\",\\\"maxupgrade\\\":\\\"20\\\",\\\"mgoname\\\":\\\"esp_han\\\",\\\"mgonew\\\":\\\"\\\",\\\"mgopassword\\\":\\\"admin123qwe\\\",\\\"mgourl\\\":\\\"dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717\\\",\\\"mgouser\\\":\\\"writer-han\\\",\\\"mqrurl\\\":\\\"vernemq\\\",\\\"mqurl\\\":\\\"vernemq\\\",\\\"ndmgo\\\":\\\"mongodb://writer-han:admin123qwe@dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717/esp_han\\\",\\\"needforward\\\":\\\"yes\\\",\\\"ntpaddr\\\":\\\"192.168.77.224\\\",\\\"ntptz\\\":\\\"Beijing,Chongqing,HongKong,Urumqi@UTC-08\\\",\\\"oemiconurl\\\":\\\"https://39.105.99.95/static/company_logo.png\\\",\\\"portal.server.ssl.key-store\\\":\\\"/data/ssl/server.keystore-han\\\",\\\"portalmgoname\\\":\\\"portal_han\\\",\\\"postgresurl\\\":\\\"postgres_Huaxin18273645_39.105.99.95_5432\\\",\\\"proj.portal.oem\\\":\\\"han\\\",\\\"push2userportalurl\\\":\\\"http://39.105.99.95:8060\\\",\\\"qoeftpurl\\\":\\\"cespapftp_aptransfer_39.105.99.95:21_qoeftp\\\",\\\"qoereportaddress\\\":\\\"47.93.114.215:9193\\\",\\\"qoestatus\\\":\\\"1\\\",\\\"rabbitmqurl\\\":\\\"rabbitmq:15672\\\",\\\"radiusserver\\\":\\\"39.105.99.95\\\",\\\"redirectserverip\\\":\\\"39.105.99.95\\\",\\\"redisurl\\\":\\\"r-2zefde9f5567ae24.redis.rds.aliyuncs.com:6379,10,**123qwe**\\\",\\\"remote_sftp_url\\\":\\\"sftp://sftp-test:apupload@106.38.8.234/download3\\\",\\\"report_transferstate\\\":\\\"false\\\",\\\"reportmgoname\\\":\\\"csp_report_server_han\\\",\\\"rkafkaip\\\":\\\"47.93.114.215:9193\\\",\\\"rurl\\\":\\\"rabbitmq\\\",\\\"sampmode\\\":\\\"false\\\",\\\"sitenum\\\":\\\"256\\\",\\\"spring.redis.port\\\":\\\"6379\\\",\\\"spring_data_mongodb_uri\\\":\\\"mongodb://writer-han:admin123qwe@dds-2zef3aad86efae3433270.mongodb.rds.aliyuncs.com:3717\\\",\\\"swlvu\\\":\\\"http://39.105.99.95:8081/switch\\\",\\\"swvu\\\":\\\"http://106.38.8.234:8800/switch_version/\\\",\\\"syslogserver\\\":\\\"39.105.99.95\\\",\\\"systemtype\\\":\\\"esp\\\",\\\"tracingreporthttpurl\\\":\\\"\\\",\\\"tracingreporttype\\\":\\\"1\\\",\\\"transferstate\\\":\\\"false\\\",\\\"url\\\":\\\"rabbitmq\\\",\\\"usecsp_demo\\\":\\\"true\\\",\\\"vmqip\\\":\\\"vernemq:8888\\\",\\\"vmqkey\\\":\\\"Q91w88YJkVkhhVRAvYvnBhWhLzb6UKUM\\\",\\\"vu\\\":\\\"http://106.38.8.234:8800/download3\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"preconfig\\\",\\\"namespace\\\":\\\"han\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-13T03:31:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cluster-info\",\n      \"namespace\": \"kube-public\",\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-config\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":{\\\"calico_backend\\\":\\\"bird\\\",\\\"cni_network_config\\\":\\\"{\\\\n  \\\\\\\"name\\\\\\\": \\\\\\\"k8s-pod-network\\\\\\\",\\\\n  \\\\\\\"cniVersion\\\\\\\": \\\\\\\"0.3.1\\\\\\\",\\\\n  \\\\\\\"plugins\\\\\\\": [\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"calico\\\\\\\",\\\\n      \\\\\\\"log_level\\\\\\\": \\\\\\\"info\\\\\\\",\\\\n      \\\\\\\"etcd_endpoints\\\\\\\": \\\\\\\"__ETCD_ENDPOINTS__\\\\\\\",\\\\n      \\\\\\\"etcd_key_file\\\\\\\": \\\\\\\"__ETCD_KEY_FILE__\\\\\\\",\\\\n      \\\\\\\"etcd_cert_file\\\\\\\": \\\\\\\"__ETCD_CERT_FILE__\\\\\\\",\\\\n      \\\\\\\"etcd_ca_cert_file\\\\\\\": \\\\\\\"__ETCD_CA_CERT_FILE__\\\\\\\",\\\\n      \\\\\\\"mtu\\\\\\\": __CNI_MTU__,\\\\n      \\\\\\\"ipam\\\\\\\": {\\\\n          \\\\\\\"type\\\\\\\": \\\\\\\"calico-ipam\\\\\\\"\\\\n      },\\\\n      \\\\\\\"policy\\\\\\\": {\\\\n          \\\\\\\"type\\\\\\\": \\\\\\\"k8s\\\\\\\"\\\\n      },\\\\n      \\\\\\\"kubernetes\\\\\\\": {\\\\n          \\\\\\\"kubeconfig\\\\\\\": \\\\\\\"__KUBECONFIG_FILEPATH__\\\\\\\"\\\\n      }\\\\n    },\\\\n    {\\\\n      \\\\\\\"type\\\\\\\": \\\\\\\"portmap\\\\\\\",\\\\n      \\\\\\\"snat\\\\\\\": true,\\\\n      \\\\\\\"capabilities\\\\\\\": {\\\\\\\"portMappings\\\\\\\": true}\\\\n    }\\\\n  ]\\\\n}\\\",\\\"etcd_ca\\\":\\\"\\\",\\\"etcd_cert\\\":\\\"\\\",\\\"etcd_endpoints\\\":\\\"http://192.168.77.224:2379,http://192.168.77.225:2379,http://192.168.77.226:2379\\\",\\\"etcd_key\\\":\\\"\\\",\\\"typha_service_name\\\":\\\"none\\\",\\\"veth_mtu\\\":\\\"1440\\\"},\\\"kind\\\":\\\"ConfigMap\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"calico-config\\\",\\\"namespace\\\":\\\"kube-system\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"extension-apiserver-authentication\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-11T06:27:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kube-proxy\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubeadm-config\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-11T06:28:29Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubelet-config-1.13\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-11T06:28:29Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-settings\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-12T02:37:07Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"configmap\"\n     }\n    }\n   ],\n   \"errors\": []\n  },\n  \"persistentVolumeClaimList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"items\": [],\n   \"errors\": []\n  },\n  \"secretList\": {\n   \"listMeta\": {\n    \"totalItems\": 40\n   },\n   \"secrets\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-sczx6\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"30969756-fa77-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:38:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-llpq2\",\n      \"namespace\": \"default\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"78f4deda-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:25Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-j5k5c\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"332fd2ac-fa77-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:39:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-gq2bs\",\n      \"namespace\": \"han\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"366f5314-fa77-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:39:08Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-zkdk8\",\n      \"namespace\": \"kube-public\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"78f60bfb-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:25Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"attachdetach-controller-token-lx5rp\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"attachdetach-controller\",\n       \"kubernetes.io/service-account.uid\": \"78bbfb6f-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:24Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"bootstrap-signer-token-5zcqs\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"bootstrap-signer\",\n       \"kubernetes.io/service-account.uid\": \"7684b8a8-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-etcd-secrets\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"data\\\":null,\\\"kind\\\":\\\"Secret\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"calico-etcd-secrets\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"type\\\":\\\"Opaque\\\"}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"Opaque\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-kube-controllers-token-wdqwz\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"calico-kube-controllers\",\n       \"kubernetes.io/service-account.uid\": \"5f47905b-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-node-token-rffgq\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"calico-node\",\n       \"kubernetes.io/service-account.uid\": \"5f43b828-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"certificate-controller-token-plf9r\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"certificate-controller\",\n       \"kubernetes.io/service-account.uid\": \"76808836-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clusterrole-aggregation-controller-token-gln54\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"clusterrole-aggregation-controller\",\n       \"kubernetes.io/service-account.uid\": \"3bf1eef4-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:27:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns-token-gz56q\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"coredns\",\n       \"kubernetes.io/service-account.uid\": \"58880a24-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cronjob-controller-token-9pkxl\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"cronjob-controller\",\n       \"kubernetes.io/service-account.uid\": \"76ad9b00-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"daemon-set-controller-token-pm645\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"daemon-set-controller\",\n       \"kubernetes.io/service-account.uid\": \"768e4d0b-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"default-token-crvgj\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"default\",\n       \"kubernetes.io/service-account.uid\": \"78f7533c-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:25Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"deployment-controller-token-lh5pb\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"deployment-controller\",\n       \"kubernetes.io/service-account.uid\": \"3c07ff5b-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:27:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"disruption-controller-token-85lzm\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"disruption-controller\",\n       \"kubernetes.io/service-account.uid\": \"769718a3-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"endpoint-controller-token-976pb\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"endpoint-controller\",\n       \"kubernetes.io/service-account.uid\": \"7710c742-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"expand-controller-token-qrz5z\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"expand-controller\",\n       \"kubernetes.io/service-account.uid\": \"76d3bf9d-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"generic-garbage-collector-token-tk4l8\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"generic-garbage-collector\",\n       \"kubernetes.io/service-account.uid\": \"77c0466d-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"horizontal-pod-autoscaler-token-kzh4z\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"horizontal-pod-autoscaler\",\n       \"kubernetes.io/service-account.uid\": \"78512c9b-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:24Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"job-controller-token-tcxjv\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"job-controller\",\n       \"kubernetes.io/service-account.uid\": \"702f4047-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy-token-lvk5v\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"kube-proxy\",\n       \"kubernetes.io/service-account.uid\": \"588d9da7-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-key-holder\",\n      \"namespace\": \"kube-system\",\n      \"creationTimestamp\": \"2021-08-11T07:05:52Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"Opaque\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-token-8f9k7\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"kubernetes-dashboard\",\n       \"kubernetes.io/service-account.uid\": \"8f8ec126-fa72-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:05:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"namespace-controller-token-zv7mf\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"namespace-controller\",\n       \"kubernetes.io/service-account.uid\": \"70615395-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"node-controller-token-9g8bf\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"node-controller\",\n       \"kubernetes.io/service-account.uid\": \"3c0b807f-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:27:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"persistent-volume-binder-token-wblqt\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"persistent-volume-binder\",\n       \"kubernetes.io/service-account.uid\": \"779a19ad-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"pod-garbage-collector-token-6q48j\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"pod-garbage-collector\",\n       \"kubernetes.io/service-account.uid\": \"7058e9f2-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"pv-protection-controller-token-6s6br\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"pv-protection-controller\",\n       \"kubernetes.io/service-account.uid\": \"70504232-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"pvc-protection-controller-token-4sn7f\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"pvc-protection-controller\",\n       \"kubernetes.io/service-account.uid\": \"7054798a-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"replicaset-controller-token-x5d9f\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"replicaset-controller\",\n       \"kubernetes.io/service-account.uid\": \"7692e88e-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"replication-controller-token-sdm6m\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"replication-controller\",\n       \"kubernetes.io/service-account.uid\": \"7042e64e-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"resourcequota-controller-token-tdwcj\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"resourcequota-controller\",\n       \"kubernetes.io/service-account.uid\": \"7047e27c-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"service-account-controller-token-bpvn8\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"service-account-controller\",\n       \"kubernetes.io/service-account.uid\": \"3c047da2-fa6d-11eb-9da5-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:27:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"service-controller-token-vpwz2\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"service-controller\",\n       \"kubernetes.io/service-account.uid\": \"78142e9e-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"statefulset-controller-token-bglsc\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"statefulset-controller\",\n       \"kubernetes.io/service-account.uid\": \"774dce4b-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"token-cleaner-token-xmjfj\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"token-cleaner\",\n       \"kubernetes.io/service-account.uid\": \"7689ae23-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ttl-controller-token-mfjlc\",\n      \"namespace\": \"kube-system\",\n      \"annotations\": {\n       \"kubernetes.io/service-account.name\": \"ttl-controller\",\n       \"kubernetes.io/service-account.uid\": \"7773f40d-fa6d-11eb-b210-00163e0ec009\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"secret\"\n     },\n     \"type\": \"kubernetes.io/service-account-token\"\n    }\n   ],\n   \"errors\": []\n  },\n  \"serviceList\": {\n   \"listMeta\": {\n    \"totalItems\": 127\n   },\n   \"services\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"aiops-itt\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":10011,\\\"targetPort\\\":10011}],\\\"selector\\\":{\\\"app\\\":\\\"aiops-itt\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"aiops-itt.alpha\",\n      \"ports\": [\n       {\n        \"port\": 10011,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 33327\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"aiops-itt\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.104.254.242\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apinfogather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.97.12.111\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"aprfinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"aprfinfogather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"aprfinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.111.226.42\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.144.137\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apstatusgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apstatusgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apstatusgather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apstatusgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.98.212.199\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"authbroker\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":2000,\\\"port\\\":2000,\\\"protocol\\\":\\\"UDP\\\",\\\"targetPort\\\":2000},{\\\"name\\\":\\\"port3\\\",\\\"port\\\":8282,\\\"targetPort\\\":8282}],\\\"selector\\\":{\\\"app\\\":\\\"authbroker\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"authbroker.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 40521\n       },\n       {\n        \"port\": 2000,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 2000\n       },\n       {\n        \"port\": 8282,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 51026\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"authbroker\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.103.99.147\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"ca-bridge\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8181,\\\"targetPort\\\":8181}],\\\"selector\\\":{\\\"app\\\":\\\"ca-bridge\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"ca-bridge.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8181,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 21409\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"ca-bridge\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.105.135.218\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientdetail\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientdetail\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientdetail.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientdetail\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.7.220\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientevent\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientevent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientevent\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientevent.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientevent\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.56.13\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientname\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientname\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientname.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientname\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.107.252.82\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientstatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientstatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientstatistics.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientstatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.109.155.12\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"config\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"config\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"config.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"config\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.166.216\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-email\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8870,\\\"targetPort\\\":8870}],\\\"selector\\\":{\\\"app\\\":\\\"csp-email\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-email.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8870,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 4651\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-email\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.96.106.232\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-report\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8881,\\\"targetPort\\\":8881}],\\\"selector\\\":{\\\"app\\\":\\\"csp-report\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T06:09:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-report.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8881,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 32495\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-report\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.109.20.45\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-statistic\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8882,\\\"targetPort\\\":8882}],\\\"selector\\\":{\\\"app\\\":\\\"csp-statistic\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-statistic.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8882,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 51314\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-statistic\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.101.36.254\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 63465\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.98.105.253\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin-call\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin-call.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin-call\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.177.7\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin-portal.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 25693\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 57205\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin-portal\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.110.174.117\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"datasynchronization\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"datasynchronization\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"datasynchronization.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"datasynchronization\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.128.39\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"dispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"dispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"dispatch.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"dispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.226.54\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":9080,\\\"port\\\":9080,\\\"targetPort\\\":9080}],\\\"selector\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"dsp-apigateway.alpha\",\n      \"ports\": [\n       {\n        \"port\": 9080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 9080\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"dsp-apigateway\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.106.151.207\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"exappservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"exappservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"exappservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"exappservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.97.25.250\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"gateway\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":10010,\\\"port\\\":10010,\\\"targetPort\\\":10010}],\\\"selector\\\":{\\\"app\\\":\\\"gateway\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T05:52:47Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"gateway.alpha\",\n      \"ports\": [\n       {\n        \"port\": 10010,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 10010\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"gateway\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.101.105.35\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"greyconfig\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":8077,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"greyconfig\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"greyconfig.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8077\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"greyconfig\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.97.15.188\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"hib\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":8080,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"hib\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"hib.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8080\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"hib\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.106.247.18\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"httpovermqtt\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8081,\\\"targetPort\\\":8081}],\\\"selector\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"httpovermqtt.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"httpovermqtt\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.54.189\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"infostatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"infostatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"infostatistics.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"infostatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.131.59\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"jobscheduler\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"jobscheduler\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"jobscheduler.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"jobscheduler\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.102.200\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"license\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"grpc\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051},{\\\"name\\\":\\\"http\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"license\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"license.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 54230\n       },\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 11831\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"license\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.111.252.247\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"login-nginx\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":4433,\\\"port\\\":4433,\\\"targetPort\\\":4433},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":443,\\\"port\\\":443,\\\"targetPort\\\":443},{\\\"name\\\":\\\"port3\\\",\\\"port\\\":8099,\\\"targetPort\\\":8099},{\\\"name\\\":\\\"port4\\\",\\\"port\\\":8081,\\\"targetPort\\\":8081},{\\\"name\\\":\\\"port5\\\",\\\"port\\\":8807,\\\"targetPort\\\":8807},{\\\"name\\\":\\\"port6\\\",\\\"port\\\":8809,\\\"targetPort\\\":8809},{\\\"name\\\":\\\"port7\\\",\\\"nodePort\\\":8060,\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port8\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443},{\\\"name\\\":\\\"port9\\\",\\\"port\\\":8889,\\\"targetPort\\\":8889},{\\\"name\\\":\\\"port10\\\",\\\"port\\\":8899,\\\"targetPort\\\":8899}],\\\"selector\\\":{\\\"app\\\":\\\"login-nginx\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"login-nginx.alpha\",\n      \"ports\": [\n       {\n        \"port\": 4433,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 4433\n       },\n       {\n        \"port\": 443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 443\n       },\n       {\n        \"port\": 8099,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 26935\n       },\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 50003\n       },\n       {\n        \"port\": 8807,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 27045\n       },\n       {\n        \"port\": 8809,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 30826\n       },\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8060\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 63216\n       },\n       {\n        \"port\": 8889,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 44042\n       },\n       {\n        \"port\": 8899,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 12733\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"login-nginx\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.98.23.201\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"mail-manager\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"mail-manager\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"mail-manager.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"mail-manager\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.100.47.155\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"message\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"message\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"message.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"message\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.100.75.53\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"messageforwardcsp.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"messageforwardcsp\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.109.183.147\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"mqttproxy\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":8883,\\\"port\\\":8883,\\\"targetPort\\\":8883},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":8082,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"mqttproxy\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"mqttproxy.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8883\n       },\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8082\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"mqttproxy\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.108.67.107\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"neighbor\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"neighbor\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"neighbor.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"neighbor\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.41.92\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"nginx\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8808,\\\"targetPort\\\":8808},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":2443,\\\"port\\\":443,\\\"targetPort\\\":443},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":8099,\\\"port\\\":8099,\\\"targetPort\\\":8099},{\\\"name\\\":\\\"port4\\\",\\\"nodePort\\\":8081,\\\"port\\\":8081,\\\"targetPort\\\":8081},{\\\"name\\\":\\\"port5\\\",\\\"nodePort\\\":28060,\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port6\\\",\\\"port\\\":8809,\\\"targetPort\\\":8809},{\\\"name\\\":\\\"port7\\\",\\\"port\\\":8889,\\\"targetPort\\\":8889},{\\\"name\\\":\\\"port8\\\",\\\"port\\\":8899,\\\"targetPort\\\":8899},{\\\"name\\\":\\\"port9\\\",\\\"nodePort\\\":8443,\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"nginx\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T11:22:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"nginx.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8808,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 54088\n       },\n       {\n        \"port\": 443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 2443\n       },\n       {\n        \"port\": 8099,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8099\n       },\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8081\n       },\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 28060\n       },\n       {\n        \"port\": 8809,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 61801\n       },\n       {\n        \"port\": 8889,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 47079\n       },\n       {\n        \"port\": 8899,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 63574\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8443\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"nginx\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.103.21.249\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"ocagent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"ocagent\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"ocagent.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"ocagent\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.107.36.211\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"qoerest\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"qoerest\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"qoerest.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"qoerest\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.111.27.194\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rabbitmq\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":15672,\\\"port\\\":15672,\\\"targetPort\\\":15672},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":5672,\\\"targetPort\\\":5672},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":61613,\\\"port\\\":61613,\\\"targetPort\\\":61613}],\\\"selector\\\":{\\\"app\\\":\\\"rabbitmq-alpha\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:46:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"rabbitmq.alpha\",\n      \"ports\": [\n       {\n        \"port\": 15672,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 15672\n       },\n       {\n        \"port\": 5672,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 41804\n       },\n       {\n        \"port\": 61613,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 61613\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"rabbitmq-alpha\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.110.33.88\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"redis\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"redis\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":6379,\\\"targetPort\\\":6379}]}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T08:05:01Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"redis.alpha\",\n      \"ports\": [\n       {\n        \"port\": 6379,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.148.159\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rest-csp\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":30001,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"rest-csp\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"rest-csp.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 30001\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"rest-csp\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.99.53.15\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"scene\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"scene\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"scene.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"scene\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.105.84\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swconfig\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swconfig\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swconfig.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swconfig\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.208.146\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swinfostatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swinfostatistics.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swinfostatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.104.112.70\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.213.214\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swupgrade\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swupgrade\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swupgrade.alpha\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swupgrade\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.173.119\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"systemproperty\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"systemproperty\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"systemproperty.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"systemproperty\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.103.11\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"terminalcenter\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"terminalcenter\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"terminalcenter.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"terminalcenter\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.13.144\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"terminalinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"terminalinfogather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"terminalinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.79.21\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"toolservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"toolservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"toolservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"toolservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.7.181\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"trapdispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"trapdispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"trapdispatch.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"trapdispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.186.70\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"upgradedispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"upgradedispatch.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"upgradedispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.50.14\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"uploadaggent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"uploadaggent\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"uploadaggent.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"uploadaggent\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.221.86\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"userservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"userservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"userservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"userservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.86.178\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"vernemq\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":1883,\\\"targetPort\\\":1883},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":8883,\\\"targetPort\\\":8883},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":8888,\\\"port\\\":8888,\\\"targetPort\\\":8888}],\\\"selector\\\":{\\\"app\\\":\\\"vernemq-alpha\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:44:28Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"vernemq.alpha\",\n      \"ports\": [\n       {\n        \"port\": 1883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 1975\n       },\n       {\n        \"port\": 8883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 18480\n       },\n       {\n        \"port\": 8888,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8888\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"vernemq-alpha\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.101.222.251\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsapgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"widsapgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsapgather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsapgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.98.4.21\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsclientgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"widsclientgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsclientgather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsclientgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.219.168\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":27017,\\\"targetPort\\\":27017}],\\\"selector\\\":{\\\"app\\\":\\\"widsservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsservice.alpha\",\n      \"ports\": [\n       {\n        \"port\": 27017,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.98.156.229\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"willdispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"willdispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"willdispatch.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"willdispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.106.251.104\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"wiredclientgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"wiredclientgather.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"wiredclientgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.171.181\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients\",\n      \"namespace\": \"alpha\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"wiredclients\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"wiredclients\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"wiredclients.alpha\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"wiredclients\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.101.75\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes\",\n      \"namespace\": \"default\",\n      \"labels\": {\n       \"component\": \"apiserver\",\n       \"provider\": \"kubernetes\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:27:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"kubernetes\",\n      \"ports\": [\n       {\n        \"port\": 443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.0.1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"aiops-itt\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":10011,\\\"targetPort\\\":10011}],\\\"selector\\\":{\\\"app\\\":\\\"aiops-itt\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"aiops-itt.demo\",\n      \"ports\": [\n       {\n        \"port\": 10011,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 15010\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"aiops-itt\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.109.223.180\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apinfogather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.136.142\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"aprfinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"aprfinfogather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"aprfinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.156.233\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.209.56\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"apstatusgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"apstatusgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"apstatusgather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"apstatusgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.183.201\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"authbroker\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":32000,\\\"port\\\":2000,\\\"protocol\\\":\\\"UDP\\\",\\\"targetPort\\\":2000},{\\\"name\\\":\\\"port3\\\",\\\"port\\\":8282,\\\"targetPort\\\":8282}],\\\"selector\\\":{\\\"app\\\":\\\"authbroker\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"authbroker.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 43026\n       },\n       {\n        \"port\": 2000,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 32000\n       },\n       {\n        \"port\": 8282,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 40771\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"authbroker\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.97.189.156\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"ca-bridge\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8181,\\\"targetPort\\\":8181}],\\\"selector\\\":{\\\"app\\\":\\\"ca-bridge\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"ca-bridge.demo\",\n      \"ports\": [\n       {\n        \"port\": 8181,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 54997\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"ca-bridge\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.110.99.203\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientdetail\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientdetail\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientdetail.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientdetail\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.117.49\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientname\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientname\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientname.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientname\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.99.226.21\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"clientstatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"clientstatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"clientstatistics.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"clientstatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.32.7\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"config\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"config\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"config.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"config\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.109.141.118\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-email\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8870,\\\"targetPort\\\":8870}],\\\"selector\\\":{\\\"app\\\":\\\"csp-email\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-email.demo\",\n      \"ports\": [\n       {\n        \"port\": 8870,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 358\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-email\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.99.54.250\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-report\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8881,\\\"targetPort\\\":8881}],\\\"selector\\\":{\\\"app\\\":\\\"csp-report\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:41:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-report.demo\",\n      \"ports\": [\n       {\n        \"port\": 8881,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 22720\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-report\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.103.141.31\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"csp-statistic\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8882,\\\"targetPort\\\":8882}],\\\"selector\\\":{\\\"app\\\":\\\"csp-statistic\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"csp-statistic.demo\",\n      \"ports\": [\n       {\n        \"port\": 8882,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 9260\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"csp-statistic\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.110.173.63\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:31Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin.demo\",\n      \"ports\": [\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 14797\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.96.100.74\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin-call\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin-call.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin-call\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.98.16.249\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"cspadmin-portal.demo\",\n      \"ports\": [\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 40825\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 15438\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"cspadmin-portal\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.98.82.122\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"datasynchronization\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"datasynchronization\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"datasynchronization.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"datasynchronization\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.99.91.178\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"dispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"dispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"dispatch.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"dispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.186.81\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":9080,\\\"targetPort\\\":9080}],\\\"selector\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:43:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"dsp-apigateway.demo\",\n      \"ports\": [\n       {\n        \"port\": 9080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 43306\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"dsp-apigateway\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.109.241.123\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"exappservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"exappservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"exappservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"exappservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.42.179\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"gateway\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":30010,\\\"port\\\":10010,\\\"targetPort\\\":10010}],\\\"selector\\\":{\\\"app\\\":\\\"gateway\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"gateway.demo\",\n      \"ports\": [\n       {\n        \"port\": 10010,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 30010\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"gateway\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.111.176.113\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"greyconfig\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":38077,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"greyconfig\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"greyconfig.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38077\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"greyconfig\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.103.150.73\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"hib\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":38080,\\\"port\\\":38080,\\\"targetPort\\\":38080}],\\\"selector\\\":{\\\"app\\\":\\\"hib\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"hib.demo\",\n      \"ports\": [\n       {\n        \"port\": 38080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38080\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"hib\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.107.4.62\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"httpovermqtt\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8081,\\\"targetPort\\\":8081}],\\\"selector\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"httpovermqtt.demo\",\n      \"ports\": [\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"httpovermqtt\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.107.69.83\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"infostatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"infostatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"infostatistics.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"infostatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.17.231\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"jobscheduler\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"jobscheduler\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"jobscheduler.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"jobscheduler\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.73.25\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"license\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"grpc\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051},{\\\"name\\\":\\\"http\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"license\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"license.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 15122\n       },\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 64550\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"license\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.109.77.219\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"login-nginx\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":4433,\\\"targetPort\\\":4433},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":30443,\\\"port\\\":443,\\\"targetPort\\\":443},{\\\"name\\\":\\\"port3\\\",\\\"port\\\":8099,\\\"targetPort\\\":8099},{\\\"name\\\":\\\"port4\\\",\\\"port\\\":8081,\\\"targetPort\\\":8081},{\\\"name\\\":\\\"port5\\\",\\\"port\\\":8807,\\\"targetPort\\\":8807},{\\\"name\\\":\\\"port6\\\",\\\"port\\\":8809,\\\"targetPort\\\":8809},{\\\"name\\\":\\\"port7\\\",\\\"nodePort\\\":38060,\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port8\\\",\\\"port\\\":8443,\\\"targetPort\\\":8443},{\\\"name\\\":\\\"port9\\\",\\\"port\\\":8889,\\\"targetPort\\\":8889},{\\\"name\\\":\\\"port10\\\",\\\"port\\\":8899,\\\"targetPort\\\":8899}],\\\"selector\\\":{\\\"app\\\":\\\"login-nginx\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:51:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"login-nginx.demo\",\n      \"ports\": [\n       {\n        \"port\": 4433,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 58541\n       },\n       {\n        \"port\": 443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 30443\n       },\n       {\n        \"port\": 8099,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 8109\n       },\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 16163\n       },\n       {\n        \"port\": 8807,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 43152\n       },\n       {\n        \"port\": 8809,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 2010\n       },\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38060\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 5431\n       },\n       {\n        \"port\": 8889,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 44632\n       },\n       {\n        \"port\": 8899,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 6550\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"login-nginx\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.100.85.164\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"mail-manager\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"mail-manager\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"mail-manager.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"mail-manager\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.254.156\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"message\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"message\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"message.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"message\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.51.34\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"messageforwardcsp.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"messageforwardcsp\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.247.28\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"mqttproxy\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":38883,\\\"port\\\":8883,\\\"targetPort\\\":8883},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":48081,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"mqttproxy\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:29:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"mqttproxy.demo\",\n      \"ports\": [\n       {\n        \"port\": 8883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38883\n       },\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 48081\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"mqttproxy\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.100.60.28\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"neighbor\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"neighbor\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"neighbor.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"neighbor\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.111.66.103\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"nginx\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8808,\\\"targetPort\\\":8808},{\\\"name\\\":\\\"port2\\\",\\\"nodePort\\\":40443,\\\"port\\\":443,\\\"targetPort\\\":443},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":38099,\\\"port\\\":8099,\\\"targetPort\\\":8099},{\\\"name\\\":\\\"port4\\\",\\\"nodePort\\\":38081,\\\"port\\\":8081,\\\"targetPort\\\":8081},{\\\"name\\\":\\\"port5\\\",\\\"nodePort\\\":48060,\\\"port\\\":8060,\\\"targetPort\\\":8060},{\\\"name\\\":\\\"port6\\\",\\\"port\\\":8809,\\\"targetPort\\\":8809},{\\\"name\\\":\\\"port7\\\",\\\"port\\\":8889,\\\"targetPort\\\":8889},{\\\"name\\\":\\\"port8\\\",\\\"port\\\":8899,\\\"targetPort\\\":8899},{\\\"name\\\":\\\"port9\\\",\\\"nodePort\\\":38443,\\\"port\\\":8443,\\\"targetPort\\\":8443}],\\\"selector\\\":{\\\"app\\\":\\\"nginx\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"nginx.demo\",\n      \"ports\": [\n       {\n        \"port\": 8808,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 48150\n       },\n       {\n        \"port\": 443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 40443\n       },\n       {\n        \"port\": 8099,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38099\n       },\n       {\n        \"port\": 8081,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38081\n       },\n       {\n        \"port\": 8060,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 48060\n       },\n       {\n        \"port\": 8809,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 4677\n       },\n       {\n        \"port\": 8889,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 16943\n       },\n       {\n        \"port\": 8899,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 3679\n       },\n       {\n        \"port\": 8443,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38443\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"nginx\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.100.159.86\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"ocagent\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"ocagent\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"ocagent.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"ocagent\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.27.222\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"qoerest\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"qoerest\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"qoerest.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"qoerest\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.98.217.22\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rabbitmq\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"nodePort\\\":35672,\\\"port\\\":15672,\\\"targetPort\\\":15672},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":5672,\\\"targetPort\\\":5672},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":61614,\\\"port\\\":61613,\\\"targetPort\\\":61613}],\\\"selector\\\":{\\\"app\\\":\\\"rabbitmq-demo\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:35Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"rabbitmq.demo\",\n      \"ports\": [\n       {\n        \"port\": 15672,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 35672\n       },\n       {\n        \"port\": 5672,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 64175\n       },\n       {\n        \"port\": 61613,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 61614\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"rabbitmq-demo\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.99.68.168\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"redis\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"redis\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":6379,\\\"targetPort\\\":6379}]}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T08:25:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"redis.demo\",\n      \"ports\": [\n       {\n        \"port\": 6379,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.111.51.131\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rest-csp\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":30002,\\\"port\\\":8080,\\\"targetPort\\\":8080}],\\\"selector\\\":{\\\"app\\\":\\\"rest-csp\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"rest-csp.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 30002\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"rest-csp\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.102.44.165\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"scene\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"scene\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"scene.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"scene\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.101.87.243\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swconfig\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swconfig\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swconfig.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swconfig\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.108.190.71\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swinfostatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swinfostatistics.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swinfostatistics\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.97.163.94\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.100.63.190\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"swupgrade\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":8080,\\\"targetPort\\\":8080},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"swupgrade\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"swupgrade.demo\",\n      \"ports\": [\n       {\n        \"port\": 8080,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"swupgrade\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.99.38.171\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"systemproperty\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"systemproperty\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"systemproperty.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"systemproperty\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.125.219\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"terminalcenter\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"terminalcenter\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"terminalcenter.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"terminalcenter\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.109.197.95\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"terminalinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"terminalinfogather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"terminalinfogather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.100.237.223\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"toolservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"toolservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"toolservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"toolservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.49.58\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"trapdispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"trapdispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"trapdispatch.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"trapdispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.18.154\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"upgradedispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"upgradedispatch.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"upgradedispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.198.75\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"uploadaggent\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"uploadaggent\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"uploadaggent.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"uploadaggent\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.105.145.179\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"userservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"userservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"userservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"userservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.100.228.84\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"vernemq\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":1883,\\\"targetPort\\\":1883},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":8883,\\\"targetPort\\\":8883},{\\\"name\\\":\\\"port3\\\",\\\"nodePort\\\":38888,\\\"port\\\":8888,\\\"targetPort\\\":8888}],\\\"selector\\\":{\\\"app\\\":\\\"vernemq-demo\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"vernemq.demo\",\n      \"ports\": [\n       {\n        \"port\": 1883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 60598\n       },\n       {\n        \"port\": 8883,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 50424\n       },\n       {\n        \"port\": 8888,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 38888\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"vernemq-demo\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.110.236.9\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsapgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"widsapgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsapgather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsapgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.103.24.124\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsclientgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"widsclientgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsclientgather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsclientgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.158.84\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"widsservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":27017,\\\"targetPort\\\":27017}],\\\"selector\\\":{\\\"app\\\":\\\"widsservice\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"widsservice.demo\",\n      \"ports\": [\n       {\n        \"port\": 27017,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"widsservice\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.106.49.88\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"willdispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"willdispatch\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"willdispatch.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"willdispatch\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.106.203.235\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"wiredclientgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"wiredclientgather.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"wiredclientgather\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.102.230.105\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients\",\n      \"namespace\": \"demo\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"wiredclients\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":50051,\\\"targetPort\\\":50051}],\\\"selector\\\":{\\\"app\\\":\\\"wiredclients\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"wiredclients.demo\",\n      \"ports\": [\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"wiredclients\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.104.158.51\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"freeradius\",\n      \"namespace\": \"han\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"freeradius\\\",\\\"namespace\\\":\\\"han\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":1812,\\\"protocol\\\":\\\"UDP\\\",\\\"targetPort\\\":1812},{\\\"name\\\":\\\"port2\\\",\\\"port\\\":1813,\\\"protocol\\\":\\\"UDP\\\",\\\"targetPort\\\":1813},{\\\"name\\\":\\\"port3\\\",\\\"port\\\":1814,\\\"protocol\\\":\\\"UDP\\\",\\\"targetPort\\\":1814},{\\\"name\\\":\\\"port4\\\",\\\"port\\\":50051,\\\"targetPort\\\":50051}]}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-13T03:19:06Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"freeradius.han\",\n      \"ports\": [\n       {\n        \"port\": 1812,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 1813,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 1814,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 50051,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.110.169.224\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kafka\",\n      \"namespace\": \"han\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"kafka\\\",\\\"namespace\\\":\\\"han\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"name\\\":\\\"port1\\\",\\\"port\\\":9093,\\\"targetPort\\\":9093}]}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-13T07:54:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"kafka.han\",\n      \"ports\": [\n       {\n        \"port\": 9093,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.106.120.225\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"redis\",\n      \"namespace\": \"han\",\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"redis\\\",\\\"namespace\\\":\\\"han\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"port\\\":6379,\\\"targetPort\\\":6379}]}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-12T06:55:31Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"redis.han\",\n      \"ports\": [\n       {\n        \"port\": 6379,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": null,\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.97.28.1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-dns\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-dns\",\n       \"kubernetes.io/cluster-service\": \"true\",\n       \"kubernetes.io/name\": \"KubeDNS\"\n      },\n      \"annotations\": {\n       \"prometheus.io/port\": \"9153\",\n       \"prometheus.io/scrape\": \"true\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"kube-dns.kube-system\",\n      \"ports\": [\n       {\n        \"port\": 53,\n        \"protocol\": \"UDP\",\n        \"nodePort\": 0\n       },\n       {\n        \"port\": 53,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 0\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"k8s-app\": \"kube-dns\"\n     },\n     \"type\": \"ClusterIP\",\n     \"clusterIP\": \"10.96.0.10\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\"\n      },\n      \"annotations\": {\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"v1\\\",\\\"kind\\\":\\\"Service\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"kubernetes-dashboard\\\"},\\\"name\\\":\\\"kubernetes-dashboard\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"ports\\\":[{\\\"nodePort\\\":31151,\\\"port\\\":80,\\\"targetPort\\\":9090}],\\\"selector\\\":{\\\"app\\\":\\\"kubernetes-dashboard\\\"},\\\"type\\\":\\\"NodePort\\\"}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:07:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"service\"\n     },\n     \"internalEndpoint\": {\n      \"host\": \"kubernetes-dashboard.kube-system\",\n      \"ports\": [\n       {\n        \"port\": 80,\n        \"protocol\": \"TCP\",\n        \"nodePort\": 31151\n       }\n      ]\n     },\n     \"externalEndpoints\": null,\n     \"selector\": {\n      \"app\": \"kubernetes-dashboard\"\n     },\n     \"type\": \"NodePort\",\n     \"clusterIP\": \"10.97.202.102\"\n    }\n   ],\n   \"errors\": []\n  },\n  \"ingressList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"items\": [],\n   \"errors\": []\n  },\n  \"deploymentList\": {\n   \"listMeta\": {\n    \"totalItems\": 122\n   },\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 122,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"deployments\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aiops-itt\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"aiops-itt\\\"},\\\"name\\\":\\\"aiops-itt\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"aiops-itt\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"aiops-itt\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx1024m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"aiops-itt-service-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=10011 --mongodb.itt.uri=$(spring_data_mongodb_uri)/$(ittmgoname)  --mongodb.csp.uri=$(spring_data_mongodb_uri)/$(mgoname) --redis.host=redis --redis.port=6379 --redis.password=Han201818 --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --spring.kafka.bootstrap-servers=$(qoereportaddress) --spring.kafka.consumer.group-id=itt-receive-group_$(ittgroupidsuffix) --spring.kafka.ssl.truststore-location=file:///data/server.truststore.jks --grpc.csp.config.host=config --grpc.csp.config.port=50051 --localhost.ip=$(redirectserverip)\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"aiops-itt:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator\\\",\\\"port\\\":10011},\\\"initialDelaySeconds\\\":240,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"aiops-itt\\\",\\\"ports\\\":[{\\\"containerPort\\\":10011,\\\"name\\\":\\\"port1\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"aiops-itt/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aiops-itt:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apinfogather\\\"},\\\"name\\\":\\\"apinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apinfogather\\\",\\\"-gatherinterval=$(apGatherInterval)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-vmqkey=$(vmqkey)\\\",\\\"-vmqip=$(vmqip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apinfogather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apinfogather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"},\\\"name\\\":\\\"aprfinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/aprfinfogather\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-serverip=127.0.0.1\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"aprfinfogather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"aprfinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aprfinfogather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apservice\\\"},\\\"name\\\":\\\"apservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-supportvlanpoolapversion=3.0.6.1043\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-remote_sftp_url=$(remote_sftp_url)\\\",\\\"-local_sftp_url=$(local_sftp_url)\\\",\\\"-vp=/data/web/download\\\",\\\"-lvu=$(lvu)\\\",\\\"-vu=$(vu)\\\",\\\"-vi=10\\\",\\\"-pl=50\\\",\\\"-maxupgrade=$(maxupgrade)\\\",\\\"-maxdownload=20\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"cspadmin-call\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"cspadmin-call:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apservice:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apstatusgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apstatusgather\\\"},\\\"name\\\":\\\"apstatusgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apstatusgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apstatusgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apstatusgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-servername=\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apstatusgather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apstatusgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apstatusgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"authbroker\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"authbroker\\\"},\\\"name\\\":\\\"authbroker\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"authbroker\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"authbroker\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/authbroker\\\",\\\"-url=$(url)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-ver=1.1.0.0\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-createportalidurl_api=$(createportalidurl_api)\\\",\\\"-push2userportalurl=$(push2userportalurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-hamserverip=$(hamserverip)\\\",\\\"-hamsecret=123456\\\",\\\"-rurl=$(rurl)\\\",\\\"-httpport=8282\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-portalcheckflag=6\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-cmccauthnotifytype=1\\\",\\\"-topicmacauth=WMA/APWMA\\\",\\\"-topicportalauthres=WMA/APWMA\\\",\\\"-topicwdres=WMA/APWMA\\\",\\\"-channelofportalauthresult=1\\\",\\\"-channelofwdresult=1\\\",\\\"-channelofmacauth=1\\\",\\\"-portalauthblockcache=1\\\",\\\"-wdblockcache=1\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-aliyunaccesskeyid=LTAITyGusMTs6xYT\\\",\\\"-aliyunaccesskeysecret=72AyGEgRsR9zGXTPCYerdleZVInmip\\\",\\\"-cmccnasip=$(cmccnasip)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"authbroker:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"authbroker\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":2000,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8282,\\\"name\\\":\\\"port3\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"authbroker:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ca-bridge\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"ca-bridge\\\"},\\\"name\\\":\\\"ca-bridge\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"ca-bridge\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"ca-bridge\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/ca_bridge\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mc=39\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"ca_bridge:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"ca-bridge\\\",\\\"ports\\\":[{\\\"containerPort\\\":8181}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ca_bridge:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientdetail\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientdetail\\\"},\\\"name\\\":\\\"clientdetail\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientdetail\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientdetail\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientdetail\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientdetail:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"clientdetail\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientdetail:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientevent\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientevent\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientevent\\\"},\\\"name\\\":\\\"clientevent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientevent\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientevent\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientevent\\\",\\\"-url=$(url)\\\",\\\"-exchange=client_event_to_statistic\\\",\\\"-username=system\\\",\\\"-password=manager\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-grpcmaxkeepalive=$(grpcmaxkeepalive)\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientevent:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"clientevent\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientevent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientname\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientname\\\"},\\\"name\\\":\\\"clientname\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientname\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientname\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientname\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=127.0.0.1\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientname:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"clientname\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientname:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientstatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientstatistics\\\"},\\\"name\\\":\\\"clientstatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientstatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientstatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientstatistics\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientstatistics:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"clientstatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientstatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"config\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"config\\\"},\\\"name\\\":\\\"config\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"config\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"config\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/config\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-redirectserverip=$(redirectserverip)\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-localhosturl=$(localhosturl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-pl=100\\\",\\\"-redirectAllowedIPNumber=8\\\",\\\"-radiusserver=$(radiusserver)\\\",\\\"-radiuspassword=123456\\\",\\\"-ntpaddr=$(ntpaddr)\\\",\\\"-ntptz=$(ntptz)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-configcheckflag=6\\\",\\\"-qoereportaddress=$(qoereportaddress)\\\",\\\"-authsource=$(authsource)\\\",\\\"-qoestatus=$(qoestatus)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"config:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"config\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"config:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-email\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-email\\\"},\\\"name\\\":\\\"csp-email\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-email\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-email\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx512m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-email-service-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=8870 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(mgoname) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.redis.host=redis --spring.redis.password=Han201818\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-email:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"csp-email\\\",\\\"ports\\\":[{\\\"containerPort\\\":8870}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"csp-email/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-email:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-report\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-report\\\"},\\\"name\\\":\\\"csp-report\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-report\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-report\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx512m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-report-service-1.0.4.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--report.retry.frequency.limit=$(retryLimit) --report.generate.day.limit=$(dayLimit) --quartz.threadPool.threadCount=$(threadCount) --spring.syslog.host=$(syslogserver) --proj.service.version=$(currversion) --grey.config.url=$(greyconfigaddr) --server.port=8881 --spring.redis.host=redis --spring.redis.password=Han201818 --spring.redis.port=6379 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(reportmgoname) --spring.data.mongodb.database=$(reportmgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --csp.report.service.transfer.enable=$(report_transferstate) --mysql.url=jdbc:mysql://mysql:3306/cspadmin_report?useUnicode=true\\\\u0026characterEncoding=utf8\\\\u0026useSSL=false\\\\u0026serverTimezone=Asia/Shanghai --mysql.username=root --mysql.password=Huaxin18273645 --report.service.systemtype=$(systemtype) --report.data.server=http://ca-bridge:8181 --csp.sceneinterface.url=http://ca-bridge:8181 --csp.usercheck.url=http://ca-bridge:8181 --csp.email.service.server=http://csp-email:8870\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-report:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator\\\",\\\"port\\\":8881},\\\"initialDelaySeconds\\\":360,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"csp-report\\\",\\\"ports\\\":[{\\\"containerPort\\\":8881}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp-report\\\"},{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp-report/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T06:09:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-report:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-statistic\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-statistic\\\"},\\\"name\\\":\\\"csp-statistic\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-statistic\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-statistic\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxNewSize=150m -Xmx1024m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-statistic-service-1.0.4.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=8882 --spring.redis.host=redis --spring.redis.password=Han201818 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(mgoname) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --grpc.csp.apservice.host=apservice --grpc.csp.apservice.port=50051 --logging.level.com.hannetworks.microservice.csp.statistic.listener=$(csp_statistic_loglevel)\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-statistic:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator/health\\\",\\\"port\\\":8882},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"csp-statistic\\\",\\\"ports\\\":[{\\\"containerPort\\\":8882}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"csp-statistic/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-statistic:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin\\\"},\\\"name\\\":\\\"cspadmin\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx1024m -Xms1024m -Xmn600m -Xss256k -XX:+PrintHeapAtGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:/data/gc-%t.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=14 -XX:GCLogFileSize=5M -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djdk.tls.rejectClientInitiatedRenegotiation=true\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"cspadmin-service-1.1.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --cspadmin.report.service=http://csp-report:8881 --cspadmin.license.service=$(licenseServerAddr) --portal.server.url=http://cspadmin-portal:8060/Portal --han_networks.microservice.cspadmin.version=$(VERSION) --server.port=8443 --server.ssl.key-store=$(portal.server.ssl.key-store) --han_networks.server.env=$(han_networks.server.env) --spring.redis.host=redis --spring.redis.database=10 --spring.redis.password=Han201818 --spring.data.mongodb.uri=$(spring_data_mongodb_uri) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --grpc.csp.cspadmin.host=cspadmin-call --grpc.csp.cspadmin.port=50051 --grpc.csp.mail.host=mail-manager --grpc.csp.mail.port=50051 --grpc.csp.scene.host=scene --grpc.csp.scene.port=50051 --grpc.csp.apservice.host=apservice --grpc.csp.apservice.port=50051 --grpc.csp.apupgrade.host=apupgrade --grpc.csp.apupgrade.port=50051 --han_networks.microservice.cspadmin.oem=$(proj.portal.oem) --han_networks.microservice.cspadmin.software_type=$(systemtype) --cspadmin.migrate.enable=$(transferstate) --cspadmin.jdbc.url=jdbc:mysql://mysql:3306/cspadmin?characterEncoding=utf-8\\\\u0026useUnicode=true\\\\u0026rewriteBatchedStatements=true\\\\u0026autoReconnect=true\\\\u0026useSSL=false --cspadmin.jdbc.username=root --cspadmin.jdbc.password=Huaxin18273645\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/CSPAdmin/actuator\\\",\\\"port\\\":8082},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"cspadmin\\\",\\\"ports\\\":[{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8082,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"docker-cspadmin/ssl\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"},\\\"name\\\":\\\"cspadmin-call\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/cspadmin_call\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin_call:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"cspadmin-call\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin_call:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx500m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-portalserver-1.1.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--csp.gateway.own.url=$(gateway_url) --spring.syslog.host=$(syslogserver) --han_networks.microservice.project.update.enable=true --proj.portal.oem=$(proj.portal.oem) --server.ssl.key-store=$(portal.server.ssl.key-store) --server.port=8443  --http.port=8060 --spring.data.mongodb.uri=$(spring_data_mongodb_uri) --spring.data.mongodb.database=$(portalmgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.redis.host=redis --spring.redis.password=Han201818 --mysql.url=jdbc:mysql://mysql:3306/cspadmin?useUnicode=true\\\\u0026characterEncoding=utf8\\\\u0026useSSL=false\\\\u0026serverTimezone=Asia/Shanghai --mysql.username=root --mysql.password=Huaxin18273645 --csp.portalserver.transfer.enable=$(transferstate) --proj.portal.softwareType=$(systemtype) --proj.portal.loginByAccountUrl=https://authbroker:8282/portal/authportal --proj.portal.userValidateUrl=http://ca-bridge:8181/portal/haspermission --proj.portal.sessionValidate=false --proj.portal.vercodeUrl=https://authbroker:8282/portal/getmessagecaptcha --proj.portal.wechatDischarged=https://authbroker:8282/portal/wechatdischarged --proj.portal.pcAuthURL=https://authbroker:8282/portal/wechatportalauthpc --proj.portal.wechatAuthURL=https://authbroker:8282/portal/wechatportalauth --proj.portal.qrcode=http://hamqrcode:8282/ham/qrcode --proj.portal.qrcodeState=http://hamqrcode:8282/ham/queryauthstate --proj.portal.advApiGateWay=http://dsp-apigateway:9080\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin-portal:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/Portal/actuator/\\\",\\\"port\\\":8061},\\\"initialDelaySeconds\\\":300,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"ports\\\":[{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8061,\\\"name\\\":\\\"port3\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"Portal/ssl\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin-portal:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"datasynchronization\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"datasynchronization\\\"},\\\"name\\\":\\\"datasynchronization\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"datasynchronization\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"datasynchronization\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/datasynchronization\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-stime=5\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"datasynchronization:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"datasynchronization\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"datasynchronization:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"dispatch\\\"},\\\"name\\\":\\\"dispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"dispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"dispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-mqrid=dispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrtopic=WMA/APWMA\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"adps.UploadSnapshot\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.speedstop\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.speedstart\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.pingstop\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.pingstart\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.portalauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"debuginfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"dispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=256m -Xmx256m -Xmn32m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"dsp-apigateway-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --proj.feign.local.url=dsp-apigateway:9080 --proj.esp.url=http://ca-bridge:8181/ --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --spring.data.mongodb.uri=$(spring_data_mongodb_uri) --spring.data.mongodb.database=$(dspmgoname) --spring.data.mongodb.username=writer --spring.data.mongodb.password=admin123qwe --spring.redis.host=redis --spring.redis.password=Han201818 --system.type=$(systemtype) --csp.licensecheck.url=license:8080 --proj.pvcv.portal_server=../../../\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"advertisement:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator/health\\\",\\\"port\\\":9080},\\\"initialDelaySeconds\\\":300,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"ports\\\":[{\\\"containerPort\\\":9080}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"advertisement:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"exappservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"exappservice\\\"},\\\"name\\\":\\\"exappservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"exappservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"exappservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/exappservice\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"exappservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"exappservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"exappservice:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"exappservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"exappservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"gateway\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"gateway\\\"},\\\"name\\\":\\\"gateway\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"gateway\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"gateway\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx900m -Xms900m -Xss256k -XX:+PrintHeapAtGC -XX:+PrintGCDetails -XX:+PrintGCDateStamps -Xloggc:/data/logs/gc-%t.log -XX:+UseGCLogFileRotation -XX:NumberOfGCLogFiles=14 -XX:GCLogFileSize=5M -XX:+UseParNewGC -XX:+UseConcMarkSweepGC -Djdk.tls.rejectClientInitiatedRenegotiation=true\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-gateway-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.redis.host=192.168.77.227  --spring.redis.port=6379 --spring.redis.password=Han201818 --csp.gateway.page.url=$(login_page_url) --csp.gateway.config.url=$(greyconfigaddr) --csp.gateway.own.url=$(gateway_url) --server.port=10010 --server.ssl.key-store=$(portal.server.ssl.key-store) \\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"gateway:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/gateway/actuator\\\",\\\"port\\\":8082},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"gateway\\\",\\\"ports\\\":[{\\\"containerPort\\\":10010,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8082,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"crt\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T05:52:47Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"gateway:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"greyconfig\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"greyconfig\\\"},\\\"name\\\":\\\"greyconfig\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"greyconfig\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"greyconfig\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"greyconfig\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/greyconfig\\\",\\\"-config=$(greyconfig)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"greyconfig:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"greyconfig\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"mqttproxy/1.1.6.4\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"greyconfig:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"hib\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"hib\\\"},\\\"name\\\":\\\"hib\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"hib\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"hib\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx512m -Xmn100m -Xss256k\\\"}],\\\"image\\\":\\\"hib\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"hib\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"resources\\\":{\\\"limits\\\":{\\\"memory\\\":\\\"2Gi\\\"},\\\"requests\\\":{\\\"memory\\\":\\\"1Gi\\\"}},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/root/springboot/hib\\\",\\\"name\\\":\\\"config\\\",\\\"subPath\\\":\\\"HIB-v0.1/hib\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"config\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"hib\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"},\\\"name\\\":\\\"httpovermqtt\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/httpovermqtt\\\",\\\"-requestTopic=http/request\\\",\\\"-responseTopic=$share/httpovermqtt/http/response\\\",\\\"-mqttBroker=$(mqurl)\\\",\\\"-timeout=120\\\",\\\"-httpport=8081\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-nottest\\\",\\\"-resourcecacher=1\\\",\\\"-randomstaticresourcepattern=[\\\\\\\\w\\\\\\\\W]+\\\\\\\\.[a-z0-9]{5,}\\\\\\\\.[\\\\\\\\w\\\\\\\\W]+\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-blockcachetype=1\\\",\\\"-tracingreporthttpurl=\\\",\\\"-tracingreporttype=1\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"httpovermqtt:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":3,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"httpovermqtt\\\",\\\"ports\\\":[{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port1\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"httpovermqtt:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"infostatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"infostatistics\\\"},\\\"name\\\":\\\"infostatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"infostatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"infostatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/infostatistics\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-servername=\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":50,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientstatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientstatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apstatusgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"infostatistics:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"infostatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"infostatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"jobscheduler\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"jobscheduler\\\"},\\\"name\\\":\\\"jobscheduler\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"jobscheduler\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"jobscheduler\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/jobscheduler\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"terminalinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"terminalinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"aprfinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apstatusgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclientgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"widsapgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"widsclientgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientstatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientstatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"jobscheduler:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"jobscheduler\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"jobscheduler:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"license\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"license\\\"},\\\"name\\\":\\\"license\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"license\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"license\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/license\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-licenseServerAddr=$(licenseServerAddr)\\\",\\\"-licenseurl=$(licenseurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-sampmode=$(sampmode)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-oemiconurl=$(oemiconurl)\\\",\\\"-devicecodepath=$(devicecodepath)\\\",\\\"-adscriptsshuri=$(adscriptsshuri)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-deploy_env=$(deploy_env)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"license:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"license\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051,\\\"name\\\":\\\"grpc\\\"},{\\\"containerPort\\\":8080,\\\"name\\\":\\\"http\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/log\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"log\\\"},{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"log\\\"},{\\\"mountPath\\\":\\\"/root/.ssh\\\",\\\"name\\\":\\\"dotssh\\\",\\\"subPath\\\":\\\"crt/.ssh\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"dotssh\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"license:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"login-nginx\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"login-nginx\\\"},\\\"name\\\":\\\"login-nginx\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"login-nginx\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"login-nginx\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"nginx\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/usr/sbin/nginx\\\",\\\"-g\\\",\\\"daemon off;\\\"],\\\"image\\\":\\\"nginx:1.21.1-alpine\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"login-nginx\\\",\\\"ports\\\":[{\\\"containerPort\\\":4433,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8099,\\\"name\\\":\\\"port3\\\"},{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port4\\\"},{\\\"containerPort\\\":8807,\\\"name\\\":\\\"port5\\\"},{\\\"containerPort\\\":8809,\\\"name\\\":\\\"port6\\\"},{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port7\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port8\\\"},{\\\"containerPort\\\":8889,\\\"name\\\":\\\"port9\\\"},{\\\"containerPort\\\":8899,\\\"name\\\":\\\"port10\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/nginx\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"csp_web_login/nginx\\\"},{\\\"mountPath\\\":\\\"/data/web\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp_web_login\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"conf\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mail-manager\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"mail-manager\\\"},\\\"name\\\":\\\"mail-manager\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"mail-manager\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"mail-manager\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/mail-manager\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"mail-manager:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"mail-manager\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"mail-manager:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"message\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"message\\\"},\\\"name\\\":\\\"message\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"message\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"message\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/message\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"message:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"message\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"message:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/messageforwardcsp\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-consumeoffset=$(consumeoffset)\\\",\\\"-needforward=$(needforward)\\\",\\\"-kccf=$(kccf)\\\",\\\"-kckf=$(kckf)\\\",\\\"-kcf=$(kcf)\\\",\\\"-rkafkaip=$(rkafkaip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"messageforwardcsp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"messageforwardcsp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mqttproxy\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"mqttproxy\\\"},\\\"name\\\":\\\"mqttproxy\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"mqttproxy\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"mqttproxy\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"mqttproxy\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/data/main\\\",\\\"-config=$(greyconfig)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"alpine/microservice\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"mqttproxy\\\",\\\"ports\\\":[{\\\"containerPort\\\":8883,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"mqttproxy/1.1.6.4/\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"neighbor\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"neighbor\\\"},\\\"name\\\":\\\"neighbor\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"neighbor\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"neighbor\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/neighbor\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"neighbor:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"neighbor\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"neighbor:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"nginx\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"nginx\\\"},\\\"name\\\":\\\"nginx\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"nginx\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"nginx\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/usr/sbin/nginx\\\",\\\"-g\\\",\\\"daemon off;\\\"],\\\"image\\\":\\\"nginx:1.21.1-alpine\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"nginx\\\",\\\"ports\\\":[{\\\"containerPort\\\":8808,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8099,\\\"name\\\":\\\"port3\\\"},{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port4\\\"},{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port5\\\"},{\\\"containerPort\\\":8809,\\\"name\\\":\\\"port6\\\"},{\\\"containerPort\\\":8889,\\\"name\\\":\\\"port7\\\"},{\\\"containerPort\\\":8899,\\\"name\\\":\\\"port8\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port9\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/nginx\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"docker-nginx/nginx\\\"},{\\\"mountPath\\\":\\\"/data/web\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"docker-nginx\\\"},{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"conf\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T11:22:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ocagent\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"ocagent\\\"},\\\"name\\\":\\\"ocagent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"ocagent\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"ocagent\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/ocagent\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-vmqkey=$(vmqkey)\\\",\\\"-vmqip=$(vmqip)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"ocagent:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"ocagent\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ocagent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"qoerest\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"qoerest\\\"},\\\"name\\\":\\\"qoerest\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"qoerest\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"qoerest\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/qoerest\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-esaddress=$(esaddress)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-nocheckperurls=/connectionthreshold/_search,/connectionthreshold/_bulk,/systemproperty/_search,/predict_result/_search,/connectionthreshold/_delete_by_query\\\\\\\\?pretty,/connectionthreshold/_doc/[0-9]+\\\",\\\"-esusername=$(esusername)\\\",\\\"-espassword=$(espassword)\\\",\\\"-escacertfile=$(escacertfile)\\\",\\\"-esclientcertfile=$(esclientcertfile)\\\",\\\"-esclientkeyfile=$(esclientkeyfile)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgoname=$(mgoname)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"qoerest:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"qoerest\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"qoerest:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-alpha\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rabbitmq-alpha\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rabbitmq-alpha\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"rabbitmq-alpha\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"image\\\":\\\"rabbitmq\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"rabbitmq-alpha\\\",\\\"ports\\\":[{\\\"containerPort\\\":15672},{\\\"containerPort\\\":5672},{\\\"containerPort\\\":61613}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/rabbitmq/\\\",\\\"name\\\":\\\"nfs\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"nfs\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp/rabbitmq/\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:46:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rabbitmq\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rest-csp\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"rest-csp\\\"},\\\"name\\\":\\\"rest-csp\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"rest-csp\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"rest-csp\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/rest-csp\\\",\\\"-servername=\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-arcf\\\",\\\"-rurl=$(rurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-iov=$(iov)\\\",\\\"-mc=13\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-cspadmin_report=$(cspadmin_report)\\\",\\\"-syslogserver=$(syslogserver)\\\",\\\"-lvu=$(lvu)\\\",\\\"-vu=$(vu)\\\",\\\"-licenseurl=$(licenseurl)\\\",\\\"-usecsp_demo=$(usecsp_demo)\\\",\\\"-localhosturl=$(localhosturl)\\\",\\\"-publicaccount=csp_demo\\\",\\\"-remote_sftp_url=$(remote_sftp_url)\\\",\\\"-local_sftp_url=$(local_sftp_url)\\\",\\\"-d=csp\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"exappservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"exappservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swconfig\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swconfig:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swinfostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swinfostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-push2userportalurl=$(push2userportalurl)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"rest-csp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"rest-csp\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rest-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"scene\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"scene\\\"},\\\"name\\\":\\\"scene\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"scene\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"scene\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/scene\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0}]\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-serverport=50051\\\",\\\"-supportaccount=remotesupport@han-networks.com\\\",\\\"-redislockurl=$(redisurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-cspespwebuiurlprefix=$(cspespwebuiurlprefix)\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-authsource=$(authsource)\\\",\\\"-grpceventsubscriber=[{\\\\\\\"SiteJoin2CorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"],\\\\\\\"SiteLeaveFromCorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"],\\\\\\\"DeleteCorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"]}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"scene:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"scene\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"scene:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swconfig\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swconfig\\\"},\\\"name\\\":\\\"swconfig\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swconfig\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swconfig\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swconfig\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-eventhandlertopicconfig=$share/swconfig//sw/config\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-licensesupportversion=esp\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swconfig:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swconfig\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swconfig:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"},\\\"name\\\":\\\"swinfostatistics\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swinfostatistics\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-swhi=300\\\",\\\"-grpcpoolcfgs=[]\\\",\\\"-eventhandlertopicstatus=$share/swinfostatistics//sw/status\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swinfostatistics:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swinfostatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swinfostatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swservice\\\"},\\\"name\\\":\\\"swservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swservice\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-swhi=300\\\",\\\"-eventhandlertopicstatus=$share/swservice//sw/status\\\",\\\"-eventhandlertopicport=$share/swservice//sw/port\\\",\\\"-eventhandlertopiclient=$share/swservice//sw/client\\\",\\\"-eventhandlertopicvlan=$share/swservice//sw/vlan\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-licensesupportversion=esp\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-swregisteragainstrategy=2\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swservice:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swupgrade\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swupgrade\\\"},\\\"name\\\":\\\"swupgrade\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swupgrade\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swupgrade\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swupgrade\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-swlvu=$(swlvu)\\\",\\\"-swlv=/data/web/download/switch\\\",\\\"-swvu=$(swvu)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-eventhandlertopicstatus=$share/swupgrade//sw/status\\\",\\\"-eventhandlertopicversion=$share/swupgrade//sw/version\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"cspadmin-call\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"cspadmin-call:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swupgrade:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swupgrade\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download/switch\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download/switch\\\"},{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swupgrade:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"systemproperty\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"systemproperty\\\"},\\\"name\\\":\\\"systemproperty\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"systemproperty\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"systemproperty\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/systemproperty\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"systemproperty:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"systemproperty\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"systemproperty:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalcenter\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"terminalcenter\\\"},\\\"name\\\":\\\"terminalcenter\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"terminalcenter\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"terminalcenter\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/terminalcenter\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":3,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"terminalcenter:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"terminalcenter\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalcenter:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"},\\\"name\\\":\\\"terminalinfogather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/terminalinfogather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"terminalinfogather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"terminalinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"toolservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"toolservice\\\"},\\\"name\\\":\\\"toolservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"toolservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"toolservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/toolservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"toolservice:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"toolservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"toolservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"trapdispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"trapdispatch\\\"},\\\"name\\\":\\\"trapdispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"trapdispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"trapdispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=trapdispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/TRAP\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"trapdispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"},\\\"name\\\":\\\"upgradedispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=upgradedispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/RM\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"upgradedispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"uploadaggent\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"uploadaggent\\\"},\\\"name\\\":\\\"uploadaggent\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"uploadaggent\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"uploadaggent\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/uploadaggent\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-qoeftpurl=$(qoeftpurl)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-tftpurl=/tftp\\\",\\\"-kccf=$(kccf)\\\",\\\"-kckf=$(kckf)\\\",\\\"-kcf=$(kcf)\\\",\\\"-rkafkaip=$(rkafkaip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"uploadaggent:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"uploadaggent\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"},{\\\"mountPath\\\":\\\"/tftp\\\",\\\"name\\\":\\\"tftp\\\",\\\"subPath\\\":\\\"tftpboot\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"tftp\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"uploadaggent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"userservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"userservice\\\"},\\\"name\\\":\\\"userservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"userservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"userservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/userservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mc=16\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-servername=\\\",\\\"-sitenum=$(sitenum)\\\",\\\"-corpnum=$(corpnum)\\\",\\\"-serverport=50051\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"userservice:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"userservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"userservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-alpha\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"vernemq-alpha\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"vernemq-alpha\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"vernemq-alpha\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"DOCKER_VERNEMQ_ALLOW_ANONYMOUS\\\",\\\"value\\\":\\\"off\\\"},{\\\"name\\\":\\\"DOCKER_VERNEMQ_USER_system\\\",\\\"value\\\":\\\"manager\\\"}],\\\"image\\\":\\\"vernemq:1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"vernemq-alpha\\\",\\\"ports\\\":[{\\\"containerPort\\\":1883,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8883,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8888,\\\"name\\\":\\\"port3\\\"}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:44:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"vernemq:1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsapgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsapgather\\\"},\\\"name\\\":\\\"widsapgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsapgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsapgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsapgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"widsapgather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"widsapgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsapgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsclientgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsclientgather\\\"},\\\"name\\\":\\\"widsclientgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsclientgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsclientgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsclientgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"widsclientgather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"widsclientgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsclientgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsservice\\\"},\\\"name\\\":\\\"widsservice\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-arcf\\\",\\\"-rurl=$(rurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-rqueuename=msg.wids\\\",\\\"-mc=21\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"alpine/microservice\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"widsservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":27017}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/bin/go\\\",\\\"name\\\":\\\"bin\\\",\\\"subPath\\\":\\\"go\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"bin\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"willdispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"willdispatch\\\"},\\\"name\\\":\\\"willdispatch\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"willdispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"willdispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=willdispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/WILL\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"willdispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"},\\\"name\\\":\\\"wiredclientgather\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/wiredclientgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"wiredclientgather:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"wiredclientgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclientgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclients\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"wiredclients\\\"},\\\"name\\\":\\\"wiredclients\\\",\\\"namespace\\\":\\\"alpha\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"wiredclients\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"wiredclients\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/wiredclients\\\",\\\"-url=$(url)\\\",\\\"-exchange=wired_event_to_statistic\\\",\\\"-username=system\\\",\\\"-password=manager\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"wiredclients:1.1.6.4\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"wiredclients\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclients:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aiops-itt\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"aiops-itt\\\"},\\\"name\\\":\\\"aiops-itt\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"aiops-itt\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"aiops-itt\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx1024m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"aiops-itt-service-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=10011 --mongodb.itt.uri=$(spring_data_mongodb_uri)/$(ittmgoname)  --mongodb.csp.uri=$(spring_data_mongodb_uri)/$(mgoname) --redis.host=redis --redis.port=6379 --redis.password=Han201818 --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --spring.kafka.bootstrap-servers=$(qoereportaddress) --spring.kafka.consumer.group-id=itt-receive-group_$(ittgroupidsuffix) --spring.kafka.ssl.truststore-location=file:///data/server.truststore.jks --grpc.csp.config.host=config --grpc.csp.config.port=50051 --localhost.ip=$(redirectserverip)\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"aiops-itt:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator\\\",\\\"port\\\":10011},\\\"initialDelaySeconds\\\":240,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"aiops-itt\\\",\\\"ports\\\":[{\\\"containerPort\\\":10011,\\\"name\\\":\\\"port1\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"aiops-itt/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aiops-itt:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apinfogather\\\"},\\\"name\\\":\\\"apinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apinfogather\\\",\\\"-gatherinterval=$(apGatherInterval)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-vmqkey=$(vmqkey)\\\",\\\"-vmqip=$(vmqip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apinfogather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"},\\\"name\\\":\\\"aprfinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"aprfinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/aprfinfogather\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-serverip=127.0.0.1\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"aprfinfogather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"aprfinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aprfinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apservice\\\"},\\\"name\\\":\\\"apservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-supportvlanpoolapversion=3.0.6.1043\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-remote_sftp_url=$(remote_sftp_url)\\\",\\\"-local_sftp_url=$(local_sftp_url)\\\",\\\"-vp=/data/web/download\\\",\\\"-lvu=$(lvu)\\\",\\\"-vu=$(vu)\\\",\\\"-vi=10\\\",\\\"-pl=50\\\",\\\"-maxupgrade=$(maxupgrade)\\\",\\\"-maxdownload=20\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"cspadmin-call\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"cspadmin-call:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apservice:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apstatusgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"apstatusgather\\\"},\\\"name\\\":\\\"apstatusgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"apstatusgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"apstatusgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/apstatusgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-servername=\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"apstatusgather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"apstatusgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apstatusgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"authbroker\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"authbroker\\\"},\\\"name\\\":\\\"authbroker\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"authbroker\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"authbroker\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/authbroker\\\",\\\"-url=$(url)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-ver=1.1.0.0\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-createportalidurl_api=$(createportalidurl_api)\\\",\\\"-push2userportalurl=$(push2userportalurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-hamserverip=$(hamserverip)\\\",\\\"-hamsecret=123456\\\",\\\"-rurl=$(rurl)\\\",\\\"-httpport=8282\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-portalcheckflag=6\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-cmccauthnotifytype=1\\\",\\\"-topicmacauth=WMA/APWMA\\\",\\\"-topicportalauthres=WMA/APWMA\\\",\\\"-topicwdres=WMA/APWMA\\\",\\\"-channelofportalauthresult=1\\\",\\\"-channelofwdresult=1\\\",\\\"-channelofmacauth=1\\\",\\\"-portalauthblockcache=1\\\",\\\"-wdblockcache=1\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-aliyunaccesskeyid=LTAITyGusMTs6xYT\\\",\\\"-aliyunaccesskeysecret=72AyGEgRsR9zGXTPCYerdleZVInmip\\\",\\\"-cmccnasip=$(cmccnasip)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"authbroker:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"authbroker\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":2000,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8282,\\\"name\\\":\\\"port3\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"authbroker:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ca-bridge\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"ca-bridge\\\"},\\\"name\\\":\\\"ca-bridge\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"ca-bridge\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"ca-bridge\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/ca_bridge\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mc=39\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"ca_bridge:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"ca-bridge\\\",\\\"ports\\\":[{\\\"containerPort\\\":8181}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ca_bridge:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientdetail\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientdetail\\\"},\\\"name\\\":\\\"clientdetail\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientdetail\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientdetail\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientdetail\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientdetail:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"clientdetail\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientdetail:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientname\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientname\\\"},\\\"name\\\":\\\"clientname\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientname\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientname\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientname\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=127.0.0.1\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientname:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"clientname\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientname:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientstatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"clientstatistics\\\"},\\\"name\\\":\\\"clientstatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"clientstatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"clientstatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/clientstatistics\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"clientstatistics:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"clientstatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientstatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"config\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"config\\\"},\\\"name\\\":\\\"config\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"config\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"config\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/config\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-redirectserverip=$(redirectserverip)\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-localhosturl=$(localhosturl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-pl=100\\\",\\\"-redirectAllowedIPNumber=8\\\",\\\"-radiusserver=$(radiusserver)\\\",\\\"-radiuspassword=123456\\\",\\\"-ntpaddr=$(ntpaddr)\\\",\\\"-ntptz=$(ntptz)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-configcheckflag=6\\\",\\\"-qoereportaddress=$(qoereportaddress)\\\",\\\"-authsource=$(authsource)\\\",\\\"-qoestatus=$(qoestatus)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"config:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"config\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"config:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-email\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-email\\\"},\\\"name\\\":\\\"csp-email\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-email\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-email\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx512m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-email-service-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=8870 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(mgoname) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.redis.host=redis --spring.redis.password=Han201818\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-email:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"csp-email\\\",\\\"ports\\\":[{\\\"containerPort\\\":8870}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"csp-email/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-email:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-report\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-report\\\"},\\\"name\\\":\\\"csp-report\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-report\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-report\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx512m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-report-service-1.0.4.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--quartz.threadPool.threadCount=$(threadCount) --spring.syslog.host=$(syslogserver) --proj.service.version=$(currversion) --grey.config.url=$(greyconfigaddr) --server.port=8881 --spring.redis.host=redis --spring.redis.password=Han201818 --spring.redis.port=6379 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(reportmgoname) --spring.data.mongodb.database=$(reportmgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --csp.report.service.transfer.enable=$(report_transferstate) --mysql.url=jdbc:mysql://mysql:3306/cspadmin_report?useUnicode=true\\\\u0026characterEncoding=utf8\\\\u0026useSSL=false\\\\u0026serverTimezone=Asia/Shanghai --mysql.username=root --mysql.password=Huaxin18273645 --report.service.systemtype=$(systemtype) --report.data.server=http://ca-bridge:8181 --csp.sceneinterface.url=http://ca-bridge:8181 --csp.usercheck.url=http://ca-bridge:8181 --csp.email.service.server=http://csp-email:8870\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-report:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator\\\",\\\"port\\\":8881},\\\"initialDelaySeconds\\\":360,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"csp-report\\\",\\\"ports\\\":[{\\\"containerPort\\\":8881}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp-report\\\"},{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp-report/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:41:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-report:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-statistic\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"csp-statistic\\\"},\\\"name\\\":\\\"csp-statistic\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"csp-statistic\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"csp-statistic\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxNewSize=150m -Xmx1024m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-statistic-service-1.0.4.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --server.port=8882 --spring.redis.host=redis --spring.redis.password=Han201818 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(mgoname) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --grpc.csp.apservice.host=apservice --grpc.csp.apservice.port=50051 --logging.level.com.hannetworks.microservice.csp.statistic.listener=$(csp_statistic_loglevel)\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"csp-statistic:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator/health\\\",\\\"port\\\":8882},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"csp-statistic\\\",\\\"ports\\\":[{\\\"containerPort\\\":8882}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/logs\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"csp-statistic/log\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-statistic:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin\\\"},\\\"name\\\":\\\"cspadmin\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx1024m -Xmn100m -Xss256k -Djdk.tls.rejectClientInitiatedRenegotiation=true\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"cspadmin-service-1.1.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --cspadmin.report.service=http://csp-report:8881 --cspadmin.license.service=$(licenseServerAddr) --portal.server.url=http://cspadmin-portal:8060/Portal --han_networks.microservice.cspadmin.version=$(VERSION) --server.port=8443 --server.ssl.key-store=$(portal.server.ssl.key-store) --han_networks.server.env=$(han_networks.server.env) --spring.redis.host=redis --spring.redis.database=10 --spring.redis.password=Han201818 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(mgoname) --spring.data.mongodb.database=$(mgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --grpc.csp.cspadmin.host=cspadmin-call --grpc.csp.cspadmin.port=50051 --grpc.csp.mail.host=mail-manager --grpc.csp.mail.port=50051 --grpc.csp.scene.host=scene --grpc.csp.scene.port=50051 --grpc.csp.apservice.host=apservice --grpc.csp.apservice.port=50051 --grpc.csp.apupgrade.host=apupgrade --grpc.csp.apupgrade.port=50051 --han_networks.microservice.cspadmin.oem=$(proj.portal.oem) --han_networks.microservice.cspadmin.software_type=$(systemtype) --cspadmin.migrate.enable=$(transferstate) --cspadmin.jdbc.url=jdbc:mysql://mysql:3306/cspadmin?characterEncoding=utf-8\\\\u0026useUnicode=true\\\\u0026rewriteBatchedStatements=true\\\\u0026autoReconnect=true\\\\u0026useSSL=false --cspadmin.jdbc.username=root --cspadmin.jdbc.password=Huaxin18273645\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/CSPAdmin/actuator\\\",\\\"port\\\":8082},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"cspadmin\\\",\\\"ports\\\":[{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8082,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"docker-cspadmin/ssl\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:31Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"},\\\"name\\\":\\\"cspadmin-call\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-call\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/cspadmin_call\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin_call:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"cspadmin-call\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin_call:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"cspadmin-portal\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=120m -Xmx500m -Xmn100m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-portalserver-1.1.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--csp.gateway.own.url=$(gateway_url) --spring.syslog.host=$(syslogserver) --han_networks.microservice.project.update.enable=true --proj.portal.oem=$(proj.portal.oem) --server.ssl.key-store=$(portal.server.ssl.key-store) --server.port=8443  --http.port=8060 --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(portalmgoname) --spring.data.mongodb.database=$(portalmgoname) --spring.data.mongodb.username=$(mgouser) --spring.data.mongodb.password=$(mgopassword) --spring.redis.host=redis --spring.redis.password=Han201818 --mysql.url=jdbc:mysql://mysql:3306/cspadmin?useUnicode=true\\\\u0026characterEncoding=utf8\\\\u0026useSSL=false\\\\u0026serverTimezone=Asia/Shanghai --mysql.username=root --mysql.password=Huaxin18273645 --csp.portalserver.transfer.enable=$(transferstate) --proj.portal.softwareType=$(systemtype) --proj.portal.loginByAccountUrl=https://authbroker:8282/portal/authportal --proj.portal.userValidateUrl=http://ca-bridge:8181/portal/haspermission --proj.portal.sessionValidate=false --proj.portal.vercodeUrl=https://authbroker:8282/portal/getmessagecaptcha --proj.portal.wechatDischarged=https://authbroker:8282/portal/wechatdischarged --proj.portal.pcAuthURL=https://authbroker:8282/portal/wechatportalauthpc --proj.portal.wechatAuthURL=https://authbroker:8282/portal/wechatportalauth --proj.portal.qrcode=http://hamqrcode:8282/ham/qrcode --proj.portal.qrcodeState=http://hamqrcode:8282/ham/queryauthstate --proj.portal.advApiGateWay=http://dsp-apigateway:9080\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"cspadmin-portal:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/Portal/actuator/\\\",\\\"port\\\":8061},\\\"initialDelaySeconds\\\":300,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"cspadmin-portal\\\",\\\"ports\\\":[{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8061,\\\"name\\\":\\\"port3\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"Portal/ssl\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin-portal:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"datasynchronization\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"datasynchronization\\\"},\\\"name\\\":\\\"datasynchronization\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"datasynchronization\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"datasynchronization\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/datasynchronization\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-stime=5\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"datasynchronization:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"datasynchronization\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"datasynchronization:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"dispatch\\\"},\\\"name\\\":\\\"dispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"dispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"dispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-mqrid=dispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrtopic=WMA/APWMA\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"adps.UploadSnapshot\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.speedstop\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.speedstart\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.pingstop\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.pingstart\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.portalauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"debuginfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"dispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"dsp-apigateway\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=256m -Xmx256m -Xmn32m -Xss256k\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"dsp-apigateway-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.syslog.host=$(syslogserver) --proj.feign.local.url=dsp-apigateway:9080 --proj.esp.url=http://ca-bridge:8181/ --spring.rabbitmq.host=rabbitmq --spring.rabbitmq.port=5672 --spring.rabbitmq.username=system --spring.rabbitmq.password=manager --spring.data.mongodb.uri=$(spring_data_mongodb_uri)/$(dspmgoname) --spring.data.mongodb.database=$(dspmgoname) --spring.data.mongodb.username=writer --spring.data.mongodb.password=admin123qwe --spring.redis.host=redis --spring.redis.password=Han201818 --system.type=$(systemtype) --csp.licensecheck.url=license:8080 --proj.pvcv.portal_server=../../../\\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"advertisement:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/actuator/health\\\",\\\"port\\\":9080},\\\"initialDelaySeconds\\\":300,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"dsp-apigateway\\\",\\\"ports\\\":[{\\\"containerPort\\\":9080}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:43:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"advertisement:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"exappservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"exappservice\\\"},\\\"name\\\":\\\"exappservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"exappservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"exappservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/exappservice\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"exappservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"exappservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":500,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"exappservice:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"exappservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"exappservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"gateway\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"gateway\\\"},\\\"name\\\":\\\"gateway\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"gateway\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"gateway\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=200m -Xmx500m -Xms500m -Xss256k -Djdk.tls.rejectClientInitiatedRenegotiation=true\\\"},{\\\"name\\\":\\\"JAR_FILE\\\",\\\"value\\\":\\\"csp-gateway-1.0.1.jar\\\"},{\\\"name\\\":\\\"RUN_ARGS\\\",\\\"value\\\":\\\"--spring.redis.host=r-2ze17460b8a50f34.redis.rds.aliyuncs.com  --spring.redis.port=6379 --spring.redis.password=**123qwe** --csp.gateway.page.url=$(login_page_url) --csp.gateway.config.url=$(greyconfigaddr) --csp.gateway.own.url=$(gateway_url) --server.port=10010 --server.ssl.key-store=$(portal.server.ssl.key-store) \\\"}],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"gateway:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/gateway/actuator\\\",\\\"port\\\":8082},\\\"initialDelaySeconds\\\":180,\\\"periodSeconds\\\":60},\\\"name\\\":\\\"gateway\\\",\\\"ports\\\":[{\\\"containerPort\\\":10010,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8082,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/ssl\\\",\\\"name\\\":\\\"ssl\\\",\\\"subPath\\\":\\\"crt\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"ssl\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"gateway:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"greyconfig\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"greyconfig\\\"},\\\"name\\\":\\\"greyconfig\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"greyconfig\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"greyconfig\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"greyconfig\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/greyconfig\\\",\\\"-config=$(greyconfig)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"greyconfig:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"greyconfig\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"mqttproxy/1.1.6.1\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"greyconfig:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"hib\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"hib\\\"},\\\"name\\\":\\\"hib\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"hib\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"hib\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"JVM_ARGS\\\",\\\"value\\\":\\\"-XX:MaxMetaspaceSize=150m -Xmx512m -Xmn100m -Xss256k\\\"}],\\\"image\\\":\\\"hib\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"hib\\\",\\\"ports\\\":[{\\\"containerPort\\\":38080}],\\\"resources\\\":{\\\"limits\\\":{\\\"memory\\\":\\\"2Gi\\\"},\\\"requests\\\":{\\\"memory\\\":\\\"1Gi\\\"}},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/root/springboot/hib\\\",\\\"name\\\":\\\"config\\\",\\\"subPath\\\":\\\"HIB-v0.1/hib\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"config\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"hib\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"},\\\"name\\\":\\\"httpovermqtt\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"httpovermqtt\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/httpovermqtt\\\",\\\"-requestTopic=http/request\\\",\\\"-responseTopic=$share/httpovermqtt/http/response\\\",\\\"-mqttBroker=$(mqurl)\\\",\\\"-timeout=120\\\",\\\"-httpport=8081\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-nottest\\\",\\\"-resourcecacher=1\\\",\\\"-randomstaticresourcepattern=[\\\\\\\\w\\\\\\\\W]+\\\\\\\\.[a-z0-9]{5,}\\\\\\\\.[\\\\\\\\w\\\\\\\\W]+\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-blockcachetype=1\\\",\\\"-tracingreporthttpurl=\\\",\\\"-tracingreporttype=1\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"httpovermqtt:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":3,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"httpovermqtt\\\",\\\"ports\\\":[{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port1\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"httpovermqtt:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"infostatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"infostatistics\\\"},\\\"name\\\":\\\"infostatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"infostatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"infostatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/infostatistics\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-servername=\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":50,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientstatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientstatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apstatusgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"infostatistics:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"infostatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"infostatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"jobscheduler\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"jobscheduler\\\"},\\\"name\\\":\\\"jobscheduler\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"jobscheduler\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"jobscheduler\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/jobscheduler\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"terminalinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"terminalinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"aprfinfogather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apstatusgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclientgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"widsapgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"widsclientgather\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientstatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientstatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"jobscheduler:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"jobscheduler\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"jobscheduler:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"license\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"license\\\"},\\\"name\\\":\\\"license\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"license\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"license\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/license\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-licenseServerAddr=$(licenseServerAddr)\\\",\\\"-licenseurl=$(licenseurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-sampmode=$(sampmode)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-oemiconurl=$(oemiconurl)\\\",\\\"-devicecodepath=$(devicecodepath)\\\",\\\"-adscriptsshuri=$(adscriptsshuri)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-deploy_env=$(deploy_env)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"license:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"license\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051,\\\"name\\\":\\\"grpc\\\"},{\\\"containerPort\\\":8080,\\\"name\\\":\\\"http\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/log\\\",\\\"name\\\":\\\"log\\\",\\\"subPath\\\":\\\"log\\\"},{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"log\\\"},{\\\"mountPath\\\":\\\"/root/.ssh\\\",\\\"name\\\":\\\"dotssh\\\",\\\"subPath\\\":\\\"crt/.ssh\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"log\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"dotssh\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"license:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"login-nginx\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"login-nginx\\\"},\\\"name\\\":\\\"login-nginx\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"login-nginx\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"login-nginx\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"nginx\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/usr/sbin/nginx\\\",\\\"-g\\\",\\\"daemon off;\\\"],\\\"image\\\":\\\"nginx:1.21.1-alpine\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"login-nginx\\\",\\\"ports\\\":[{\\\"containerPort\\\":4433,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8099,\\\"name\\\":\\\"port3\\\"},{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port4\\\"},{\\\"containerPort\\\":8807,\\\"name\\\":\\\"port5\\\"},{\\\"containerPort\\\":8809,\\\"name\\\":\\\"port6\\\"},{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port7\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port8\\\"},{\\\"containerPort\\\":8889,\\\"name\\\":\\\"port9\\\"},{\\\"containerPort\\\":8899,\\\"name\\\":\\\"port10\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/nginx\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"csp_web_login/nginx\\\"},{\\\"mountPath\\\":\\\"/data/web\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"csp_web_login\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"conf\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:51:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mail-manager\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"mail-manager\\\"},\\\"name\\\":\\\"mail-manager\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"mail-manager\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"mail-manager\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/mail-manager\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"mail-manager:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"mail-manager\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"mail-manager:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"message\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"message\\\"},\\\"name\\\":\\\"message\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"message\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"message\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/message\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"message:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"message\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"message:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"messageforwardcsp\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/messageforwardcsp\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-consumeoffset=$(consumeoffset)\\\",\\\"-needforward=$(needforward)\\\",\\\"-kccf=$(kccf)\\\",\\\"-kckf=$(kckf)\\\",\\\"-kcf=$(kcf)\\\",\\\"-rkafkaip=$(rkafkaip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"messageforwardcsp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"messageforwardcsp\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"messageforwardcsp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mqttproxy\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"mqttproxy\\\"},\\\"name\\\":\\\"mqttproxy\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"mqttproxy\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"mqttproxy\\\"}},\\\"spec\\\":{\\\"affinity\\\":{\\\"podAntiAffinity\\\":{\\\"requiredDuringSchedulingIgnoredDuringExecution\\\":[{\\\"labelSelector\\\":{\\\"matchExpressions\\\":[{\\\"key\\\":\\\"app\\\",\\\"operator\\\":\\\"In\\\",\\\"values\\\":[\\\"mqttproxy\\\"]}]},\\\"topologyKey\\\":\\\"kubernetes.io/hostname\\\"}]}},\\\"containers\\\":[{\\\"command\\\":[\\\"/data/main\\\",\\\"-config=$(greyconfig)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"alpine/microservice\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"mqttproxy\\\",\\\"ports\\\":[{\\\"containerPort\\\":8883,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\",\\\"subPath\\\":\\\"mqttproxy/1.1.6.1/\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"neighbor\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"neighbor\\\"},\\\"name\\\":\\\"neighbor\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"neighbor\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"neighbor\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/neighbor\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"neighbor:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"neighbor\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"neighbor:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"nginx\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"nginx\\\"},\\\"name\\\":\\\"nginx\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"nginx\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"nginx\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/usr/sbin/nginx\\\",\\\"-g\\\",\\\"daemon off;\\\"],\\\"image\\\":\\\"nginx:1.21.1-alpine\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"nginx\\\",\\\"ports\\\":[{\\\"containerPort\\\":8808,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":443,\\\"name\\\":\\\"port2\\\"},{\\\"containerPort\\\":8099,\\\"name\\\":\\\"port3\\\"},{\\\"containerPort\\\":8081,\\\"name\\\":\\\"port4\\\"},{\\\"containerPort\\\":8060,\\\"name\\\":\\\"port5\\\"},{\\\"containerPort\\\":8809,\\\"name\\\":\\\"port6\\\"},{\\\"containerPort\\\":8889,\\\"name\\\":\\\"port7\\\"},{\\\"containerPort\\\":8899,\\\"name\\\":\\\"port8\\\"},{\\\"containerPort\\\":8443,\\\"name\\\":\\\"port9\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/etc/nginx\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"docker-nginx/nginx\\\"},{\\\"mountPath\\\":\\\"/data/web\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"docker-nginx\\\"},{\\\"mountPath\\\":\\\"/data/web/download\\\",\\\"name\\\":\\\"conf\\\",\\\"subPath\\\":\\\"CSPAdmin/download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"conf\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ocagent\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"ocagent\\\"},\\\"name\\\":\\\"ocagent\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"ocagent\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"ocagent\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/ocagent\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-cloudurl=$(cloudurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-rabbitmqurl=$(rabbitmqurl)\\\",\\\"-vmqkey=$(vmqkey)\\\",\\\"-vmqip=$(vmqip)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"ocagent:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"ocagent\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ocagent:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"qoerest\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"qoerest\\\"},\\\"name\\\":\\\"qoerest\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"qoerest\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"qoerest\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/qoerest\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-esaddress=$(esaddress)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-nocheckperurls=/connectionthreshold/_search,/connectionthreshold/_bulk,/systemproperty/_search,/predict_result/_search,/connectionthreshold/_delete_by_query\\\\\\\\?pretty,/connectionthreshold/_doc/[0-9]+\\\",\\\"-esusername=$(esusername)\\\",\\\"-espassword=$(espassword)\\\",\\\"-escacertfile=$(escacertfile)\\\",\\\"-esclientcertfile=$(esclientcertfile)\\\",\\\"-esclientkeyfile=$(esclientkeyfile)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"qoerest:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"qoerest\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"qoerest:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-demo\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rabbitmq-demo\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"rabbitmq-demo\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"rabbitmq-demo\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"image\\\":\\\"rabbitmq\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"rabbitmq-demo\\\",\\\"ports\\\":[{\\\"containerPort\\\":15672},{\\\"containerPort\\\":5672},{\\\"containerPort\\\":61613}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/rabbitmq/\\\",\\\"name\\\":\\\"nfs\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"nfs\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo/rabbitmq/\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rabbitmq\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rest-csp\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"rest-csp\\\"},\\\"name\\\":\\\"rest-csp\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"rest-csp\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"rest-csp\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/rest-csp\\\",\\\"-servername=\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-arcf\\\",\\\"-rurl=$(rurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-iov=$(iov)\\\",\\\"-mc=13\\\",\\\"-createportalidurl=$(createportalidurl_api)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-cspadmin_report=$(cspadmin_report)\\\",\\\"-syslogserver=$(syslogserver)\\\",\\\"-lvu=$(lvu)\\\",\\\"-vu=$(vu)\\\",\\\"-licenseurl=$(licenseurl)\\\",\\\"-usecsp_demo=$(usecsp_demo)\\\",\\\"-localhosturl=$(localhosturl)\\\",\\\"-publicaccount=csp_demo\\\",\\\"-remote_sftp_url=$(remote_sftp_url)\\\",\\\"-local_sftp_url=$(local_sftp_url)\\\",\\\"-d=csp\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"clientdetail\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientdetail:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientevent\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientevent:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clientname\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clientname:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wiredclients\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wiredclients:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"exappservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"exappservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swconfig\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swconfig:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swinfostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swinfostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"message\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"message:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-push2userportalurl=$(push2userportalurl)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"rest-csp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"rest-csp\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080}],\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rest-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"scene\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"scene\\\"},\\\"name\\\":\\\"scene\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"scene\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"scene\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/scene\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"freeradius\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"freeradius:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"authbroker\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"portal\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"portal:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"infostatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"infostatistics:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"timeout\\\\\\\":0}]\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-serverport=50051\\\",\\\"-supportaccount=remotesupport@han-networks.com\\\",\\\"-redislockurl=$(redisurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-cspespwebuiurlprefix=$(cspespwebuiurlprefix)\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-authsource=$(authsource)\\\",\\\"-grpceventsubscriber=[{\\\\\\\"SiteJoin2CorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"],\\\\\\\"SiteLeaveFromCorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"],\\\\\\\"DeleteCorpEvent\\\\\\\":[\\\\\\\"config\\\\\\\"]}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"scene:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"scene\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"scene:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swconfig\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swconfig\\\"},\\\"name\\\":\\\"swconfig\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swconfig\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swconfig\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swconfig\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-eventhandlertopicconfig=$share/swconfig//sw/config\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-licensesupportversion=esp\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swconfig:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swconfig\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swconfig:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"},\\\"name\\\":\\\"swinfostatistics\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swinfostatistics\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swinfostatistics\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-swhi=300\\\",\\\"-grpcpoolcfgs=[]\\\",\\\"-eventhandlertopicstatus=$share/swinfostatistics//sw/status\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swinfostatistics:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swinfostatistics\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swinfostatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swservice\\\"},\\\"name\\\":\\\"swservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swservice\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-serverport=50051\\\",\\\"-servername=\\\",\\\"-swhi=300\\\",\\\"-eventhandlertopicstatus=$share/swservice//sw/status\\\",\\\"-eventhandlertopicport=$share/swservice//sw/port\\\",\\\"-eventhandlertopiclient=$share/swservice//sw/client\\\",\\\"-eventhandlertopicvlan=$share/swservice//sw/vlan\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-licensesupportversion=esp\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-swregisteragainstrategy=2\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swservice:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swupgrade\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"swupgrade\\\"},\\\"name\\\":\\\"swupgrade\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"swupgrade\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"swupgrade\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/swupgrade\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-swlvu=$(swlvu)\\\",\\\"-swlv=/data/web/download/switch\\\",\\\"-swvu=$(swvu)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-eventhandlertopicstatus=$share/swupgrade//sw/status\\\",\\\"-eventhandlertopicversion=$share/swupgrade//sw/version\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"cspadmin-call\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"cspadmin-call:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swupgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swupgrade:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-cf=$(certfile)\\\",\\\"-ck=$(certkey)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"swupgrade:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"swupgrade\\\",\\\"ports\\\":[{\\\"containerPort\\\":8080,\\\"name\\\":\\\"port1\\\"},{\\\"containerPort\\\":50051,\\\"name\\\":\\\"port2\\\"}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data/web/download/switch\\\",\\\"name\\\":\\\"download\\\",\\\"subPath\\\":\\\"CSPAdmin/download/switch\\\"},{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"download\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"download\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swupgrade:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"systemproperty\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"systemproperty\\\"},\\\"name\\\":\\\"systemproperty\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"systemproperty\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"systemproperty\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/systemproperty\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"swservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"swservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"systemproperty:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"systemproperty\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"systemproperty:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalcenter\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"terminalcenter\\\"},\\\"name\\\":\\\"terminalcenter\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"terminalcenter\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"terminalcenter\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/terminalcenter\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":1,\\\\\\\"capacity\\\\\\\":3,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"terminalcenter:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"terminalcenter\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalcenter:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"},\\\"name\\\":\\\"terminalinfogather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"terminalinfogather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/terminalinfogather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"terminalinfogather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"terminalinfogather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"toolservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"toolservice\\\"},\\\"name\\\":\\\"toolservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"toolservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"toolservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/toolservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-servername=\\\",\\\"-serverport=50051\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"toolservice:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"toolservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"toolservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"trapdispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"trapdispatch\\\"},\\\"name\\\":\\\"trapdispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"trapdispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"trapdispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=trapdispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/TRAP\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"trapdispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"},\\\"name\\\":\\\"upgradedispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"upgradedispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=upgradedispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/RM\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"upgradedispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"uploadaggent\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"uploadaggent\\\"},\\\"name\\\":\\\"uploadaggent\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"uploadaggent\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"uploadaggent\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/uploadaggent\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-qoeftpurl=$(qoeftpurl)\\\",\\\"-ftpurl=$(ftpurl)\\\",\\\"-tftpurl=/tftp\\\",\\\"-kccf=$(kccf)\\\",\\\"-kckf=$(kckf)\\\",\\\"-kcf=$(kcf)\\\",\\\"-rkafkaip=$(rkafkaip)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"toolservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"uploadaggent:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"uploadaggent\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/data\\\",\\\"name\\\":\\\"data\\\"},{\\\"mountPath\\\":\\\"/tftp\\\",\\\"name\\\":\\\"tftp\\\",\\\"subPath\\\":\\\"tftpboot\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"data\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}},{\\\"name\\\":\\\"tftp\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"uploadaggent:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"userservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"userservice\\\"},\\\"name\\\":\\\"userservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"userservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"userservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/userservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mc=16\\\",\\\"-ndmgo=$(ndmgo)\\\",\\\"-postgresurl=$(postgresurl)\\\",\\\"-servername=\\\",\\\"-sitenum=$(sitenum)\\\",\\\"-corpnum=$(corpnum)\\\",\\\"-serverport=50051\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-tracingreporthttpurl=$(tracingreporthttpurl)\\\",\\\"-tracingreporttype=$(tracingreporttype)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"mail-manager\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"mail-manager:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"userservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"userservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"userservice:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"userservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"userservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-demo\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"vernemq-demo\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"name\\\":\\\"vernemq-demo\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"vernemq-demo\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"DOCKER_VERNEMQ_ALLOW_ANONYMOUS\\\",\\\"value\\\":\\\"off\\\"},{\\\"name\\\":\\\"DOCKER_VERNEMQ_USER_system\\\",\\\"value\\\":\\\"manager\\\"}],\\\"image\\\":\\\"vernemq:1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"vernemq-demo\\\",\\\"ports\\\":[{\\\"containerPort\\\":1883},{\\\"containerPort\\\":8883},{\\\"containerPort\\\":8888}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"vernemq:1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsapgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsapgather\\\"},\\\"name\\\":\\\"widsapgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsapgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsapgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsapgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"widsapgather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"widsapgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsapgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsclientgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsclientgather\\\"},\\\"name\\\":\\\"widsclientgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsclientgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsclientgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsclientgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"license2\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"license:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"widsclientgather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"widsclientgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsclientgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsservice\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"widsservice\\\"},\\\"name\\\":\\\"widsservice\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"widsservice\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"widsservice\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/widsservice\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-arcf\\\",\\\"-rurl=$(rurl)\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-rqueuename=msg.wids\\\",\\\"-mc=21\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"alpine/microservice\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"name\\\":\\\"widsservice\\\",\\\"ports\\\":[{\\\"containerPort\\\":27017}],\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/bin/go\\\",\\\"name\\\":\\\"bin\\\",\\\"subPath\\\":\\\"go\\\"}]}],\\\"volumes\\\":[{\\\"name\\\":\\\"bin\\\",\\\"nfs\\\":{\\\"path\\\":\\\"/etc/csp-demo\\\",\\\"server\\\":\\\"nfs-server\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"willdispatch\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"willdispatch\\\"},\\\"name\\\":\\\"willdispatch\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"willdispatch\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"willdispatch\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/dispatch\\\",\\\"-grpc=[{\\\\\\\"name\\\\\\\":\\\\\\\"basicinfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"RFService.getBandInfo\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"aprfinfogather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"getCpuAndMemoryStatistics\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apstatusgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"wechat:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"registration\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_ap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsapgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wids.GET_detect_client\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"widsclientgather:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"upgrade\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"ap_manage.exce_command\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"toolservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"trap\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"will\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"eag.wechat\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"wam.MACauth\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"authbroker:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-mqrid=willdispatch-\\\",\\\"-ampurl=$(ampurl)\\\",\\\"-mqrurl=$(mqrurl)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-mqrtopic=WMA/WILL\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"dispatch-csp:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"willdispatch\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"},\\\"name\\\":\\\"wiredclientgather\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"wiredclientgather\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/wiredclientgather\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-mqurl=$(mqurl)\\\",\\\"-anv=$(anv)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-servername=\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"clienttraffic\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"clienttraffic:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"scene\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"scene:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"wiredclientgather:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"wiredclientgather\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclientgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclients\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"wiredclients\\\"},\\\"name\\\":\\\"wiredclients\\\",\\\"namespace\\\":\\\"demo\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"wiredclients\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"wiredclients\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"command\\\":[\\\"/bin/go/microservice/wiredclients\\\",\\\"-url=$(url)\\\",\\\"-exchange=wired_event_to_statistic\\\",\\\"-username=system\\\",\\\"-password=manager\\\",\\\"-mgourl=$(mgourl)\\\",\\\"-mgonew=$(mgonew)\\\",\\\"-mgoname=$(mgoname)\\\",\\\"-mgouser=$(mgouser)\\\",\\\"-mgopassword=$(mgopassword)\\\",\\\"-cspversion=$(systemtype)\\\",\\\"-mgoauthdb=$(mgoname)\\\",\\\"-redisurl=$(redisurl)\\\",\\\"-grpcpoolcfgs=[{\\\\\\\"name\\\\\\\":\\\\\\\"hamservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"hamservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"config\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"config:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"apservice\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"apservice:50051\\\\\\\",\\\\\\\"init\\\\\\\":5,\\\\\\\"capacity\\\\\\\":20,\\\\\\\"idletimeout\\\\\\\":0},{\\\\\\\"name\\\\\\\":\\\\\\\"systemproperty\\\\\\\",\\\\\\\"target\\\\\\\":\\\\\\\"systemproperty:50051\\\\\\\",\\\\\\\"init\\\\\\\":3,\\\\\\\"capacity\\\\\\\":10,\\\\\\\"idletimeout\\\\\\\":0}]\\\",\\\"-go_debug=$(go_debug)\\\",\\\"-logcenteraddr=$(logcenteraddr)\\\",\\\"-greyconfigaddr=$(greyconfigaddr)\\\",\\\"-currversion=$(currversion)\\\"],\\\"envFrom\\\":[{\\\"configMapRef\\\":{\\\"name\\\":\\\"preconfig\\\"}}],\\\"image\\\":\\\"wiredclients:1.1.6.1\\\",\\\"imagePullPolicy\\\":\\\"Never\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"httpHeaders\\\":[{\\\"name\\\":\\\"X-Custom-Header\\\",\\\"value\\\":\\\"Awesome\\\"}],\\\"path\\\":\\\"/health\\\",\\\"port\\\":6666},\\\"initialDelaySeconds\\\":60,\\\"periodSeconds\\\":60,\\\"timeoutSeconds\\\":20},\\\"name\\\":\\\"wiredclients\\\",\\\"ports\\\":[{\\\"containerPort\\\":50051}]}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclients:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-kube-controllers\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"calico-kube-controllers\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"k8s-app\\\":\\\"calico-kube-controllers\\\"},\\\"name\\\":\\\"calico-kube-controllers\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"replicas\\\":1,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"k8s-app\\\":\\\"calico-kube-controllers\\\"}},\\\"strategy\\\":{\\\"type\\\":\\\"Recreate\\\"},\\\"template\\\":{\\\"metadata\\\":{\\\"annotations\\\":{\\\"scheduler.alpha.kubernetes.io/critical-pod\\\":\\\"\\\"},\\\"labels\\\":{\\\"k8s-app\\\":\\\"calico-kube-controllers\\\"},\\\"name\\\":\\\"calico-kube-controllers\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"ETCD_ENDPOINTS\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_endpoints\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_CA_CERT_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_ca\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_KEY_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_key\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_CERT_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_cert\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ENABLED_CONTROLLERS\\\",\\\"value\\\":\\\"policy,namespace,serviceaccount,workloadendpoint,node\\\"}],\\\"image\\\":\\\"calico/kube-controllers:v3.9.3\\\",\\\"name\\\":\\\"calico-kube-controllers\\\",\\\"readinessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"/usr/bin/check-status\\\",\\\"-r\\\"]}},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/calico-secrets\\\",\\\"name\\\":\\\"etcd-certs\\\"}]}],\\\"hostNetwork\\\":true,\\\"nodeSelector\\\":{\\\"beta.kubernetes.io/os\\\":\\\"linux\\\"},\\\"priorityClassName\\\":\\\"system-cluster-critical\\\",\\\"serviceAccountName\\\":\\\"calico-kube-controllers\\\",\\\"tolerations\\\":[{\\\"key\\\":\\\"CriticalAddonsOnly\\\",\\\"operator\\\":\\\"Exists\\\"},{\\\"effect\\\":\\\"NoSchedule\\\",\\\"key\\\":\\\"node-role.kubernetes.io/master\\\"}],\\\"volumes\\\":[{\\\"name\\\":\\\"etcd-certs\\\",\\\"secret\\\":{\\\"defaultMode\\\":256,\\\"secretName\\\":\\\"calico-etcd-secrets\\\"}}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"calico/kube-controllers:v3.9.3\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-dns\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 2,\n      \"desired\": 2,\n      \"running\": 2,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"k8s.gcr.io/coredns:1.2.6\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/revision\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"extensions/v1beta1\\\",\\\"kind\\\":\\\"Deployment\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"app\\\":\\\"kubernetes-dashboard\\\"},\\\"name\\\":\\\"kubernetes-dashboard\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"replicas\\\":3,\\\"revisionHistoryLimit\\\":10,\\\"selector\\\":{\\\"matchLabels\\\":{\\\"app\\\":\\\"kubernetes-dashboard\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"labels\\\":{\\\"app\\\":\\\"kubernetes-dashboard\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"args\\\":null,\\\"image\\\":\\\"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\\\",\\\"imagePullPolicy\\\":\\\"IfNotPresent\\\",\\\"livenessProbe\\\":{\\\"httpGet\\\":{\\\"path\\\":\\\"/\\\",\\\"port\\\":9090},\\\"initialDelaySeconds\\\":30,\\\"timeoutSeconds\\\":30},\\\"name\\\":\\\"kubernetes-dashboard\\\",\\\"ports\\\":[{\\\"containerPort\\\":9090,\\\"protocol\\\":\\\"TCP\\\"}]}],\\\"serviceAccountName\\\":\\\"kubernetes-dashboard\\\",\\\"tolerations\\\":[{\\\"effect\\\":\\\"NoSchedule\\\",\\\"key\\\":\\\"node-role.kubernetes.io/master\\\"}]}}}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:05:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"deployment\"\n     },\n     \"pods\": {\n      \"current\": 3,\n      \"desired\": 3,\n      \"running\": 3,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\"\n     ],\n     \"initContainerImages\": null\n    }\n   ],\n   \"errors\": []\n  },\n  \"replicaSetList\": {\n   \"listMeta\": {\n    \"totalItems\": 122\n   },\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 122,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"replicaSets\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt-84bb9cd488\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aiops-itt\",\n       \"pod-template-hash\": \"84bb9cd488\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aiops-itt:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather-7f47f6c85\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apinfogather\",\n       \"pod-template-hash\": \"7f47f6c85\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apinfogather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather-54d6c6964b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\",\n       \"pod-template-hash\": \"54d6c6964b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aprfinfogather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice-59654f4cc7\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apservice\",\n       \"pod-template-hash\": \"59654f4cc7\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather-7b776894b9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apstatusgather\",\n       \"pod-template-hash\": \"7b776894b9\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apstatusgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker-67b46dbbd7\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"authbroker\",\n       \"pod-template-hash\": \"67b46dbbd7\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"authbroker:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge-5ff8889d47\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ca-bridge\",\n       \"pod-template-hash\": \"5ff8889d47\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ca_bridge:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail-7f8fbdf4b9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientdetail\",\n       \"pod-template-hash\": \"7f8fbdf4b9\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientdetail:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientevent-5f778bd699\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientevent\",\n       \"pod-template-hash\": \"5f778bd699\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientevent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname-64bbcfdb85\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientname\",\n       \"pod-template-hash\": \"64bbcfdb85\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientname:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics-58674bcdbf\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientstatistics\",\n       \"pod-template-hash\": \"58674bcdbf\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientstatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config-74df445fdc\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"config\",\n       \"pod-template-hash\": \"74df445fdc\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"config:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email-6f76fc8784\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-email\",\n       \"pod-template-hash\": \"6f76fc8784\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-email:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report-6c4c6cc6b5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-report\",\n       \"pod-template-hash\": \"6c4c6cc6b5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T06:09:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-report:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic-7459948fd9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-statistic\",\n       \"pod-template-hash\": \"7459948fd9\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-statistic:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-667df7b676\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin\",\n       \"pod-template-hash\": \"667df7b676\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call-65cd54876f\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\",\n       \"pod-template-hash\": \"65cd54876f\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin_call:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal-6c76b95f89\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\",\n       \"pod-template-hash\": \"6c76b95f89\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin-portal:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization-574c85c4d5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"datasynchronization\",\n       \"pod-template-hash\": \"574c85c4d5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"datasynchronization:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch-5f99f67954\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dispatch\",\n       \"pod-template-hash\": \"5f99f67954\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway-6767fb5964\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\",\n       \"pod-template-hash\": \"6767fb5964\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"advertisement:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice-5478c65c\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"exappservice\",\n       \"pod-template-hash\": \"5478c65c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"exappservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway-7d9bf8f75f\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"gateway\",\n       \"pod-template-hash\": \"7d9bf8f75f\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T05:52:47Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"gateway:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig-7f786d5698\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"greyconfig\",\n       \"pod-template-hash\": \"7f786d5698\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"greyconfig:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib-5d489fdcfb\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"hib\",\n       \"pod-template-hash\": \"5d489fdcfb\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"hib\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt-846d4f6b74\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\",\n       \"pod-template-hash\": \"846d4f6b74\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"httpovermqtt:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics-774d96f855\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"infostatistics\",\n       \"pod-template-hash\": \"774d96f855\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"infostatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler-5ffd7bd47c\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"jobscheduler\",\n       \"pod-template-hash\": \"5ffd7bd47c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"jobscheduler:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license-5cd77f8fc4\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"license\",\n       \"pod-template-hash\": \"5cd77f8fc4\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"license:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx-54fd4cb55\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"login-nginx\",\n       \"pod-template-hash\": \"54fd4cb55\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager-55589c87d6\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mail-manager\",\n       \"pod-template-hash\": \"55589c87d6\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"mail-manager:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message-68699686dd\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"message\",\n       \"pod-template-hash\": \"68699686dd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"message:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp-78969858c9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\",\n       \"pod-template-hash\": \"78969858c9\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"messageforwardcsp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy-b47cd77b8\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mqttproxy\",\n       \"pod-template-hash\": \"b47cd77b8\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor-866d4d78b5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"neighbor\",\n       \"pod-template-hash\": \"866d4d78b5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"neighbor:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx-6547d55ffb\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"nginx\",\n       \"pod-template-hash\": \"6547d55ffb\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T11:22:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent-596c9d8c9c\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ocagent\",\n       \"pod-template-hash\": \"596c9d8c9c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ocagent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest-5d4f95bf97\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"qoerest\",\n       \"pod-template-hash\": \"5d4f95bf97\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"qoerest:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-alpha-678d58b9b5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rabbitmq-alpha\",\n       \"pod-template-hash\": \"678d58b9b5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:46:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rabbitmq\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp-79ddf5967b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rest-csp\",\n       \"pod-template-hash\": \"79ddf5967b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rest-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene-85c6b79cd\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"scene\",\n       \"pod-template-hash\": \"85c6b79cd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"scene:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig-67b9666d76\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swconfig\",\n       \"pod-template-hash\": \"67b9666d76\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swconfig:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics-d5b86fd8c\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\",\n       \"pod-template-hash\": \"d5b86fd8c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swinfostatistics:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice-7bdcb75f84\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swservice\",\n       \"pod-template-hash\": \"7bdcb75f84\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade-fc4f64744\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swupgrade\",\n       \"pod-template-hash\": \"fc4f64744\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swupgrade:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty-7c446b5c99\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"systemproperty\",\n       \"pod-template-hash\": \"7c446b5c99\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"systemproperty:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter-7bc78c9f69\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalcenter\",\n       \"pod-template-hash\": \"7bc78c9f69\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalcenter:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather-8497d65b7b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\",\n       \"pod-template-hash\": \"8497d65b7b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice-6c7754558c\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"toolservice\",\n       \"pod-template-hash\": \"6c7754558c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"toolservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch-85dc98f8b8\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"trapdispatch\",\n       \"pod-template-hash\": \"85dc98f8b8\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch-844bcd9f45\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\",\n       \"pod-template-hash\": \"844bcd9f45\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent-77bb74c68\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"uploadaggent\",\n       \"pod-template-hash\": \"77bb74c68\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"uploadaggent:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice-69d794cc4b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"userservice\",\n       \"pod-template-hash\": \"69d794cc4b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"userservice:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-alpha-95bc758f5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"vernemq-alpha\",\n       \"pod-template-hash\": \"95bc758f5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:44:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"vernemq:1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather-78958f594\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsapgather\",\n       \"pod-template-hash\": \"78958f594\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsapgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather-955c6bcc6\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsclientgather\",\n       \"pod-template-hash\": \"955c6bcc6\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsclientgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice-666bfc8ff4\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsservice\",\n       \"pod-template-hash\": \"666bfc8ff4\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch-7bb8ddb65b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"willdispatch\",\n       \"pod-template-hash\": \"7bb8ddb65b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather-c55dc96bd\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\",\n       \"pod-template-hash\": \"c55dc96bd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclientgather:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients-6c8dc59675\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclients\",\n       \"pod-template-hash\": \"6c8dc59675\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclients:1.1.6.4\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt-77b8db9487\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aiops-itt\",\n       \"pod-template-hash\": \"77b8db9487\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aiops-itt:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather-85bf69db\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apinfogather\",\n       \"pod-template-hash\": \"85bf69db\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather-6888cd4b4c\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\",\n       \"pod-template-hash\": \"6888cd4b4c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"aprfinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice-6bfcc9974b\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apservice\",\n       \"pod-template-hash\": \"6bfcc9974b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather-7448595986\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apstatusgather\",\n       \"pod-template-hash\": \"7448595986\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"apstatusgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker-66856c6648\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"authbroker\",\n       \"pod-template-hash\": \"66856c6648\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"authbroker:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge-77d498549d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ca-bridge\",\n       \"pod-template-hash\": \"77d498549d\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ca_bridge:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail-57579496bb\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientdetail\",\n       \"pod-template-hash\": \"57579496bb\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientdetail:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname-b4bc6b6f8\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientname\",\n       \"pod-template-hash\": \"b4bc6b6f8\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientname:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics-7897dddb58\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientstatistics\",\n       \"pod-template-hash\": \"7897dddb58\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"clientstatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config-7985f75586\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"config\",\n       \"pod-template-hash\": \"7985f75586\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"config:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email-778778cc59\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-email\",\n       \"pod-template-hash\": \"778778cc59\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-email:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report-7fb6db9dcc\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-report\",\n       \"pod-template-hash\": \"7fb6db9dcc\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:41:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-report:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic-7c857f6c98\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-statistic\",\n       \"pod-template-hash\": \"7c857f6c98\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"csp-statistic:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-89896cf55\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin\",\n       \"pod-template-hash\": \"89896cf55\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:31Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call-846686b794\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\",\n       \"pod-template-hash\": \"846686b794\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin_call:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal-685b48c8b8\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\",\n       \"pod-template-hash\": \"685b48c8b8\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"cspadmin-portal:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization-68c67868c8\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"datasynchronization\",\n       \"pod-template-hash\": \"68c67868c8\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"datasynchronization:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch-5b54898857\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dispatch\",\n       \"pod-template-hash\": \"5b54898857\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway-6d76789f46\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\",\n       \"pod-template-hash\": \"6d76789f46\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:43:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"advertisement:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice-7b7564588\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"exappservice\",\n       \"pod-template-hash\": \"7b7564588\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"exappservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway-55f4754d4c\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"gateway\",\n       \"pod-template-hash\": \"55f4754d4c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"gateway:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig-8586cbfd5b\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"greyconfig\",\n       \"pod-template-hash\": \"8586cbfd5b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"greyconfig:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib-54b6d7d5cf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"hib\",\n       \"pod-template-hash\": \"54b6d7d5cf\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"hib\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt-7bc79f5897\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\",\n       \"pod-template-hash\": \"7bc79f5897\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"httpovermqtt:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics-7d9b465cdd\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"infostatistics\",\n       \"pod-template-hash\": \"7d9b465cdd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"infostatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler-58bb6458\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"jobscheduler\",\n       \"pod-template-hash\": \"58bb6458\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"jobscheduler:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license-646f9cdf5\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"license\",\n       \"pod-template-hash\": \"646f9cdf5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"license:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx-85bb865f97\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"login-nginx\",\n       \"pod-template-hash\": \"85bb865f97\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:51:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager-77dc598cdf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mail-manager\",\n       \"pod-template-hash\": \"77dc598cdf\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"mail-manager:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message-69d4b4f77f\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"message\",\n       \"pod-template-hash\": \"69d4b4f77f\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"message:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp-7c4dcb99d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\",\n       \"pod-template-hash\": \"7c4dcb99d\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"messageforwardcsp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy-574b4fb94f\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mqttproxy\",\n       \"pod-template-hash\": \"574b4fb94f\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor-597649c5fb\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"neighbor\",\n       \"pod-template-hash\": \"597649c5fb\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"neighbor:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx-b6b755d5b\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"nginx\",\n       \"pod-template-hash\": \"b6b755d5b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"nginx:1.21.1-alpine\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent-5b8b547576\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ocagent\",\n       \"pod-template-hash\": \"5b8b547576\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"ocagent:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest-54b49f5f4d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"qoerest\",\n       \"pod-template-hash\": \"54b49f5f4d\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"qoerest:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-demo-5d8bf86b77\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rabbitmq-demo\",\n       \"pod-template-hash\": \"5d8bf86b77\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rabbitmq\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp-64674bc6c5\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rest-csp\",\n       \"pod-template-hash\": \"64674bc6c5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"rest-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene-6f45448c4c\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"scene\",\n       \"pod-template-hash\": \"6f45448c4c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"scene:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig-74bb4d4cb7\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swconfig\",\n       \"pod-template-hash\": \"74bb4d4cb7\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swconfig:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics-5cdbc7d8dd\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\",\n       \"pod-template-hash\": \"5cdbc7d8dd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swinfostatistics:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice-5987877ddb\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swservice\",\n       \"pod-template-hash\": \"5987877ddb\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade-57766bc45\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swupgrade\",\n       \"pod-template-hash\": \"57766bc45\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"swupgrade:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty-6b87bf9b6d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"systemproperty\",\n       \"pod-template-hash\": \"6b87bf9b6d\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"systemproperty:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter-7f65d5d7db\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalcenter\",\n       \"pod-template-hash\": \"7f65d5d7db\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalcenter:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather-8497d65b7b\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\",\n       \"pod-template-hash\": \"8497d65b7b\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"terminalinfogather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice-f8db65cd6\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"toolservice\",\n       \"pod-template-hash\": \"f8db65cd6\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"toolservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch-5c878c6499\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"trapdispatch\",\n       \"pod-template-hash\": \"5c878c6499\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch-7844b89d4d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\",\n       \"pod-template-hash\": \"7844b89d4d\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent-68967bd589\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"uploadaggent\",\n       \"pod-template-hash\": \"68967bd589\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"uploadaggent:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice-6d8d469cbf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"userservice\",\n       \"pod-template-hash\": \"6d8d469cbf\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"userservice:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-demo-6f8d9dc748\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"vernemq-demo\",\n       \"pod-template-hash\": \"6f8d9dc748\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"vernemq:1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather-7d49696bf7\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsapgather\",\n       \"pod-template-hash\": \"7d49696bf7\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsapgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather-54bd5f99b5\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsclientgather\",\n       \"pod-template-hash\": \"54bd5f99b5\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"widsclientgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice-db547f8dd\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsservice\",\n       \"pod-template-hash\": \"db547f8dd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"alpine/microservice\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch-7d6c7d8b8c\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"willdispatch\",\n       \"pod-template-hash\": \"7d6c7d8b8c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"dispatch-csp:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather-bdd96cbd9\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\",\n       \"pod-template-hash\": \"bdd96cbd9\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:46Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclientgather:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients-55898694cd\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclients\",\n       \"pod-template-hash\": \"55898694cd\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"2\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:46Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"wiredclients:1.1.6.1\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-kube-controllers-57c59c496c\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"calico-kube-controllers\",\n       \"pod-template-hash\": \"57c59c496c\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"1\",\n       \"deployment.kubernetes.io/max-replicas\": \"1\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:25Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 1,\n      \"desired\": 1,\n      \"running\": 1,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"calico/kube-controllers:v3.9.3\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns-86c58d9df4\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-dns\",\n       \"pod-template-hash\": \"86c58d9df4\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"2\",\n       \"deployment.kubernetes.io/max-replicas\": \"3\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:29:25Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 2,\n      \"desired\": 2,\n      \"running\": 2,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"k8s.gcr.io/coredns:1.2.6\"\n     ],\n     \"initContainerImages\": null\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-5f45977c55\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\",\n       \"pod-template-hash\": \"5f45977c55\"\n      },\n      \"annotations\": {\n       \"deployment.kubernetes.io/desired-replicas\": \"3\",\n       \"deployment.kubernetes.io/max-replicas\": \"4\",\n       \"deployment.kubernetes.io/revision\": \"1\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:05:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"replicaset\"\n     },\n     \"pods\": {\n      \"current\": 3,\n      \"desired\": 3,\n      \"running\": 3,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"k8s.gcr.io/kubernetes-dashboard-amd64:v1.10.0\"\n     ],\n     \"initContainerImages\": null\n    }\n   ],\n   \"errors\": []\n  },\n  \"jobList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 0,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"jobs\": [],\n   \"errors\": []\n  },\n  \"cronJobList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"cumulativeMetrics\": [],\n   \"items\": [],\n   \"status\": {\n    \"running\": 0,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"errors\": []\n  },\n  \"replicationControllerList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 0,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"replicationControllers\": [],\n   \"errors\": []\n  },\n  \"podList\": {\n   \"listMeta\": {\n    \"totalItems\": 140\n   },\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 136,\n    \"pending\": 0,\n    \"failed\": 4,\n    \"succeeded\": 0\n   },\n   \"pods\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt-84bb9cd488-2t57b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aiops-itt\",\n       \"pod-template-hash\": \"84bb9cd488\"\n      },\n      \"creationTimestamp\": \"2022-07-04T06:47:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T06:48:02Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather-7f47f6c85-8sgpb\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apinfogather\",\n       \"pod-template-hash\": \"7f47f6c85\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:26Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 214,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather-54d6c6964b-qbpzz\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\",\n       \"pod-template-hash\": \"54d6c6964b\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:57Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice-59654f4cc7-92gzx\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apservice\",\n       \"pod-template-hash\": \"59654f4cc7\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:53Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 190,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather-7b776894b9-wswlc\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"apstatusgather\",\n       \"pod-template-hash\": \"7b776894b9\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:58Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker-67b46dbbd7-fvn95\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"authbroker\",\n       \"pod-template-hash\": \"67b46dbbd7\"\n      },\n      \"creationTimestamp\": \"2022-07-04T08:37:49Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:16Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 152,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge-5ff8889d47-hq2dc\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ca-bridge\",\n       \"pod-template-hash\": \"5ff8889d47\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:28Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail-7f8fbdf4b9-9q9v9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientdetail\",\n       \"pod-template-hash\": \"7f8fbdf4b9\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:58Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientevent-5f778bd699-p6ffc\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientevent\",\n       \"pod-template-hash\": \"5f778bd699\"\n      },\n      \"creationTimestamp\": \"2022-07-04T07:50:49Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:30:57Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 5,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname-64bbcfdb85-79776\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientname\",\n       \"pod-template-hash\": \"64bbcfdb85\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:58Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics-58674bcdbf-5p7hb\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"clientstatistics\",\n       \"pod-template-hash\": \"58674bcdbf\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:58Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config-74df445fdc-8lsrb\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"config\",\n       \"pod-template-hash\": \"74df445fdc\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:03:07Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:43:10Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 105,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email-6f76fc8784-zm5nm\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-email\",\n       \"pod-template-hash\": \"6f76fc8784\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:44:49Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report-6c4c6cc6b5-7nls9\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-report\",\n       \"pod-template-hash\": \"6c4c6cc6b5\"\n      },\n      \"creationTimestamp\": \"2022-07-04T14:25:07Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:41:52Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 70,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic-7459948fd9-wwwhr\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"csp-statistic\",\n       \"pod-template-hash\": \"7459948fd9\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:28Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 124,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-667df7b676-77sgh\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin\",\n       \"pod-template-hash\": \"667df7b676\"\n      },\n      \"creationTimestamp\": \"2022-07-04T13:05:52Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T13:10:59Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 1,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call-65cd54876f-qm2x7\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\",\n       \"pod-template-hash\": \"65cd54876f\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:49Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 102,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal-6c76b95f89-9mj8n\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\",\n       \"pod-template-hash\": \"6c76b95f89\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:44:53Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization-574c85c4d5-zhfll\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"datasynchronization\",\n       \"pod-template-hash\": \"574c85c4d5\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:55Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:02Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 106,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch-5f99f67954-nspgj\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dispatch\",\n       \"pod-template-hash\": \"5f99f67954\"\n      },\n      \"creationTimestamp\": \"2022-07-04T06:42:20Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:03:33Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 4,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway-6767fb5964-2xjlq\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\",\n       \"pod-template-hash\": \"6767fb5964\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:50Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 206,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice-5478c65c-ck99d\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"exappservice\",\n       \"pod-template-hash\": \"5478c65c\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:27:52Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:28:28Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway-7d9bf8f75f-bv54z\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"gateway\",\n       \"pod-template-hash\": \"7d9bf8f75f\"\n      },\n      \"creationTimestamp\": \"2022-06-27T05:52:47Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:53:20Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig-7f786d5698-tmphd\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"greyconfig\",\n       \"pod-template-hash\": \"7f786d5698\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:44:56Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib-5d489fdcfb-7vffz\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"hib\",\n       \"pod-template-hash\": \"5d489fdcfb\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:22Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T04:56:24Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt-846d4f6b74-t28mn\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\",\n       \"pod-template-hash\": \"846d4f6b74\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-30T17:01:10Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 1,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics-774d96f855-rsbsm\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"infostatistics\",\n       \"pod-template-hash\": \"774d96f855\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:09:59Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler-5ffd7bd47c-8jh47\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"jobscheduler\",\n       \"pod-template-hash\": \"5ffd7bd47c\"\n      },\n      \"creationTimestamp\": \"2022-07-04T05:46:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T05:46:43Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license-5cd77f8fc4-g8569\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"license\",\n       \"pod-template-hash\": \"5cd77f8fc4\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:56Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:17Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 262,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx-54fd4cb55-psqcw\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"login-nginx\",\n       \"pod-template-hash\": \"54fd4cb55\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:48:19Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 15,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager-55589c87d6-qfnw4\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mail-manager\",\n       \"pod-template-hash\": \"55589c87d6\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:53:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:09Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 52,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message-68699686dd-pl85k\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"message\",\n       \"pod-template-hash\": \"68699686dd\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:01Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp-78969858c9-xf4ws\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\",\n       \"pod-template-hash\": \"78969858c9\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:19:47Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:52Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 33,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy-b47cd77b8-q8szz\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"mqttproxy\",\n       \"pod-template-hash\": \"b47cd77b8\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:56:23Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:44:56Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor-866d4d78b5-5sjvm\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"neighbor\",\n       \"pod-template-hash\": \"866d4d78b5\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:46:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:35Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 39,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx-6547d55ffb-qxrwr\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"nginx\",\n       \"pod-template-hash\": \"6547d55ffb\"\n      },\n      \"creationTimestamp\": \"2022-06-28T11:22:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T11:22:36Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent-596c9d8c9c-7fpcc\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"ocagent\",\n       \"pod-template-hash\": \"596c9d8c9c\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:40:21Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:13Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 53,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest-5d4f95bf97-8g45x\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"qoerest\",\n       \"pod-template-hash\": \"5d4f95bf97\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:57Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:02Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-alpha-678d58b9b5-4hj5g\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rabbitmq-alpha\",\n       \"pod-template-hash\": \"678d58b9b5\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:27:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:27:41Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp-79ddf5967b-thh52\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"rest-csp\",\n       \"pod-template-hash\": \"79ddf5967b\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:28:05Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T12:28:07Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene-85c6b79cd-nmqgg\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"scene\",\n       \"pod-template-hash\": \"85c6b79cd\"\n      },\n      \"creationTimestamp\": \"2022-07-04T10:21:09Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:15Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 95,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig-67b9666d76-qchdf\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swconfig\",\n       \"pod-template-hash\": \"67b9666d76\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:23:08Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T12:23:10Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics-d5b86fd8c-tqjpf\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\",\n       \"pod-template-hash\": \"d5b86fd8c\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:51Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:05Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 220,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice-7bdcb75f84-2klm5\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swservice\",\n       \"pod-template-hash\": \"7bdcb75f84\"\n      },\n      \"creationTimestamp\": \"2022-07-04T10:28:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:05Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 42,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade-fc4f64744-9r95g\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"swupgrade\",\n       \"pod-template-hash\": \"fc4f64744\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:53:10Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:29Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 52,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty-7c446b5c99-dvqq7\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"systemproperty\",\n       \"pod-template-hash\": \"7c446b5c99\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:58Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:02Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter-7bc78c9f69-d5jkd\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalcenter\",\n       \"pod-template-hash\": \"7bc78c9f69\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:13:28Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:27:55Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 1,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather-8497d65b7b-gcpb8\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\",\n       \"pod-template-hash\": \"8497d65b7b\"\n      },\n      \"creationTimestamp\": \"2022-07-04T06:46:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T06:46:39Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice-6c7754558c-nf2sr\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"toolservice\",\n       \"pod-template-hash\": \"6c7754558c\"\n      },\n      \"creationTimestamp\": \"2022-07-04T09:20:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T09:20:14Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch-85dc98f8b8-ndt7b\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"trapdispatch\",\n       \"pod-template-hash\": \"85dc98f8b8\"\n      },\n      \"creationTimestamp\": \"2022-07-04T05:57:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:03:55Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 4,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch-844bcd9f45-46vlk\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\",\n       \"pod-template-hash\": \"844bcd9f45\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:03:56Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 10,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent-77bb74c68-kmht4\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"uploadaggent\",\n       \"pod-template-hash\": \"77bb74c68\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:13:26Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:12Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 67,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice-69d794cc4b-gmdg8\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"userservice\",\n       \"pod-template-hash\": \"69d794cc4b\"\n      },\n      \"creationTimestamp\": \"2022-07-04T10:56:19Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:18Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 137,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-alpha-95bc758f5-zz9hz\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"vernemq-alpha\",\n       \"pod-template-hash\": \"95bc758f5\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:58:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:00:07Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 3,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather-78958f594-4n4db\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsapgather\",\n       \"pod-template-hash\": \"78958f594\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:03Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather-955c6bcc6-7gj2l\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsclientgather\",\n       \"pod-template-hash\": \"955c6bcc6\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:09:59Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-28T10:10:01Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice-666bfc8ff4-b45td\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"widsservice\",\n       \"pod-template-hash\": \"666bfc8ff4\"\n      },\n      \"creationTimestamp\": \"2022-06-27T04:55:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T05:44:48Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch-7bb8ddb65b-smsxr\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"willdispatch\",\n       \"pod-template-hash\": \"7bb8ddb65b\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:12:37Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:03:57Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 10,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather-c55dc96bd-gndfx\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\",\n       \"pod-template-hash\": \"c55dc96bd\"\n      },\n      \"creationTimestamp\": \"2022-07-04T06:46:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T06:46:04Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients-6c8dc59675-n4tq4\",\n      \"namespace\": \"alpha\",\n      \"labels\": {\n       \"app\": \"wiredclients\",\n       \"pod-template-hash\": \"6c8dc59675\"\n      },\n      \"creationTimestamp\": \"2022-06-28T10:10:00Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:28:48Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 3,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aiops-itt-77b8db9487-k9nx6\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aiops-itt\",\n       \"pod-template-hash\": \"77b8db9487\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:19Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apinfogather-85bf69db-vrsx9\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apinfogather\",\n       \"pod-template-hash\": \"85bf69db\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:49Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 556,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"aprfinfogather-6888cd4b4c-6gkcl\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"aprfinfogather\",\n       \"pod-template-hash\": \"6888cd4b4c\"\n      },\n      \"creationTimestamp\": \"2022-07-04T08:27:29Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T08:27:32Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apservice-6bfcc9974b-svpvg\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apservice\",\n       \"pod-template-hash\": \"6bfcc9974b\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:41:27Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 658,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"apstatusgather-7448595986-8nznc\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"apstatusgather\",\n       \"pod-template-hash\": \"7448595986\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:15Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"authbroker-66856c6648-8dnrt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"authbroker\",\n       \"pod-template-hash\": \"66856c6648\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:19Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 1390,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ca-bridge-77d498549d-2p96r\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ca-bridge\",\n       \"pod-template-hash\": \"77d498549d\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:12Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientdetail-57579496bb-dkhc2\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientdetail\",\n       \"pod-template-hash\": \"57579496bb\"\n      },\n      \"creationTimestamp\": \"2022-07-04T14:16:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T14:16:57Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientname-b4bc6b6f8-7gzwt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientname\",\n       \"pod-template-hash\": \"b4bc6b6f8\"\n      },\n      \"creationTimestamp\": \"2022-07-04T14:20:40Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T14:21:15Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"clientstatistics-7897dddb58-v8gtb\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"clientstatistics\",\n       \"pod-template-hash\": \"7897dddb58\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:41Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:14Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"config-7985f75586-wjwsf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"config\",\n       \"pod-template-hash\": \"7985f75586\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:16Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 833,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-email-778778cc59-lj9cj\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-email\",\n       \"pod-template-hash\": \"778778cc59\"\n      },\n      \"creationTimestamp\": \"2022-07-04T13:44:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T13:44:40Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-report-7fb6db9dcc-cgt2z\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-report\",\n       \"pod-template-hash\": \"7fb6db9dcc\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:41:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:41:51Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 590,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"csp-statistic-7c857f6c98-l24jn\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"csp-statistic\",\n       \"pod-template-hash\": \"7c857f6c98\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:47Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 430,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-89896cf55-r9j68\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin\",\n       \"pod-template-hash\": \"89896cf55\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:45:31Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:45:34Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-call-846686b794-mdjj7\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-call\",\n       \"pod-template-hash\": \"846686b794\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:34Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 395,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"cspadmin-portal-685b48c8b8-jnz8d\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"cspadmin-portal\",\n       \"pod-template-hash\": \"685b48c8b8\"\n      },\n      \"creationTimestamp\": \"2022-07-04T11:01:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T11:01:42Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"datasynchronization-68c67868c8-zbqwk\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"datasynchronization\",\n       \"pod-template-hash\": \"68c67868c8\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:25Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 465,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dispatch-5b54898857-qsw2h\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dispatch\",\n       \"pod-template-hash\": \"5b54898857\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:02:40Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 59,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"dsp-apigateway-6d76789f46-m5fz2\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"dsp-apigateway\",\n       \"pod-template-hash\": \"6d76789f46\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:43:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:12Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 872,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"exappservice-7b7564588-4db7v\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"exappservice\",\n       \"pod-template-hash\": \"7b7564588\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:11Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"gateway-55f4754d4c-pqkz2\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"gateway\",\n       \"pod-template-hash\": \"55f4754d4c\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:36:47Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 7,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"greyconfig-8586cbfd5b-ss8x6\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"greyconfig\",\n       \"pod-template-hash\": \"8586cbfd5b\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:24:32Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"hib-54b6d7d5cf-lkzkg\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"hib\",\n       \"pod-template-hash\": \"54b6d7d5cf\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:56Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 409,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"httpovermqtt-7bc79f5897-cr96g\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"httpovermqtt\",\n       \"pod-template-hash\": \"7bc79f5897\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-12T17:01:38Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 2,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"infostatistics-7d9b465cdd-jxv9n\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"infostatistics\",\n       \"pod-template-hash\": \"7d9b465cdd\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:13Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"jobscheduler-58bb6458-w4kdp\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"jobscheduler\",\n       \"pod-template-hash\": \"58bb6458\"\n      },\n      \"creationTimestamp\": \"2022-07-04T05:45:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T05:46:35Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 2,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"license-646f9cdf5-42bnv\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"license\",\n       \"pod-template-hash\": \"646f9cdf5\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:45Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 732,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"login-nginx-85bb865f97-9b5h2\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"login-nginx\",\n       \"pod-template-hash\": \"85bb865f97\"\n      },\n      \"creationTimestamp\": \"2022-07-04T13:44:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T13:44:40Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mail-manager-77dc598cdf-4wzrd\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mail-manager\",\n       \"pod-template-hash\": \"77dc598cdf\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:43Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:52Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 339,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"message-69d4b4f77f-m4w6s\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"message\",\n       \"pod-template-hash\": \"69d4b4f77f\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:24:24Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:24:27Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"messageforwardcsp-7c4dcb99d-5d2mm\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"messageforwardcsp\",\n       \"pod-template-hash\": \"7c4dcb99d\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:39:09Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 223,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"mqttproxy-574b4fb94f-zntb5\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"mqttproxy\",\n       \"pod-template-hash\": \"574b4fb94f\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:24:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:25:03Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"neighbor-597649c5fb-fgg2x\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"neighbor\",\n       \"pod-template-hash\": \"597649c5fb\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:50:49Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:33Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 32,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"nginx-b6b755d5b-rbzx4\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"nginx\",\n       \"pod-template-hash\": \"b6b755d5b\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:13:46Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"ocagent-5b8b547576-mc89b\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"ocagent\",\n       \"pod-template-hash\": \"5b8b547576\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:38Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 389,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"qoerest-54b49f5f4d-nffdt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"qoerest\",\n       \"pod-template-hash\": \"54b49f5f4d\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:16Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rabbitmq-demo-5d8bf86b77-gnjgc\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rabbitmq-demo\",\n       \"pod-template-hash\": \"5d8bf86b77\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:34Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:11:34Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"rest-csp-64674bc6c5-hp6mt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"rest-csp\",\n       \"pod-template-hash\": \"64674bc6c5\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:12Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"scene-6f45448c4c-wtv7l\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"scene\",\n       \"pod-template-hash\": \"6f45448c4c\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:11Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 978,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swconfig-74bb4d4cb7-q4nkx\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swconfig\",\n       \"pod-template-hash\": \"74bb4d4cb7\"\n      },\n      \"creationTimestamp\": \"2022-07-04T15:20:06Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T15:20:40Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swinfostatistics-5cdbc7d8dd-l4wcg\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swinfostatistics\",\n       \"pod-template-hash\": \"5cdbc7d8dd\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:36Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 779,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swservice-5987877ddb-h7fg5\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swservice\",\n       \"pod-template-hash\": \"5987877ddb\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:53Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 332,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"swupgrade-57766bc45-29sbf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"swupgrade\",\n       \"pod-template-hash\": \"57766bc45\"\n      },\n      \"creationTimestamp\": \"2022-07-04T11:52:15Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:38:58Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 40,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"systemproperty-6b87bf9b6d-h58xf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"systemproperty\",\n       \"pod-template-hash\": \"6b87bf9b6d\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:17Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalcenter-7f65d5d7db-9jlwk\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalcenter\",\n       \"pod-template-hash\": \"7f65d5d7db\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:44Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:11Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"terminalinfogather-8497d65b7b-f94vf\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"terminalinfogather\",\n       \"pod-template-hash\": \"8497d65b7b\"\n      },\n      \"creationTimestamp\": \"2022-07-04T10:00:16Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T10:00:19Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"toolservice-f8db65cd6-mwqzv\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"toolservice\",\n       \"pod-template-hash\": \"f8db65cd6\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:19Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"trapdispatch-5c878c6499-9jj8w\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"trapdispatch\",\n       \"pod-template-hash\": \"5c878c6499\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:00:39Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 62,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"upgradedispatch-7844b89d4d-gsp97\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"upgradedispatch\",\n       \"pod-template-hash\": \"7844b89d4d\"\n      },\n      \"creationTimestamp\": \"2022-07-04T14:12:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:03:21Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 3,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"uploadaggent-68967bd589-lln6c\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"uploadaggent\",\n       \"pod-template-hash\": \"68967bd589\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:42:11Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 506,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"userservice-6d8d469cbf-fgvnv\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"userservice\",\n       \"pod-template-hash\": \"6d8d469cbf\"\n      },\n      \"creationTimestamp\": \"2022-07-04T12:58:35Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T15:44:00Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 160,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"vernemq-demo-6f8d9dc748-6wwgr\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"vernemq-demo\",\n       \"pod-template-hash\": \"6f8d9dc748\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:10:03Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:00:23Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 59,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsapgather-7d49696bf7-xzhtq\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsapgather\",\n       \"pod-template-hash\": \"7d49696bf7\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:45Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:17Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsclientgather-54bd5f99b5-v9vxh\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsclientgather\",\n       \"pod-template-hash\": \"54bd5f99b5\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:46Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:18Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"widsservice-db547f8dd-mlfgt\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"widsservice\",\n       \"pod-template-hash\": \"db547f8dd\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:13:12Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:29:56Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"willdispatch-7d6c7d8b8c-bt5sj\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"willdispatch\",\n       \"pod-template-hash\": \"7d6c7d8b8c\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:39Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-06T17:02:51Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 59,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclientgather-bdd96cbd9-27c2k\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclientgather\",\n       \"pod-template-hash\": \"bdd96cbd9\"\n      },\n      \"creationTimestamp\": \"2022-07-04T10:35:36Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-04T10:35:38Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"wiredclients-55898694cd-dcdlb\",\n      \"namespace\": \"demo\",\n      \"labels\": {\n       \"app\": \"wiredclients\",\n       \"pod-template-hash\": \"55898694cd\"\n      },\n      \"creationTimestamp\": \"2022-05-09T08:12:46Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:14:11Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-kube-controllers-57c59c496c-xdncr\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"calico-kube-controllers\",\n       \"pod-template-hash\": \"57c59c496c\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-03-03T23:44:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-27T09:50:40Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 13,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-node-d2xmt\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"5548fbb4ff\",\n       \"k8s-app\": \"calico-node\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-04T10:48:13Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 9,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-node-l5q5g\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"5548fbb4ff\",\n       \"k8s-app\": \"calico-node\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:27Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-06-22T19:37:03Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 9,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-node-m487s\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"5548fbb4ff\",\n       \"k8s-app\": \"calico-node\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-07-05T02:13:02Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-07-05T02:14:06Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns-86c58d9df4-8vgk6\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-dns\",\n       \"pod-template-hash\": \"86c58d9df4\"\n      },\n      \"creationTimestamp\": \"2022-03-03T23:35:09Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-03-04T01:55:35Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"coredns-86c58d9df4-c5w9t\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-dns\",\n       \"pod-template-hash\": \"86c58d9df4\"\n      },\n      \"creationTimestamp\": \"2022-03-03T23:35:06Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-03-04T01:55:12Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-apiserver-node1\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-apiserver\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"31535c613556cdabf829732c15796841\",\n       \"kubernetes.io/config.mirror\": \"31535c613556cdabf829732c15796841\",\n       \"kubernetes.io/config.seen\": \"2022-05-05T11:18:52.571532119+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-05-05T03:18:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Failed\",\n      \"podPhase\": \"Failed\",\n      \"containerStates\": null\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-apiserver-node2\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-apiserver\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"043416ab9651c2089dbbd9559c8e13f3\",\n       \"kubernetes.io/config.mirror\": \"043416ab9651c2089dbbd9559c8e13f3\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T15:07:07.182016377+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:07:07Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-08-11T07:07:08Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-apiserver-node3\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-apiserver\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"ce53414dd38d36cb99887ef9b09a9c90\",\n       \"kubernetes.io/config.mirror\": \"ce53414dd38d36cb99887ef9b09a9c90\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T15:07:13.147826815+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:07:13Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-08-11T07:07:14Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-controller-manager-node1\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-controller-manager\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"9dbf82d9ea22f9164bfccb33abf92d5b\",\n       \"kubernetes.io/config.mirror\": \"9dbf82d9ea22f9164bfccb33abf92d5b\",\n       \"kubernetes.io/config.seen\": \"2022-05-05T11:18:52.571536973+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-05-05T03:18:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Failed\",\n      \"podPhase\": \"Failed\",\n      \"containerStates\": null\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-controller-manager-node2\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-controller-manager\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"cfe58a23b3cd48e6b4e833f0dc3ac698\",\n       \"kubernetes.io/config.mirror\": \"cfe58a23b3cd48e6b4e833f0dc3ac698\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T14:53:27.199325081+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:27Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-04-27T10:44:31Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 6,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-controller-manager-node3\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-controller-manager\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"cfe58a23b3cd48e6b4e833f0dc3ac698\",\n       \"kubernetes.io/config.mirror\": \"cfe58a23b3cd48e6b4e833f0dc3ac698\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T14:53:53.162922434+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-04-29T08:45:05Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 4,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy-dl2cl\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"84cfdd5c48\",\n       \"k8s-app\": \"kube-proxy\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-07-05T01:56:38Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Failed\",\n      \"podPhase\": \"Pending\",\n      \"containerStates\": [\n       {\n        \"waiting\": {\n         \"reason\": \"ImagePullBackOff\",\n         \"message\": \"Back-off pulling image \\\"k8s.gcr.io/kube-proxy:v1.13.2\\\"\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [\n      {\n       \"objectMeta\": {\n        \"creationTimestamp\": null\n       },\n       \"typeMeta\": {},\n       \"message\": \"Error: ImagePullBackOff\",\n       \"sourceComponent\": \"\",\n       \"sourceHost\": \"\",\n       \"object\": \"\",\n       \"count\": 0,\n       \"firstSeen\": null,\n       \"lastSeen\": null,\n       \"reason\": \"Failed\",\n       \"type\": \"Warning\"\n      }\n     ],\n     \"nodeName\": \"node1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy-jlm5k\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"84cfdd5c48\",\n       \"k8s-app\": \"kube-proxy\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-08-11T06:54:25Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy-xm8tt\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"controller-revision-hash\": \"84cfdd5c48\",\n       \"k8s-app\": \"kube-proxy\",\n       \"pod-template-generation\": \"1\"\n      },\n      \"annotations\": {\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:27Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-08-11T06:53:29Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-scheduler-node1\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-scheduler\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.mirror\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.seen\": \"2022-05-05T11:18:52.571538815+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2022-05-05T03:18:54Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Failed\",\n      \"podPhase\": \"Failed\",\n      \"containerStates\": null\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node1\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-scheduler-node2\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-scheduler\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.mirror\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T14:53:27.199334515+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:27Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-05-09T08:04:55Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 6,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-scheduler-node3\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"component\": \"kube-scheduler\",\n       \"tier\": \"control-plane\"\n      },\n      \"annotations\": {\n       \"kubernetes.io/config.hash\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.mirror\": \"9729a196c4723b60ab401eaff722982d\",\n       \"kubernetes.io/config.seen\": \"2021-08-11T14:53:53.162904403+08:00\",\n       \"kubernetes.io/config.source\": \"file\",\n       \"scheduler.alpha.kubernetes.io/critical-pod\": \"\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:53:53Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-04-27T10:44:31Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 4,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-5f45977c55-j27v9\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\",\n       \"pod-template-hash\": \"5f45977c55\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:05:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-08-20T19:48:09Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 3,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node3\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-5f45977c55-jtmdl\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\",\n       \"pod-template-hash\": \"5f45977c55\"\n      },\n      \"creationTimestamp\": \"2022-03-03T23:16:14Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2022-03-03T23:16:17Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 0,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kubernetes-dashboard-5f45977c55-skf96\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"app\": \"kubernetes-dashboard\",\n       \"pod-template-hash\": \"5f45977c55\"\n      },\n      \"creationTimestamp\": \"2021-08-11T07:05:50Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"pod\"\n     },\n     \"podStatus\": {\n      \"status\": \"Running\",\n      \"podPhase\": \"Running\",\n      \"containerStates\": [\n       {\n        \"running\": {\n         \"startedAt\": \"2021-10-14T14:21:37Z\"\n        }\n       }\n      ]\n     },\n     \"restartCount\": 3,\n     \"metrics\": null,\n     \"warnings\": [],\n     \"nodeName\": \"node2\"\n    }\n   ],\n   \"errors\": []\n  },\n  \"daemonSetList\": {\n   \"listMeta\": {\n    \"totalItems\": 2\n   },\n   \"daemonSets\": [\n    {\n     \"objectMeta\": {\n      \"name\": \"calico-node\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"calico-node\"\n      },\n      \"annotations\": {\n       \"deprecated.daemonset.template.generation\": \"1\",\n       \"kubectl.kubernetes.io/last-applied-configuration\": \"{\\\"apiVersion\\\":\\\"apps/v1\\\",\\\"kind\\\":\\\"DaemonSet\\\",\\\"metadata\\\":{\\\"annotations\\\":{},\\\"labels\\\":{\\\"k8s-app\\\":\\\"calico-node\\\"},\\\"name\\\":\\\"calico-node\\\",\\\"namespace\\\":\\\"kube-system\\\"},\\\"spec\\\":{\\\"selector\\\":{\\\"matchLabels\\\":{\\\"k8s-app\\\":\\\"calico-node\\\"}},\\\"template\\\":{\\\"metadata\\\":{\\\"annotations\\\":{\\\"scheduler.alpha.kubernetes.io/critical-pod\\\":\\\"\\\"},\\\"labels\\\":{\\\"k8s-app\\\":\\\"calico-node\\\"}},\\\"spec\\\":{\\\"containers\\\":[{\\\"env\\\":[{\\\"name\\\":\\\"ETCD_ENDPOINTS\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_endpoints\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_CA_CERT_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_ca\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_KEY_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_key\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_CERT_FILE\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_cert\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"CALICO_K8S_NODE_REF\\\",\\\"valueFrom\\\":{\\\"fieldRef\\\":{\\\"fieldPath\\\":\\\"spec.nodeName\\\"}}},{\\\"name\\\":\\\"CALICO_NETWORKING_BACKEND\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"calico_backend\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"CLUSTER_TYPE\\\",\\\"value\\\":\\\"k8s,bgp\\\"},{\\\"name\\\":\\\"IP\\\",\\\"value\\\":\\\"autodetect\\\"},{\\\"name\\\":\\\"IP_AUTODETECTION_METHOD\\\",\\\"value\\\":\\\"can-reach=192.168.77.253\\\"},{\\\"name\\\":\\\"CALICO_IPV4POOL_IPIP\\\",\\\"value\\\":\\\"always\\\"},{\\\"name\\\":\\\"FELIX_IPINIPMTU\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"veth_mtu\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"CALICO_IPV4POOL_CIDR\\\",\\\"value\\\":\\\"10.244.0.0/16\\\"},{\\\"name\\\":\\\"CALICO_DISABLE_FILE_LOGGING\\\",\\\"value\\\":\\\"true\\\"},{\\\"name\\\":\\\"FELIX_DEFAULTENDPOINTTOHOSTACTION\\\",\\\"value\\\":\\\"ACCEPT\\\"},{\\\"name\\\":\\\"FELIX_IPV6SUPPORT\\\",\\\"value\\\":\\\"false\\\"},{\\\"name\\\":\\\"FELIX_LOGSEVERITYSCREEN\\\",\\\"value\\\":\\\"info\\\"},{\\\"name\\\":\\\"FELIX_HEALTHENABLED\\\",\\\"value\\\":\\\"true\\\"}],\\\"image\\\":\\\"calico/node:v3.9.3\\\",\\\"livenessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"/bin/calico-node\\\",\\\"-felix-live\\\"]},\\\"failureThreshold\\\":6,\\\"initialDelaySeconds\\\":10,\\\"periodSeconds\\\":10},\\\"name\\\":\\\"calico-node\\\",\\\"readinessProbe\\\":{\\\"exec\\\":{\\\"command\\\":[\\\"/bin/calico-node\\\",\\\"-felix-ready\\\",\\\"-bird-ready\\\"]},\\\"periodSeconds\\\":10},\\\"resources\\\":{\\\"requests\\\":{\\\"cpu\\\":\\\"250m\\\"}},\\\"securityContext\\\":{\\\"privileged\\\":true},\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/lib/modules\\\",\\\"name\\\":\\\"lib-modules\\\",\\\"readOnly\\\":true},{\\\"mountPath\\\":\\\"/run/xtables.lock\\\",\\\"name\\\":\\\"xtables-lock\\\",\\\"readOnly\\\":false},{\\\"mountPath\\\":\\\"/var/run/calico\\\",\\\"name\\\":\\\"var-run-calico\\\",\\\"readOnly\\\":false},{\\\"mountPath\\\":\\\"/var/lib/calico\\\",\\\"name\\\":\\\"var-lib-calico\\\",\\\"readOnly\\\":false},{\\\"mountPath\\\":\\\"/calico-secrets\\\",\\\"name\\\":\\\"etcd-certs\\\"},{\\\"mountPath\\\":\\\"/var/run/nodeagent\\\",\\\"name\\\":\\\"policysync\\\"}]}],\\\"hostNetwork\\\":true,\\\"initContainers\\\":[{\\\"command\\\":[\\\"/install-cni.sh\\\"],\\\"env\\\":[{\\\"name\\\":\\\"CNI_CONF_NAME\\\",\\\"value\\\":\\\"10-calico.conflist\\\"},{\\\"name\\\":\\\"CNI_NETWORK_CONFIG\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"cni_network_config\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"ETCD_ENDPOINTS\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"etcd_endpoints\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"CNI_MTU\\\",\\\"valueFrom\\\":{\\\"configMapKeyRef\\\":{\\\"key\\\":\\\"veth_mtu\\\",\\\"name\\\":\\\"calico-config\\\"}}},{\\\"name\\\":\\\"SLEEP\\\",\\\"value\\\":\\\"false\\\"}],\\\"image\\\":\\\"calico/cni:v3.9.3\\\",\\\"name\\\":\\\"install-cni\\\",\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/host/opt/cni/bin\\\",\\\"name\\\":\\\"cni-bin-dir\\\"},{\\\"mountPath\\\":\\\"/host/etc/cni/net.d\\\",\\\"name\\\":\\\"cni-net-dir\\\"},{\\\"mountPath\\\":\\\"/calico-secrets\\\",\\\"name\\\":\\\"etcd-certs\\\"}]},{\\\"image\\\":\\\"calico/pod2daemon-flexvol:v3.9.3\\\",\\\"name\\\":\\\"flexvol-driver\\\",\\\"volumeMounts\\\":[{\\\"mountPath\\\":\\\"/host/driver\\\",\\\"name\\\":\\\"flexvol-driver-host\\\"}]}],\\\"nodeSelector\\\":{\\\"beta.kubernetes.io/os\\\":\\\"linux\\\"},\\\"priorityClassName\\\":\\\"system-node-critical\\\",\\\"serviceAccountName\\\":\\\"calico-node\\\",\\\"terminationGracePeriodSeconds\\\":0,\\\"tolerations\\\":[{\\\"effect\\\":\\\"NoSchedule\\\",\\\"operator\\\":\\\"Exists\\\"},{\\\"key\\\":\\\"CriticalAddonsOnly\\\",\\\"operator\\\":\\\"Exists\\\"},{\\\"effect\\\":\\\"NoExecute\\\",\\\"operator\\\":\\\"Exists\\\"}],\\\"volumes\\\":[{\\\"hostPath\\\":{\\\"path\\\":\\\"/lib/modules\\\"},\\\"name\\\":\\\"lib-modules\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/var/run/calico\\\"},\\\"name\\\":\\\"var-run-calico\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/var/lib/calico\\\"},\\\"name\\\":\\\"var-lib-calico\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/run/xtables.lock\\\",\\\"type\\\":\\\"FileOrCreate\\\"},\\\"name\\\":\\\"xtables-lock\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/opt/cni/bin\\\"},\\\"name\\\":\\\"cni-bin-dir\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/etc/cni/net.d\\\"},\\\"name\\\":\\\"cni-net-dir\\\"},{\\\"name\\\":\\\"etcd-certs\\\",\\\"secret\\\":{\\\"defaultMode\\\":256,\\\"secretName\\\":\\\"calico-etcd-secrets\\\"}},{\\\"hostPath\\\":{\\\"path\\\":\\\"/var/run/nodeagent\\\",\\\"type\\\":\\\"DirectoryOrCreate\\\"},\\\"name\\\":\\\"policysync\\\"},{\\\"hostPath\\\":{\\\"path\\\":\\\"/usr/libexec/kubernetes/kubelet-plugins/volume/exec/nodeagent~uds\\\",\\\"type\\\":\\\"DirectoryOrCreate\\\"},\\\"name\\\":\\\"flexvol-driver-host\\\"}]}},\\\"updateStrategy\\\":{\\\"rollingUpdate\\\":{\\\"maxUnavailable\\\":1},\\\"type\\\":\\\"RollingUpdate\\\"}}}\\n\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:42Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"daemonset\"\n     },\n     \"pods\": {\n      \"current\": 3,\n      \"desired\": 3,\n      \"running\": 3,\n      \"pending\": 0,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": []\n     },\n     \"containerImages\": [\n      \"calico/node:v3.9.3\"\n     ],\n     \"initContainerImages\": [\n      \"calico/cni:v3.9.3\",\n      \"calico/pod2daemon-flexvol:v3.9.3\"\n     ]\n    },\n    {\n     \"objectMeta\": {\n      \"name\": \"kube-proxy\",\n      \"namespace\": \"kube-system\",\n      \"labels\": {\n       \"k8s-app\": \"kube-proxy\"\n      },\n      \"annotations\": {\n       \"deprecated.daemonset.template.generation\": \"1\"\n      },\n      \"creationTimestamp\": \"2021-08-11T06:28:30Z\"\n     },\n     \"typeMeta\": {\n      \"kind\": \"daemonset\"\n     },\n     \"pods\": {\n      \"current\": 3,\n      \"desired\": 3,\n      \"running\": 2,\n      \"pending\": 1,\n      \"failed\": 0,\n      \"succeeded\": 0,\n      \"warnings\": [\n       {\n        \"objectMeta\": {\n         \"creationTimestamp\": null\n        },\n        \"typeMeta\": {},\n        \"message\": \"Error: ImagePullBackOff\",\n        \"sourceComponent\": \"\",\n        \"sourceHost\": \"\",\n        \"object\": \"\",\n        \"count\": 0,\n        \"firstSeen\": null,\n        \"lastSeen\": null,\n        \"reason\": \"Failed\",\n        \"type\": \"Warning\"\n       }\n      ]\n     },\n     \"containerImages\": [\n      \"k8s.gcr.io/kube-proxy:v1.13.2\"\n     ],\n     \"initContainerImages\": null\n    }\n   ],\n   \"cumulativeMetrics\": [],\n   \"status\": {\n    \"running\": 1,\n    \"pending\": 0,\n    \"failed\": 1,\n    \"succeeded\": 0\n   },\n   \"errors\": []\n  },\n  \"statefulSetList\": {\n   \"listMeta\": {\n    \"totalItems\": 0\n   },\n   \"status\": {\n    \"running\": 0,\n    \"pending\": 0,\n    \"failed\": 0,\n    \"succeeded\": 0\n   },\n   \"statefulSets\": [],\n   \"cumulativeMetrics\": [],\n   \"errors\": []\n  },\n  \"errors\": null\n }"
            }
          ]
        }
      }
    },
    {
      "URI": "/static/app.58f1fb61.js",
      "Methods": {
        "GET": {
          "Criteria": {
            "Superset": [
              {
                "ID": "GET1",
                "URL_Parameters": "",
                "Headers": {
                  "pragma": "no-cache",
                  "cache-control": "no-cache",
                  "user-agent": "Mozilla/5.0 [en] (X11, U; OpenVAS-VT 21.4.5~dev1)",
                  "accept": "image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, image/png, */*",
                  "accept-language": "en",
                  "accept-charset": "iso-8859-1,*,utf-8"
                },
                "Body": {},
                "Responses": [
                  0
                ]
              }
            ],
            "Subset": []
          },
          "Responses": [
            {
              "Status": "200",
              "Headers": {
                "Accept-Ranges": "bytes",
                "Content-Type": "application/x-javascript",
                "Last-Modified": "Fri, 24 Aug 2018 05:39:29 GMT"
              },
              "Body": "var aa,ba=\"function\"==typeof Object.defineProperties?Object.defineProperty:function(a,b,c){a!=Array.prototype&&a!=Object.prototype&&(a[b]=c.value)},ca=\"undefined\"!=typeof window&&window===this?this:\"undefined\"!=typeof global&&null!=global?global:this;function da(){da=function(){};ca.Symbol||(ca.Symbol=ea)}var ea=function(){var a=0;return function(b){return\"jscomp_symbol_\"+(b||\"\")+a++}}();\nfunction fa(){da();var a=ca.Symbol.iterator;a||(a=ca.Symbol.iterator=ca.Symbol(\"iterator\"));\"function\"!=typeof Array.prototype[a]&&ba(Array.prototype,a,{configurable:!0,writable:!0,value:function(){return ha(this)}});fa=function(){}}function ha(a){var b=0;return ia(function(){return b<a.length?{done:!1,value:a[b++]}:{done:!0}})}function ia(a){fa();a={next:a};a[ca.Symbol.iterator]=function(){return this};return a}function ja(a){fa();var b=a[Symbol.iterator];return b?b.call(a):ha(a)}\nvar ka=\"function\"==typeof Object.create?Object.create:function(a){function b(){}b.prototype=a;return new b},la;if(\"function\"==typeof Object.setPrototypeOf)la=Object.setPrototypeOf;else{var ma;a:{var na={Wa:!0},oa={};try{oa.__proto__=na;ma=oa.Wa;break a}catch(a){}ma=!1}la=ma?function(a,b){a.__proto__=b;if(a.__proto__!==b)throw new TypeError(a+\" is not extensible\");return a}:null}var pa=la;\nfunction qa(a,b){a.prototype=ka(b.prototype);a.prototype.constructor=a;if(pa)pa(a,b);else for(var c in b)if(\"prototype\"!=c)if(Object.defineProperties){var d=Object.getOwnPropertyDescriptor(b,c);d&&Object.defineProperty(a,c,d)}else a[c]=b[c];a.be=b.prototype}function ra(a){if(!(a instanceof Array)){a=ja(a);for(var b,c=[];!(b=a.next()).done;)c.push(b.value);a=c}return a}\nfunction sa(a,b){if(b){for(var c=ca,d=a.split(\".\"),f=0;f<d.length-1;f++){var g=d[f];g in c||(c[g]={});c=c[g]}d=d[d.length-1];f=c[d];g=b(f);g!=f&&null!=g&&ba(c,d,{configurable:!0,writable:!0,value:g})}}function ta(a,b){return Object.prototype.hasOwnProperty.call(a,b)}\nsa(\"WeakMap\",function(a){function b(a){this.a=(g+=Math.random()+1).toString();if(a){da();fa();a=ja(a);for(var b;!(b=a.next()).done;)b=b.value,this.set(b[0],b[1])}}function c(a){ta(a,f)||ba(a,f,{value:{}})}function d(a){var b=Object[a];b&&(Object[a]=function(a){c(a);return b(a)})}if(function(){if(!a||!Object.seal)return!1;try{var b=Object.seal({}),c=Object.seal({}),d=new a([[b,2],[c,3]]);if(2!=d.get(b)||3!=d.get(c))return!1;d[\"delete\"](b);d.set(c,4);return!d.has(b)&&4==d.get(c)}catch(u){return!1}}())return a;\nvar f=\"$jscomp_hidden_\"+Math.random().toString().substring(2);d(\"freeze\");d(\"preventExtensions\");d(\"seal\");var g=0;b.prototype.set=function(a,b){c(a);if(!ta(a,f))throw Error(\"WeakMap key fail: \"+a);a[f][this.a]=b;return this};b.prototype.get=function(a){return ta(a,f)?a[f][this.a]:void 0};b.prototype.has=function(a){return ta(a,f)&&ta(a[f],this.a)};b.prototype[\"delete\"]=function(a){return ta(a,f)&&ta(a[f],this.a)?delete a[f][this.a]:!1};return b});\nsa(\"Map\",function(a){function b(){var a={};return a.F=a.next=a.head=a}function c(a,b){var c=a.a;return ia(function(){if(c){for(;c.head!=a.a;)c=c.F;for(;c.next!=c.head;)return c=c.next,{done:!1,value:b(c)};c=null}return{done:!0,value:void 0}})}function d(a,b){var c=b&&typeof b;\"object\"==c||\"function\"==c?g.has(b)?c=g.get(b):(c=\"\"+ ++h,g.set(b,c)):c=\"p_\"+b;var d=a.b[c];if(d&&ta(a.b,c))for(var f=0;f<d.length;f++){var k=d[f];if(b!==b&&k.key!==k.key||b===k.key)return{id:c,list:d,index:f,v:k}}return{id:c,\nlist:d,index:-1,v:void 0}}function f(a){this.b={};this.a=b();this.size=0;if(a){a=ja(a);for(var c;!(c=a.next()).done;)c=c.value,this.set(c[0],c[1])}}if(function(){if(!a||!a.prototype.entries||\"function\"!=typeof Object.seal)return!1;try{var b=Object.seal({x:4}),c=new a(ja([[b,\"s\"]]));if(\"s\"!=c.get(b)||1!=c.size||c.get({x:4})||c.set({x:4},\"t\")!=c||2!=c.size)return!1;var d=c.entries(),f=d.next();if(f.done||f.value[0]!=b||\"s\"!=f.value[1])return!1;f=d.next();return f.done||4!=f.value[0].x||\"t\"!=f.value[1]||\n!d.next().done?!1:!0}catch(Ea){return!1}}())return a;da();fa();var g=new WeakMap;f.prototype.set=function(a,b){var c=d(this,a);c.list||(c.list=this.b[c.id]=[]);c.v?c.v.value=b:(c.v={next:this.a,F:this.a.F,head:this.a,key:a,value:b},c.list.push(c.v),this.a.F.next=c.v,this.a.F=c.v,this.size++);return this};f.prototype[\"delete\"]=function(a){a=d(this,a);return a.v&&a.list?(a.list.splice(a.index,1),a.list.length||delete this.b[a.id],a.v.F.next=a.v.next,a.v.next.F=a.v.F,a.v.head=null,this.size--,!0):!1};\nf.prototype.clear=function(){this.b={};this.a=this.a.F=b();this.size=0};f.prototype.has=function(a){return!!d(this,a).v};f.prototype.get=function(a){return(a=d(this,a).v)&&a.value};f.prototype.entries=function(){return c(this,function(a){return[a.key,a.value]})};f.prototype.keys=function(){return c(this,function(a){return a.key})};f.prototype.values=function(){return c(this,function(a){return a.value})};f.prototype.forEach=function(a,b){for(var c=this.entries(),d;!(d=c.next()).done;)d=d.value,a.call(b,\nd[1],d[0],this)};f.prototype[Symbol.iterator]=f.prototype.entries;var h=0;return f});sa(\"Object.assign\",function(a){return a?a:function(a,c){for(var b=1;b<arguments.length;b++){var f=arguments[b];if(f)for(var g in f)ta(f,g)&&(a[g]=f[g])}return a}});function ua(a){var b=a.extendPalette(\"blue\",{500:\"326de6\"});a.definePalette(\"kubernetesColorPalette\",b);a.definePalette(\"kubernetesAccentPallete\",b);a.theme(\"default\").primaryPalette(\"kubernetesColorPalette\").accentPalette(\"kubernetesAccentPallete\")}ua.$inject=[\"$mdThemingProvider\"];function va(a){this.error=a};function wa(a){this.a=a}wa.prototype.Vc=function(){return\"login\"===this.a.current.name};wa.prototype.isLoginState=wa.prototype.Vc;wa.$inject=[\"$state\"];function xa(a){this.namespace=a};function ya(a){this.a=a}function za(a){(a=a.data)&&(a=a.kdBreadcrumbs);return a}ya.$inject=[\"$state\"];function Aa(){this.dashboardVersion=\"v1.10.0\";this.gitCommit=\"aa1b6c0c31c4b3b703e16e554a15ed2a019aad47\"}\nAa.prototype.ba=function(){var a=\"##### Steps to reproduce\\n\\x3c!-- Describe all steps needed to reproduce the issue. It is a good place to use numbered list. --\\x3e\\n\\n##### Environment\\n```\\nInstallation method: \\nKubernetes version:\\nDashboard version: \"+(this.dashboardVersion+\"\\nCommit: \"+this.gitCommit+\"\\n```\\n\\n##### Observed result\\n\")+\"\\x3c!-- Describe observed result as precisely as possible. --\\x3e\\n\\n##### Comments\\n\\x3c!-- If you have any comments or more details, put them here. --\\x3e\";return\"https://github.com/kubernetes/dashboard/issues/new?title=\"+\nencodeURIComponent(\"\")+(\"&body=\"+encodeURIComponent(a))};Aa.prototype.getLinkToFeedbackPage=Aa.prototype.ba;Aa.$inject=[\"kdAppConfigService\"];function Ba(){this.dashboardVersion=\"v1.10.0\";this.gitCommit=\"aa1b6c0c31c4b3b703e16e554a15ed2a019aad47\";this.latestCopyrightYear=\"2018\"}Ba.$inject=[\"kdAppConfigService\"];function Ca(a){var b={},c={};a.state(\"about\",{url:\"/about\",parent:\"chrome\",views:(b[\"\"]={controller:Ba,controllerAs:\"$ctrl\",templateUrl:\"about/about.html\"},b[\"actionbar@chrome\"]={controller:Aa,controllerAs:\"$ctrl\",templateUrl:\"about/actionbar.html\"},b),data:(c.kdBreadcrumbs={label:Da},c)})}Ca.$inject=[\"$stateProvider\"];var Da=\"About\";var Fa=angular.module(\"kubernetesDashboard.about\",[\"ngMaterial\",\"ui.router\"]).config(Ca);function Ga(a,b,c,d){this.b=a;this.c=c;this.a=d;this.newNamespace=b}Ga.prototype.cancel=function(){this.b.cancel();var a={};this.a.go(\"overview\",(a.namespace=this.ra(),a))};Ga.prototype.cancel=Ga.prototype.cancel;Ga.prototype.X=function(){this.b.hide();var a={};this.a.go(this.c.state,(a.namespace=this.newNamespace,a))};Ga.prototype.changeNamespace=Ga.prototype.X;Ga.prototype.ra=function(){return this.a.params.namespace};Ga.prototype.currentNamespace=Ga.prototype.ra;\nGa.$inject=[\"$mdDialog\",\"newNamespace\",\"kdFutureStateService\",\"$state\"];var Ha=/^([a-z0-9]([-a-z0-9]*[a-z0-9])?|_all)$/;function e(a,b,c,d,f,g,h,k,D){this.namespaces=[];this.ALL_NAMESPACES=\"_all\";this.a=!1;this.s=a;this.c=b;this.w=c;this.b=d;this.j=f;this.i18n=Ia;this.h=g;this.B=h;this.D=k;this.g=D}e.prototype.$onInit=function(){var a=this;this.h.find(\"input\").on(\"keydown\",function(a){a.stopPropagation()});Ja(this,this.b.params);this.w.$watch(function(){return a.b.params},function(b){Ja(a,b)})};e.prototype.$onInit=e.prototype.$onInit;\ne.prototype.Hd=function(){if(0<this.namespaceInput.length){this.selectedNamespace=this.namespaceInput;this.namespaceInput=\"\";this.D.hide();var a={};this.c.go(\".\",(a.namespace=this.selectedNamespace,a))}};e.prototype.selectNamespace=e.prototype.Hd;\nfunction Ja(a,b){if(b){var c=b.namespace;c?a.a&&0<a.namespaces.length?a.selectedNamespace=0<=a.namespaces.indexOf(c)||\"_all\"===c?c:\"default\":Ha.test(c)?a.selectedNamespace=c:a.selectedNamespace=\"default\":a.selectedNamespace=\"default\"}else a.selectedNamespace=\"default\";b&&b.namespace&&b.objectNamespace&&\"_all\"!==b.namespace&&b.namespace!==b.objectNamespace&&a.j.show({controller:Ga,controllerAs:\"$ctrl\",clickOutsideToClose:!1,templateUrl:\"common/namespace/dialog.html\",locals:{newNamespace:b.objectNamespace}})}\ne.prototype.jb=function(){var a=this.selectedNamespace;return\"_all\"===a?this.i18n.MSG_ALL_NAMESPACES:a};e.prototype.formatNamespace=e.prototype.jb;e.prototype.X=function(){this.namespaceInput=\"\";var a={};this.c.go(\".\",(a.namespace=this.selectedNamespace,a))};e.prototype.changeNamespace=e.prototype.X;e.prototype.kd=function(){var a=this;Ka(this);if(!this.a)return this.s(\"api/v1/namespace\").get().$promise.then(function(b){a.namespaces=b.namespaces.map(function(a){return a.objectMeta.name});a.a=!0})};\ne.prototype.loadNamespacesIfNeeded=e.prototype.kd;function Ka(a){a.B(function(){a.g.find(\"md-select-menu\").find(\"input\")[0].focus()},150)}e.$inject=\"$resource $state $scope kdFutureStateService $mdDialog $element $timeout $mdSelect $document\".split(\" \");var La={controller:e,templateUrl:\"common/namespace/namespaceselect.html\"},Ia={MSG_ALL_NAMESPACES:\"All namespaces\",MSG_NAMESPACE_SELECT_ARIA_LABEL:\"Selector for namespaces\"};function Ma(a){this.a=a}Ma.prototype.f=function(){return\"_all\"===this.a.namespace};Ma.$inject=[\"$stateParams\"];var l=angular.module(\"kubernetesDashboard.common.namespace\",[\"ngMaterial\",\"ngResource\",\"ui.router\"]).component(\"kdNamespaceSelect\",La).service(\"kdNamespaceService\",Ma).run(Na);function Na(a,b,c){function d(){var a=c.transition;if(!a)return!0;if(void 0===a.params().namespace&&\"login\"!==a.to().name){var b={};return c.target(a.to(),(b.namespace=\"default\",b))}return!0}b.onEnter({},function(){return d()})}Na.$inject=[\"$location\",\"$transitions\",\"$state\"];var Oa={NAME:\"name\",STATUS:\"status\",AGE:\"creationTimestamp\"};function m(a){this.c=a;this.h=1;this.j=Oa.AGE;this.b=this.g=this.a=\"\";return this}m.prototype.Id=function(a){this.c=a;return this};m.prototype.setItemsPerPage=m.prototype.Id;m.prototype.Pa=function(a){this.h=a;return this};m.prototype.setPage=m.prototype.Pa;m.prototype.Qa=function(a){this.j=a;return this};m.prototype.setSortBy=m.prototype.Qa;m.prototype.Na=function(a){this.s=a;return this};m.prototype.setAscending=m.prototype.Na;\nm.prototype.oa=function(a){a||(a=\"\");this.a=a;return this};m.prototype.setNamespace=m.prototype.oa;m.prototype.Oa=function(a){this.g=a;return this};m.prototype.setName=m.prototype.Oa;m.prototype.na=function(a){this.b=a;return this};m.prototype.setFilterBy=m.prototype.na;m.prototype.I=function(){var a=this.b;return{itemsPerPage:this.c,page:this.h,sortBy:(this.s?\"a\":\"d\")+\",\"+this.j,namespace:this.a,name:this.g,filterBy:0<a.length?\"name,\"+a:\"\"}};m.prototype.build=m.prototype.I;var Pa={PAGINATE:0,SORT:1,FILTER:2};function n(a,b,c,d){this.b=new Map;this.c=b;this.actions_=Pa;this.a=c;this.g=d}n.prototype.U=function(a){return this.b.has(a)};n.prototype.isRegistered=n.prototype.U;n.prototype.W=function(a){this.b.set(a,this.M().I())};n.prototype.registerInstance=n.prototype.W;\nfunction Qa(a,b,c,d,f){var g=a.b.get(c),h=a.a.objectName||g.name,k=a.a.objectNamespace||a.a.namespace||g.namespace;if(!g)throw Error(\"Data select query for given data select id \"+c+\" does not exist\");\"_all\"===k&&(k=\"\");g.name=d.name||h;g.namespace=d.namespace||k;switch(f){case a.actions_.PAGINATE:g.itemsPerPage=d.itemsPerPage;g.page=d.page;break;case a.actions_.SORT:g.sortBy=d.sortBy;break;case a.actions_.FILTER:g.filterBy=d.filterBy,g.page=1,a.g.setCurrentPage(c,1)}a.b.set(c,g);c=g;a.a.q&&(c.filterBy&&\n(c.filterBy+=\",\"),c.filterBy+=\"name,\"+a.a.q);return b.get(c).$promise}n.prototype.La=function(a,b,c){return Qa(this,a,b,c,this.actions_.PAGINATE)};n.prototype.paginate=n.prototype.La;n.prototype.sort=function(a,b,c,d){d===Oa.AGE&&(c=!c);c=this.M().Na(c).Qa(d).I();return Qa(this,a,b,c,this.actions_.SORT)};n.prototype.sort=n.prototype.sort;n.prototype.filter=function(a,b,c){c=this.M().na(c).I();return Qa(this,a,b,c,this.actions_.FILTER)};n.prototype.filter=n.prototype.filter;\nn.prototype.l=function(a,b){b=b||\"\";var c=this.M().oa(a||\"\").Oa(b).I();\"_all\"===c.namespace&&(c.namespace=\"\");return c};n.prototype.getDefaultResourceQuery=n.prototype.l;n.prototype.M=function(){return new m(this.c.N())};n.prototype.newDataSelectQueryBuilder=n.prototype.M;n.$inject=[\"kdNamespaceService\",\"kdSettingsService\",\"$stateParams\",\"paginationService\"];var Sa=angular.module(\"kubernetesDashboard.common.dataSelect\",[l.name]).service(\"kdDataSelectService\",n).constant(\"SortableProperties\",Oa).run(Ra);function Ra(a,b){a.SortableProperties=b}Ra.$inject=[\"$rootScope\",\"SortableProperties\"];function Ta(a){this.a=a;this.b=(new Date).getTime()}Ta.prototype.Aa=function(){return isNaN(this.a.serverTime)?null:new Date(this.a.serverTime+((new Date).getTime()-this.b))};Ta.prototype.getServerTime=Ta.prototype.Aa;Ta.prototype.ub=function(){return\"v1.10.0\"};Ta.prototype.getDashboardVersion=Ta.prototype.ub;Ta.prototype.Eb=function(){return\"aa1b6c0c31c4b3b703e16e554a15ed2a019aad47\"};Ta.prototype.getGitCommit=Ta.prototype.Eb;Ta.prototype.mb=function(){return\"2018\"};Ta.prototype.getBuildYear=Ta.prototype.mb;\nTa.$inject=[\"appConfig\"];function Ua(){}Ua.prototype.$get=function(a){return new Ta(a||{})};Ua.prototype.$get=Ua.prototype.$get;Ua.prototype.$get.$inject=[\"appConfig\"];var Va=angular.module(\"kubernetesDashboard.appconfig\",[\"ngMaterial\"]).provider(\"kdAppConfigService\",Ua).value(\"appConfig\",appConfig_DO_NOT_USE_DIRECTLY);var Wa=[\"\",\"k\",\"M\",\"G\",\"T\"];function Xa(a){return function(b){b/=1E3;for(var c=1,d=0;1E3<b/c&&d<Wa.length-1;)c*=1E3,d+=1;b=a(b/c);return(d=Wa[d])?b+\" \"+d:b}}Xa.$inject=[\"numberFilter\"];function Ya(a){return function(b,c,d){d||(d=\"UTC\");c||(c=\"UTC\"===d?\"yyyy-MM-ddTHH:mm UTC\":\"yyyy-MM-ddTHH:mm\");return a(b,c,d)}}Ya.$inject=[\"$delegate\"];function Za(a,b,c){return function(d,f,g){return void 0===f?(b.U(g)||b.W(g),a(d,c.N(),g)):a(d,f,g)}}Za.$inject=[\"$delegate\",\"kdDataSelectService\",\"kdSettingsService\"];var $a=\" Ki Mi Gi Ti Pi\".split(\" \");function ab(a){return function(b){for(var c=1,d=0;1024<b/c&&d<$a.length-1;)c*=1024,d+=1;b=a(b/c);return(d=$a[d])?b+\" \"+d:b}}ab.$inject=[\"numberFilter\"];function bb(a){return function(b){if(null==b)return cb;var c=a.Aa();b=(c?c.getTime():(new Date).getTime())-(new Date(b)).getTime();c=Math.floor(b/db);var d=Math.floor(c/eb),f=Math.floor(d/fb),g=Math.floor(f/gb),h=Math.floor(g/hb),k=Math.floor(g/ib);return-1E3>b?cb:1>c?jb(0,kb):1>d?jb(c,kb):1>f?jb(d,mb):1>g?jb(f,nb):1>h?jb(g,ob):1>k?jb(h,pb):jb(k,qb)}}bb.$inject=[\"kdAppConfigService\"];function jb(a,b){return 1<a||0===a?a+\" \"+b[1]:b[0]}\nvar kb=[\"a second\",\"seconds\"],mb=[\"a minute\",\"minutes\"],nb=[\"an hour\",\"hours\"],ob=[\"a day\",\"days\"],pb=[\"a month\",\"months\"],qb=[\"a year\",\"years\"],db=1E3,eb=60,fb=60,gb=24,hb=30,ib=365,cb=\"-\";var p=angular.module(\"kubernetesDashboard.common.filters\",[\"ngMaterial\",\"angularUtils.directives.dirPagination\",Va.name]).filter(\"kdMemory\",ab).filter(\"kdCores\",Xa).filter(\"relativeTime\",bb).decorator(\"dateFilter\",Ya).decorator(\"itemsPerPageFilter\",Za);function rb(a,b){this.a=b;this.state=a;this.params=null}function tb(a){a.a.onStart({},function(b){a.state=b.to();a.params=b.params()})}rb.$inject=[\"$state\",\"$transitions\"];var vb=angular.module(\"kubernetesDashboard.common.state\",[\"ui.router\"]).service(\"kdFutureStateService\",rb).run(ub);function ub(a){tb(a)}ub.$inject=[\"kdFutureStateService\"];function wb(a,b,c,d,f){this.b=d;this.objectMeta=f;this.a=a;this.c=b;this.resourceKindName=c}wb.prototype.remove=function(){this.c(this.b).remove(this.a.hide,this.a.cancel)};wb.prototype.remove=wb.prototype.remove;wb.prototype.cancel=function(){this.a.cancel()};wb.prototype.cancel=wb.prototype.cancel;wb.$inject=[\"$mdDialog\",\"$resource\",\"resourceKindName\",\"resourceUrl\",\"objectMeta\"];function xb(a,b,c,d,f,g,h){this.resourceKindName=f;this.data=\"\";this.c=g;this.a=a;this.b=b;this.g=c;this.h=d;this.j=h;yb(this)}function yb(a){a.b.get(a.c).then(function(b){a.data=angular.toJson(b.data,!0)},function(b){zb(a,\"Error: \"+a.j.K(b.data))})}xb.prototype.update=function(){return this.b.put(this.c,this.data).then(this.a.hide,this.a.cancel)};xb.prototype.update=xb.prototype.update;\nxb.prototype.copy=function(){this.g.supported?(this.g.copyText(this.data),zb(this,\"Copied to clipboard\")):zb(this,\"Unsupported browser\")};xb.prototype.copy=xb.prototype.copy;xb.prototype.cancel=function(){this.a.cancel()};xb.prototype.cancel=xb.prototype.cancel;function zb(a,b){a.h.show(a.h.simple().textContent(b).position(\"top right\").parent(document.getElementsByTagName(\"md-dialog\")[0])).then(function(){a.cancel()})}xb.$inject=\"$mdDialog $http clipboard $mdToast resourceKindName resourceUrl localizerService\".split(\" \");function Ab(a,b,c){this.a=a;this.c=b;this.b=c}function Bb(a,b,c,d){var f=a.c.defer();a.a.show({controller:wb,controllerAs:\"$ctrl\",clickOutsideToClose:!0,templateUrl:\"common/resource/deleteresource.html\",locals:{resourceUrl:Cb(c,d),objectMeta:d,resourceKindName:b}}).then(function(){f.resolve()})[\"catch\"](function(b){b&&a.a.show(a.a.alert().ok(\"Ok\").title(b.statusText||\"Internal server error\").textContent(a.b.K(b.data)||\"Could not delete the resource\"));f.reject(b)});return f.promise}\nfunction Db(a,b,c,d){var f=a.c.defer();a.a.show({controller:xb,controllerAs:\"$ctrl\",clickOutsideToClose:!0,templateUrl:\"common/resource/editresource.html\",locals:{resourceUrl:Cb(c,d),resourceKindName:b}}).then(function(){f.resolve()})[\"catch\"](function(b){b&&a.a.show(a.a.alert().ok(\"Ok\").title(b.statusText||\"Internal server error\").textContent(a.b.K(b.data)||\"Could not edit the resource\"));f.reject(b)});return f.promise}Ab.$inject=[\"$mdDialog\",\"$q\",\"localizerService\"];\nfunction Cb(a,b){var c=\"api/v1/_raw/\"+a.kind;void 0!==b.namespace&&(c+=\"/namespace/\"+b.namespace);return c+=\"/name/\"+b.name};var Eb=angular.module(\"kubernetesDashboard.common.resource\",[\"angular-clipboard\",\"ngMaterial\",\"ui.router\",\"ngResource\"]).service(\"kdResourceVerberService\",Ab);function Fb(){};function Gb(a,b,c,d,f){this.c=a;this.g=b;this.h=c;this.b=d;this.a=f}Gb.prototype.$onInit=function(){var a=this;Hb(this);this.b.$watch(function(){return a.a.state},function(){Hb(a)});this.b.$watchCollection(function(){return a.c.params},function(){Hb(a)})};Gb.prototype.$onInit=Gb.prototype.$onInit;\nfunction Hb(a){for(var b=a.a.state,c=a.a.params,d=[];b&&b.name&&(void 0===a.limit||a.limit>d.length);){var f=a;var g=b,h=new Fb;var k=g;var D=c,u=za(k);k=u&&u.label?f.g(u.label)({$stateParams:D}).toString():k.name;h.label=k;h.stateLink=f.c.href(g.name);f=h;f.label&&d.push(f);f=a.h;b=za(b);g=null;b&&b.parent&&(\"string\"===typeof b.parent?g=f.a.get(b.parent):g=b.parent);b=g}a.breadcrumbs=d.reverse()}Gb.$inject=[\"$state\",\"$interpolate\",\"kdBreadcrumbsService\",\"$scope\",\"kdFutureStateService\"];\nvar Ib={bindings:{limit:\"<\"},controller:Gb,controllerAs:\"ctrl\",templateUrl:\"common/components/breadcrumbs/breadcrumbs.html\"};function Jb(a,b,c){this.b=a;this.a=c}Jb.prototype.remove=function(){var a=this;Bb(this.b,this.resourceKindName,this.typeMeta,this.objectMeta).then(function(){var b=za(a.a.$current);a.a.go(b&&b.parent?b.parent:\"overview\")})};Jb.prototype.remove=Jb.prototype.remove;Jb.prototype.vb=function(){return\"Delete \"+this.resourceKindName};Jb.prototype.getDeleteTooltip=Jb.prototype.vb;Jb.$inject=[\"kdResourceVerberService\",\"kdBreadcrumbsService\",\"$state\"];\nvar Lb={templateUrl:\"common/components/actionbar/actionbardeleteitem.html\",bindings:{resourceKindName:\"@\",typeMeta:\"<\",objectMeta:\"<\"},controller:Jb};function Mb(a,b){this.a=a;this.b=b}Mb.prototype.Y=function(){var a=this;Db(this.a,this.resourceKindName,this.typeMeta,this.objectMeta).then(function(){a.b.reload()})};Mb.prototype.edit=Mb.prototype.Y;Mb.prototype.Ab=function(){return\"Edit \"+this.resourceKindName};Mb.prototype.getEditTooltip=Mb.prototype.Ab;Mb.$inject=[\"kdResourceVerberService\",\"$state\"];var Nb={templateUrl:\"common/components/actionbar/actionbaredititem.html\",bindings:{resourceKindName:\"@\",typeMeta:\"<\",objectMeta:\"<\"},controller:Mb};function Ob(a){this.objectName=a};function q(a,b){this.objectName=b;this.objectNamespace=a}qa(q,Ob);function r(a){return a+\"/{objectNamespace:[^/]+}/{objectName:[^/]+}\"};function Pb(a,b,c){q.call(this,a,b);this.resourceType=c}qa(Pb,q);function Qb(a,b){this.a=a;this.b=b}Qb.prototype.Zd=function(){var a=this.a.href(\"log\",new Pb(this.objectMeta.namespace,this.objectMeta.name,this.resourceKindName));this.b.open(a,\"_blank\")};Qb.prototype.viewLogs=Qb.prototype.Zd;Qb.$inject=[\"$state\",\"$window\"];var Rb={controller:Qb,templateUrl:\"common/components/actionbar/actionbarlogs.html\",bindings:{resourceKindName:\"<\",objectMeta:\"<\"}};function Sb(a){this.a=a}Sb.prototype.qc=function(){var a={};this.a.go(\"overview\",(a.namespace=this.namespace,a))};Sb.prototype.goToNamespaceOverview=Sb.prototype.qc;Sb.$inject=[\"$state\"];var Tb={controller:Sb,templateUrl:\"common/components/actionbar/actionbarnamespaceoverview.html\",bindings:{namespace:\"<\"}};function Ub(a,b,c){q.call(this,a,b);this.container=c}qa(Ub,q);function Vb(a,b){this.a=a;this.b=b}Vb.prototype.Bd=function(){var a=this.a.href(\"shell\",new q(this.namespace,this.podName));this.b.open(a,\"_blank\")};Vb.prototype.openShell=Vb.prototype.Bd;Vb.$inject=[\"$state\",\"$window\"];var Wb={controller:Vb,bindings:{namespace:\"<\",podName:\"<\"},templateUrl:\"common/components/actionbar/shell.html\"};var Xb=angular.module(\"kubernetesDashboard.common.components.actionbar\",[\"ngMaterial\",\"ui.router\",Eb.name]).component(\"kdActionbar\",{templateUrl:\"common/components/actionbar/actionbar.html\",transclude:!0}).component(\"kdBreadcrumbs\",Ib).component(\"kdActionbarLogs\",Rb).component(\"kdActionbarNamespaceOverview\",Tb).component(\"kdActionbarDeleteItem\",Lb).component(\"kdActionbarEditItem\",Nb).component(\"kdActionbarDetailButtons\",{templateUrl:\"common/components/actionbar/actionbardetailbuttons.html\",bindings:{resourceKindName:\"@\",\ntypeMeta:\"<\",objectMeta:\"<\"}}).component(\"kdActionbarShellButton\",Wb).service(\"kdBreadcrumbsService\",ya);function Yb(a){this.b=a;this.ratio=.67;this.enableTooltips=!1}Yb.prototype.$onInit=function(){Zb(this)};Yb.prototype.a=function(a,b){return 0===b?a.data.value.toFixed(2)+\"%\":\"\"};Yb.prototype.c=function(a){return a.data.value.toFixed(2)+\"%\"};\nfunction $b(a,b,c,d,f,g,h){var k=a.size||280;h||(h=a.c);d=nv.models.pieChart().showLegend(!1).showLabels(!0).x(function(a){return a.value}).y(function(a){return a.value}).donut(!0).donutRatio(g).color(d).margin({top:f,right:f,bottom:f,left:f}).width(k).height(k).growOnHover(!1).labelType(h);d.tooltip.enabled(a.enableTooltips);d.tooltip.contentGenerator(function(a){return a.data.key});b.attr(\"height\",k).attr(\"width\",k).append(\"g\").datum(c).transition().duration(350).call(d)}\nfunction Zb(a){nv.addGraph(function(){var b=d3.select(a.b[0]).append(\"svg\");a.data?$b(a,b,a.data,a.colorPalette,0,a.ratio,null):(void 0!==a.outer&&(a.outercolor=a.outercolor?a.outercolor:\"#00c752\",$b(a,b,[{value:a.outer},{value:100-a.outer}],[a.outercolor,\"#ddd\"],0,.67,a.a)),void 0!==a.inner&&(a.innercolor=a.innercolor?a.innercolor:\"#326de6\",$b(a,b,[{value:a.inner},{value:100-a.inner}],[a.innercolor,\"#ddd\"],36,.55,a.a)))})}Yb.$inject=[\"$element\"];\nvar ac={bindings:{outer:\"<\",outercolor:\"<\",inner:\"<\",innercolor:\"<\",data:\"<\",colorPalette:\"<\",ratio:\"<\",enableTooltips:\"<\",size:\"<\"},controller:Yb,templateUrl:\"common/components/allocatedresourceschart/allocatedresourceschart.html\"};var bc=angular.module(\"kubernetesDashboard.common.components.allocatedresourceschart\",[\"ngMaterial\",\"ui.router\"]).component(\"kdAllocatedResourcesChart\",ac);var cc=RegExp(\"^(?:(?:https?|ftp)://)(?:\\\\S+(?::\\\\S*)?@)?(?:(?!(?:10|127)(?:\\\\.\\\\d{1,3}){3})(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))|(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))\\\\.?)(?::\\\\d{2,5})?(?:[/?#]\\\\S*)?$\",\n\"i\");function t(){this.a=!1}t.prototype.isVisible=function(a){return this.a||5>a};t.prototype.isVisible=t.prototype.isVisible;t.prototype.Yc=function(){return 5<Object.keys(this.labels).length};t.prototype.isMoreAvailable=t.prototype.Yc;t.prototype.ed=function(){return this.a};t.prototype.isShowingAll=t.prototype.ed;t.prototype.Sd=function(){this.a=!this.a};t.prototype.switchLabelsView=t.prototype.Sd;t.prototype.ha=function(a){return cc.test(a.trim())};t.prototype.isHref=t.prototype.ha;\nvar dc={bindings:{labels:\"=\"},controller:t,controllerAs:\"labelsCtrl\",templateUrl:\"common/components/labels/labels.html\"};var ec={controller:t,controllerAs:\"annotationsCtrl\",templateUrl:\"common/components/annotations/annotations.html\",scope:{},bindings:{labels:\"=\"}};function fc(a){this.a=a}fc.prototype.Ad=function(){var a=this.a.alert().title(\"kubectl.kubernetes.io/last-applied-configuration\").textContent(this.value).ok(gc);this.a.show(a)};fc.prototype.openDetails=fc.prototype.Ad;fc.$inject=[\"$mdDialog\"];var gc=\"Close\",hc={controller:fc,templateUrl:\"common/components/annotations/lastappliedconfiguration.html\",bindings:{value:\"<\"}};var ic=angular.module(\"kubernetesDashboard.common.components.annotations\",[\"ngMaterial\"]).component(\"kdAnnotations\",ec).component(\"kdLastAppliedConfiguration\",hc);function jc(a){this.a=a}jc.prototype.jd=function(){return this.a.isSlotFilled(\"title\")};jc.prototype.isTitleSlotFilled=jc.prototype.jd;jc.prototype.Mc=function(){return this.a.isSlotFilled(\"footer\")};jc.prototype.isFooterSlotFilled=jc.prototype.Mc;jc.$inject=[\"$transclude\"];var kc={templateUrl:\"common/components/contentcard/contentcard.html\",controller:jc,transclude:{title:\"?kdTitle\",content:\"?kdContent\",footer:\"?kdFooter\"}};var lc=angular.module(\"kubernetesDashboard.common.components.endpoint\",[\"ngMaterial\",\"ui.router\"]).component(\"kdInternalEndpoint\",{templateUrl:\"common/components/endpoint/internalendpoint.html\",bindings:{endpoint:\"<\"}}).component(\"kdExternalEndpoint\",{templateUrl:\"common/components/endpoint/externalendpoint.html\",bindings:{endpoints:\"<\"}});function mc(a){return 1E3<=a?d3.format(\",\")(a.toPrecision(3)):.01>a?a.toPrecision(1):.1>a?a.toPrecision(2):a.toPrecision(3)};var nc=[3.8,4.1],oc={\"cpu/usage_rate\":{yAxisType:\"CPUAxisType\",area:!0,key:\"CPU Usage\",color:\"#00c752\",fillOpacity:.2,strokeWidth:3,type:\"line\",yAxis:1},\"cpu/limit\":{yAxisType:\"CPUAxisType\",area:!0,key:\"CPU Limit\",color:\"#f51200\",fillOpacity:.2,strokeWidth:3,type:\"line\",yAxis:1},\"memory/usage\":{yAxisType:\"MemoryAxisType\",area:!0,key:\"Memory Usage\",color:\"#326de6\",fillOpacity:.2,strokeWidth:3,type:\"line\",yAxis:2}},pc={CPUAxisType:{formatter:function(a){return null===a?\"N/A\":Xa(mc)(a)},label:\"CPU (cores)\"},\nMemoryAxisType:{formatter:function(a){return null===a?\"N/A\":ab(mc)(a)},label:\"Memory (bytes)\"},TimeAxisType:{formatter:function(a){return d3.time.format(\"%H:%M\")(new Date(1E3*a))},label:\"Time\"}};var qc=[1500,1E3,500,250,200,100,50,25,20,10,5,1];function rc(a,b){var c=Math.floor(Math.log(a)/Math.log(10)),d=a*Math.pow(10,-c)*100,f=Math.floor(b/a*d);d=Math.ceil(d);for(var g=0;g<qc.length;g++){var h=qc[g];if(Math.ceil(d/h)<=Math.floor(f/h))return Math.ceil(d/h)*h/100*Math.pow(10,c)}return a}function sc(a){var b=[];a=rc(a/nc[1],a/nc[0]);for(var c=1;c<=Math.ceil(3.5);c++)b.push(a*c);return b};function tc(a,b){this.b=a;this.a=b}tc.prototype.$onInit=function(){null!==this.metrics&&0!==this.metrics.length&&uc(this)};\nfunction uc(a){var b;nv.addGraph(function(){b=nv.models.multiChart().margin({top:30,right:30,bottom:55,left:75}).options({duration:300,ce:!0,useInteractiveGuideline:!0});for(var c=[],d,f,g=1,h=1,k=0;k<a.metrics.length;k++){var D=a.metrics[k];if(!(2>D.dataPoints.length)&&D.metricName in oc){var u=oc[D.metricName];if(1===u.yAxis){if(\"undefined\"===typeof d)d=u.yAxisType;else if(d!==u.yAxisType)throw Error(\"Can't display requested data - metrics have inconsistent types of y1 axis!\");g=Math.max(g,Math.max.apply(Math,\n[].concat(ra(D.dataPoints.map(function(a){return a.y})))))}else{if(\"undefined\"===typeof f)f=u.yAxisType;else if(f!==u.yAxisType)throw Error(\"Can't display requested data - metrics have inconsistent types of y2 axis!\");h=Math.max(h,Math.max.apply(Math,[].concat(ra(D.dataPoints.map(function(a){return a.y})))))}c.push({area:u.area,values:D.dataPoints,key:u.key,color:u.color,fillOpacity:u.fillOpacity,strokeWidth:u.strokeWidth,type:u.type,yAxis:u.yAxis})}}if(0!==c.length){\"undefined\"===typeof d&&(d=f,\ng=h,c.forEach(function(a){return a.yAxis=1}),f=void 0);1===c.length&&b.showLegend(!1);k=pc.TimeAxisType;b.xAxis.axisLabel(k.label).tickFormat(k.formatter).staggerLabels(!1);\"undefined\"!==typeof d&&(d=pc[d],b.yAxis1.axisLabel(d.label).tickFormat(d.formatter).tickValues(sc(g)),b.yDomain1([0,4.5*rc(g/nc[1],g/nc[0])]));\"undefined\"!==typeof f&&(f=pc[f],b.yAxis2.axisLabel(f.label).tickFormat(f.formatter).tickValues(sc(h)),b.yDomain2([0,4.5*rc(h/nc[1],h/nc[0])]));b.interactiveLayer.tooltip.valueFormatter(function(a,\nd){var f=c.filter(function(a){return!a.disabled});return d<f.length?1===f[d].yAxis?b.yAxis1.tickFormat()(a):b.yAxis2.tickFormat()(a):a});var sb=d3.select(a.a[0]);h=sb.append(\"svg\");h.attr(\"height\",\"200px\").datum(c).call(b);h.style({\"background-color\":\"white\"});var Ea=!1,lb=0,Kb=function(a,c){if(Ea)lb=(new Date).valueOf()+a;else{Ea=!0;lb=(new Date).valueOf()+a;var d=function(){b.update();new Date<lb?setTimeout(d,c):Ea=!1};setTimeout(d,c)}};nv.utils.windowResize(b.update);a.b.$watch(function(){return sb.node().getBoundingClientRect().width},\nfunction(){return Kb(1600,200)},!1);return b}})}tc.$inject=[\"$scope\",\"$element\"];var vc={bindings:{metrics:\"<\"},controller:tc,templateUrl:\"common/components/graph/graph.html\"};function wc(){}wc.prototype.$onInit=function(){this.selectedMetrics=xc(this)};function xc(a){if(\"undefined\"===typeof a.selectedMetricNames)return a.metrics;var b=a.selectedMetricNames.split(\",\");return a.metrics&&a.metrics.filter(function(a){return-1!==b.indexOf(a.metricName)})}wc.prototype.Md=function(){return null!==this.metrics&&0<this.metrics.length&&this.metrics.filter(function(a){return 1<a.dataPoints.length}).length===this.metrics.length};wc.prototype.shouldShowGraph=wc.prototype.Md;\nvar yc={controller:wc,bindings:{metrics:\"<\",graphTitle:\"@\",graphInfo:\"@\",selectedMetricNames:\"<\"},templateUrl:\"common/components/graph/graphcard.html\"};var zc=angular.module(\"kubernetesDashboard.common.components.graph\",[\"ngMaterial\",\"ui.router\"]).component(\"kdGraph\",vc).component(\"kdGraphCard\",yc);function Ac(a){this.a=a}Ac.prototype.Nc=function(){return this.a.isSlotFilled(\"header\")};Ac.prototype.isHeaderFilled=Ac.prototype.Nc;Ac.$inject=[\"$transclude\"];var Bc={templateUrl:\"common/components/infocard/infocard.html\",transclude:{header:\"?kdInfoCardHeader\",section:\"kdInfoCardSection\"},controller:Ac};var Cc=angular.module(\"kubernetesDashboard.common.components.infocard\",[\"ngMaterial\"]).component(\"kdInfoCard\",Bc).component(\"kdInfoCardEntry\",{templateUrl:\"common/components/infocard/infocardentry.html\",transclude:!0,bindings:{title:\"@\"}}).component(\"kdInfoCardSection\",{templateUrl:\"common/components/infocard/infocardsection.html\",transclude:!0,bindings:{name:\"@\"}});function v(){this.a=!0}v.prototype.$onInit=function(){this.b=this.b||4};v.prototype.$onInit=v.prototype.$onInit;v.prototype.Lb=function(){return this.a?this.b:this.warnings.length};v.prototype.getLimitTo=v.prototype.Lb;v.prototype.Oc=function(){return this.a};v.prototype.isHidden=v.prototype.Oc;v.prototype.Ld=function(){return this.warnings.length<=this.b};v.prototype.shouldShowAll=v.prototype.Ld;v.prototype.Ud=function(){this.a=!this.a};v.prototype.switchVisibility=v.prototype.Ud;\nvar Dc={bindings:{warnings:\"<\",limit:\"<\"},controller:v,templateUrl:\"common/components/podwarnings/podwarnings.html\"};function Ec(a){this.a=a}Ec.prototype.Nb=function(){return this.a.href(\"log\",new Pb(this.objectMeta.namespace,this.objectMeta.name,this.resourceKindName))};Ec.prototype.getLogsHref=Ec.prototype.Nb;Ec.$inject=[\"$state\"];var Fc={templateUrl:\"common/components/resourcecard/logsbutton.html\",bindings:{resourceKindName:\"<\",objectMeta:\"<\"},bindToController:!0,controller:Ec};function Gc(){}Gc.prototype.$onInit=function(){if(!this.omitMeta){if(!this.objectMeta)throw Error(\"object-meta binding is required for resource card component\");if(!this.typeMeta)throw Error(\"type-meta binding is required for resource card component\");}};Gc.prototype.$onInit=Gc.prototype.$onInit;Gc.prototype.dd=function(){return!!this.resourceCardListCtrl.selectable};Gc.prototype.isSelectable=Gc.prototype.dd;Gc.prototype.Ac=function(){return!!this.resourceCardListCtrl.withStatuses};\nGc.prototype.hasStatus=Gc.prototype.Ac;var Hc={bindings:{omitMeta:\"<\",objectMeta:\"<\",typeMeta:\"<\"},controller:Gc,templateUrl:\"common/components/resourcecard/resourcecard.html\",transclude:{status:\"?kdResourceCardStatus\",columns:\"?kdResourceCardColumns\",footer:\"?kdResourceCardFooter\"},require:{resourceCardListCtrl:\"^kdResourceCardList\"}};function Ic(a){this.a=a}Ic.prototype.$onInit=function(){var a=this.resourceCardColumnsCtrl;if(!a.b)throw Error(\"Resource card columns component must be initialized before adding columns\");var b=a.a,c=a.resourceCardListCtrl.b;if(c.a.length<=b)throw Error(\"Not enough header columns registered. Try adding kd-resource-card-header-column to the list.\");Jc(this.a,c.a[b].size,c.a[b].grow);a.a+=1};Ic.prototype.$onInit=Ic.prototype.$onInit;Ic.$inject=[\"$element\"];\nvar Kc={templateUrl:\"common/components/resourcecard/resourcecardcolumn.html\",transclude:!0,require:{resourceCardColumnsCtrl:\"^kdResourceCardColumns\"},controller:Ic};function Lc(){this.a=0;this.b=!1}Lc.prototype.$onInit=function(){this.b=!0};Lc.prototype.$onInit=Lc.prototype.$onInit;var Mc={templateUrl:\"common/components/resourcecard/resourcecardcolumns.html\",transclude:!0,require:{resourceCardListCtrl:\"^kdResourceCardList\"},controller:Lc};function Nc(a,b,c){this.a=a;this.c=b;this.b=c}Nc.prototype.remove=function(){var a=this;Bb(this.a,this.resourceKindName,this.resourceCardCtrl.typeMeta,this.resourceCardCtrl.objectMeta).then(function(){a.c.reload()})[\"catch\"](function(b){b&&a.b.error(\"Error showing delete dialog:\",b)})};Nc.prototype.remove=Nc.prototype.remove;Nc.$inject=[\"kdResourceVerberService\",\"$state\",\"$log\"];\nvar Oc={templateUrl:\"common/components/resourcecard/resourcecarddeletemenuitem.html\",bindings:{resourceKindName:\"@\"},bindToController:!0,require:{resourceCardCtrl:\"^kdResourceCard\"},controller:Nc};function Pc(a,b,c){this.a=a;this.c=b;this.b=c}Pc.prototype.Y=function(){var a=this;Db(this.a,this.resourceKindName,this.resourceCardCtrl.typeMeta,this.resourceCardCtrl.objectMeta).then(function(){a.c.reload()})[\"catch\"](function(b){b&&a.b.error(\"Error showing edit dialog:\",b)})};Pc.prototype.edit=Pc.prototype.Y;Pc.$inject=[\"kdResourceVerberService\",\"$state\",\"$log\"];\nvar Qc={templateUrl:\"common/components/resourcecard/resourcecardeditmenuitem.html\",bindings:{resourceKindName:\"@\"},bindToController:!0,require:{resourceCardCtrl:\"^kdResourceCard\"},controller:Pc};function w(a,b,c){this.c=a;this.b=b;this.g=c;this.i18n=Rc}w.prototype.$onInit=function(){this.selectId=this.resourceCardListCtrl.selectId;var a=this.resourceCardHeaderColumnsCtrl;Jc(this.c,this.size,this.grow);a.a.push(this);!this.sortable||void 0!==this.resourceCardListCtrl.list&&void 0!==this.resourceCardListCtrl.listResource||(this.sortable=!1);this.sortable&&this.sortId===Oa.AGE&&(this.a=!0)};w.prototype.$onInit=w.prototype.$onInit;\nw.prototype.Kd=function(){return void 0!==this.selectId&&0<this.selectId.length&&this.sortable};w.prototype.shouldEnableSorting=w.prototype.Kd;w.prototype.Ca=function(){return void 0!==this.a&&this.a};w.prototype.isAscending=w.prototype.Ca;w.prototype.Gc=function(){return this.Ea()&&!this.Ca()};w.prototype.isDescending=w.prototype.Gc;w.prototype.Ea=function(){return void 0!==this.a};w.prototype.isSorted=w.prototype.Ea;w.prototype.reset=function(){this.a=void 0};w.prototype.reset=w.prototype.reset;\nw.prototype.gd=function(){return this.sortable};w.prototype.isSortable=w.prototype.gd;\nw.prototype.sort=function(){var a=this,b=!this.a;this.resourceCardHeaderColumnsCtrl.reset();this.a=b;b=this.b.sort(this.resourceCardListCtrl.listResource,this.selectId,b,this.sortId);this.resourceCardListCtrl.pending=!0;b.then(function(b){a.resourceCardListCtrl.list=b;a.resourceCardListCtrl.pending=!1})[\"catch\"](function(b){a.g.open(a.i18n.MSG_RESOURCE_CARD_LIST_SORT_ERROR,b.data);a.resourceCardListCtrl.pending=!1})};w.prototype.sort=w.prototype.sort;w.$inject=[\"$element\",\"kdDataSelectService\",\"errorDialog\"];\nvar Sc={templateUrl:\"common/components/resourcecard/resourcecardheadercolumn.html\",transclude:!0,bindings:{size:\"@\",grow:\"@\",sortable:\"@\",sortId:\"<\"},bindToController:!0,require:{resourceCardHeaderColumnsCtrl:\"^kdResourceCardHeaderColumns\",resourceCardListCtrl:\"^^kdResourceCardList\"},controller:w},Rc={MSG_RESOURCE_CARD_LIST_SORT_ERROR:\"Sort error\"};var Tc=[\"nogrow\",\"1\",\"2\",\"4\"],Uc=[\"small\",\"medium\",\"large\"];function Jc(a,b,c){b||(b=\"medium\");0<=Uc.indexOf(b)&&a.addClass(\"kd-column-size-\"+b);c||(c=\"1\");0<=Tc.indexOf(c)&&a.addClass(\"kd-column-grow-\"+c)};function Vc(){this.a=[]}Vc.prototype.$onInit=function(){var a=this.resourceCardListCtrl;if(a.b)throw Error(\"Header columns already set\");a.b=this};Vc.prototype.$onInit=Vc.prototype.$onInit;Vc.prototype.reset=function(){this.a.forEach(function(a){a.sortable&&a.reset()})};Vc.prototype.reset=Vc.prototype.reset;var Wc={templateUrl:\"common/components/resourcecard/resourcecardheadercolumns.html\",transclude:!0,require:{resourceCardListCtrl:\"^kdResourceCardList\"},controller:Vc};function Xc(a){this.pending=!1;this.a=a}Xc.prototype.zc=function(){return this.a.isSlotFilled(\"header\")};Xc.prototype.hasHeader=Xc.prototype.zc;Xc.prototype.xc=function(){return this.a.isSlotFilled(\"footer\")};Xc.prototype.hasFooter=Xc.prototype.xc;Xc.$inject=[\"$transclude\"];\nvar Yc={},Zc={templateUrl:\"common/components/resourcecard/resourcecardlist.html\",transclude:(Yc.header=\"?kdResourceCardListHeader\",Yc.footer=\"?kdResourceCardListFooter\",Yc),controller:Xc,bindings:{selectable:\"<\",withStatuses:\"<\",selectId:\"@\",list:\"=\",listResource:\"<\"},bindToController:!0};function x(a,b,c,d){this.c=a;this.h=b;this.inputText=\"\";this.i18n=$c;this.b=!0;this.g=c;this.j=d}x.prototype.$onInit=function(){this.a=this.resourceCardListCtrl.selectId;this.c.U(this.a)||this.c.W(this.a)};x.prototype.$onInit=x.prototype.$onInit;x.prototype.Jd=function(){return void 0!==this.a&&0<this.a.length&&void 0!==this.resourceCardListCtrl.list&&void 0!==this.resourceCardListCtrl.listResource};x.prototype.shouldEnable=x.prototype.Jd;x.prototype.bd=function(){return!this.b};\nx.prototype.isSearchVisible=x.prototype.bd;x.prototype.Ua=function(){(this.b=!this.b)||this.sa()};x.prototype.switchSearchVisibility=x.prototype.Ua;x.prototype.sa=function(){var a=this;this.j(function(){a.g.find(\"input\")[0].focus()},150)};x.prototype.focusInput=x.prototype.sa;x.prototype.bb=function(){this.Ua();0<this.inputText.length&&(this.inputText=\"\",this.Ia())};x.prototype.clearInput=x.prototype.bb;\nx.prototype.Ia=function(){var a=this;this.resourceCardListCtrl.pending=!0;this.c.filter(this.resourceCardListCtrl.listResource,this.a,this.inputText).then(function(b){a.resourceCardListCtrl.list=b;a.resourceCardListCtrl.pending=!1})[\"catch\"](function(b){a.h.open(a.i18n.MSG_RESOURCE_CARD_LIST_FILTERING_ERROR,b.data);a.resourceCardListCtrl.pending=!1})};x.prototype.onTextUpdate=x.prototype.Ia;x.prototype.pc=function(){return\"Filter objects by name\"};x.prototype.getTooltipMessage=x.prototype.pc;\nx.prototype.Vb=function(){return\"Search\"};x.prototype.getPlaceholderText=x.prototype.Vb;x.$inject=[\"kdDataSelectService\",\"errorDialog\",\"$element\",\"$timeout\"];var ad={templateUrl:\"common/components/resourcecard/resourcecardlistfilter.html\",controller:x,require:{resourceCardListCtrl:\"^kdResourceCardList\",resourceCardListHeader:\"^^kdResourceCardListHeader\"}},$c={MSG_RESOURCE_CARD_LIST_FILTERING_ERROR:\"Filtering error\"};function bd(a){this.a=a}bd.prototype.Ec=function(){return 0<this.a[0].innerHTML.indexOf(\"dir-pagination-controls\")};bd.prototype.isBottomBorderVisible=bd.prototype.Ec;bd.$inject=[\"$element\"];var cd={},dd={controller:bd,templateUrl:\"common/components/resourcecard/resourcecardlistfooter.html\",transclude:(cd.pagination=\"?kdResourceCardListPagination\",cd)};function ed(a){this.a=a}ed.prototype.Kc=function(){return this.a.isSlotFilled(\"filter\")};ed.prototype.isFilterSlotFilled=ed.prototype.Kc;ed.$inject=[\"$transclude\"];var fd={},gd={templateUrl:\"common/components/resourcecard/resourcecardlistheader.html\",controller:ed,transclude:(fd.title=\"?kdResourceCardListTitle\",fd.filter=\"?kdResourceCardListFilter\",fd)};function hd(a,b,c){this.a=a;this.c=b;this.b=c;this.i18n=id}hd.prototype.$onInit=function(){this.selectId=this.resourceCardListCtrl.selectId;if(this.pa()&&(void 0===this.resourceCardListCtrl.list||void 0===this.resourceCardListCtrl.listResource))throw Error(\"List and list resource have to be set on list card.\");this.a.U(this.selectId)||this.a.W(this.selectId)};hd.prototype.$onInit=hd.prototype.$onInit;hd.prototype.pa=function(){return void 0!==this.selectId&&0<this.selectId.length};\nhd.prototype.shouldEnablePagination=hd.prototype.pa;hd.prototype.Nd=function(){return this.resourceCardListCtrl.list.listMeta.totalItems>this.c.N()&&this.pa()};hd.prototype.shouldShowPagination=hd.prototype.Nd;\nhd.prototype.Dd=function(a){var b=this;a=this.a.M().Pa(a).I();a=this.a.La(this.resourceCardListCtrl.listResource,this.selectId,a);this.resourceCardListCtrl.pending=!0;a.then(function(a){b.resourceCardListCtrl.list=a;b.resourceCardListCtrl.pending=!1})[\"catch\"](function(a){b.b.open(b.i18n.MSG_RESOURCE_CARD_LIST_PAGINATION_ERROR,a.data);b.resourceCardListCtrl.pending=!1})};hd.prototype.pageChanged=hd.prototype.Dd;hd.$inject=[\"kdDataSelectService\",\"kdSettingsService\",\"errorDialog\"];\nvar jd={templateUrl:\"common/components/resourcecard/resourcecardlistpagination.html\",controller:hd,transclude:!0,require:{resourceCardListCtrl:\"^kdResourceCardList\",resourceCardListFooter:\"^^kdResourceCardListFooter\"}},id={MSG_RESOURCE_CARD_LIST_PAGINATION_ERROR:\"Pagination error\"};function kd(a,b,c){this.c=a;this.a=b;this.b=c}kd.prototype.Xd=function(){return ld(this).update(this.h.bind(this),this.g.bind(this)).$promise};kd.prototype.trigger=kd.prototype.Xd;function ld(a){return a.b(\"api/v1/cronjob/\"+a.cron.objectMeta.namespace+\"/\"+a.cron.objectMeta.name+\"/trigger\",{},{update:{method:\"PUT\",transformRequest:function(a){a=angular.extend({},a,{\"Content-Type\":\"application/json\"});return angular.toJson(a)}}})}\nkd.prototype.h=function(){this.a.info('Successfully triggered cronjob \"'+this.cron.objectMeta.name+'\"');this.c.reload()};kd.prototype.g=function(a){this.a.error(a)};kd.$inject=[\"$state\",\"$log\",\"$resource\"];var nd={templateUrl:\"common/components/resourcecard/resourcecardtriggermenuitem.html\",bindings:{resource:\"<\",cron:\"<\"},bindToController:!0,require:{resourceCardCtrl:\"^kdResourceCard\"},controller:kd};var od=angular.module(\"kubernetesDashboard.common.components.resourcecard\",[\"ngMaterial\",\"ui.router\",\"angularUtils.directives.dirPagination\",Eb.name]).component(\"kdLogsButton\",Fc).component(\"kdResourceCard\",Hc).component(\"kdResourceCardList\",Zc).component(\"kdResourceCardListFooter\",dd).component(\"kdResourceCardListHeader\",gd).component(\"kdResourceCardListFilter\",ad).component(\"kdResourceCardListPagination\",jd).component(\"kdResourceCardMenu\",{templateUrl:\"common/components/resourcecard/resourcecardmenu.html\",\ntransclude:!0}).component(\"kdResourceCardDeleteMenuItem\",Oc).component(\"kdResourceCardEditMenuItem\",Qc).component(\"kdResourceCardTriggerMenuItem\",nd).component(\"kdResourceCardColumn\",Kc).component(\"kdResourceCardColumns\",Mc).component(\"kdResourceCardHeaderColumn\",Sc).component(\"kdResourceCardHeaderColumns\",Wc).component(\"kdResourceCardFooter\",{templateUrl:\"common/components/resourcecard/resourcecardfooter.html\",transclude:!0});function pd(a){this.a=a}pd.prototype.tc=function(){this.a.a.show({controller:y,controllerAs:\"$ctrl\",clickOutsideToClose:!0,templateUrl:\"common/scaling/scaleresource.html\",locals:{namespace:this.objectMeta.namespace,resourceName:this.objectMeta.name,currentPods:this.currentPods,desiredPods:this.desiredPods,resourceKindName:this.resourceKindName,resourceKindDisplayName:this.resourceKindDisplayName}})};pd.prototype.handleScaleResourceDialog=pd.prototype.tc;pd.prototype.Xc=function(){return this.menuItem};\npd.prototype.isMenuItem=pd.prototype.Xc;pd.$inject=[\"kdScaleService\"];var qd={controller:pd,templateUrl:\"common/components/scale/scale.html\",bindings:{resourceKindDisplayName:\"@\",resourceKindName:\"<\",objectMeta:\"<\",currentPods:\"<\",desiredPods:\"<\",menuItem:\"<\"}};var rd={Deployment:\"deploymentdetail\",ReplicaSet:\"replicasetdetail\",ReplicationController:\"replicationcontrollerdetail\",DaemonSet:\"daemonsetdetail\",StatefulSet:\"statefulsetdetail\",Job:\"jobdetail\",CronJob:\"cronjobdetail\"};\nfunction sd(a,b){var c=this;this.a=a;this.valid=!1;b.$watch(function(){return c.reference},function(){a:{try{var a=JSON.parse(c.reference)}catch(f){c.valid=!1;a=void 0;break a}a.kind&&\"SerializedReference\"===a.kind?(a=a.reference,c.href=c.a.href(rd[a.kind],new q(a.namespace,a.name)),c.kind=a.kind,c.name=a.name,c.valid=!0):c.valid=!1;a=void 0}return a})}sd.$inject=[\"$state\",\"$scope\"];var td={templateUrl:\"common/components/serializedreference/serializedreference.html\",controller:sd,bindings:{reference:\"<\"}};function ud(){}\nud.prototype.Ed=function(){var a=this.timeseries.map(function(a){var b=a.value;return[Date.parse(a.timestamp),b]}).slice().sort(function(a,b){return a[0]-b[0]}),b=Math.min.apply(Math,[].concat(ra(a.map(function(a){return a[0]}))));a=a.map(function(a){var c=ja(a);a=c.next().value;c=c.next().value;return[a-b,c]});var c=Math.max.apply(Math,[].concat(ra(a.map(function(a){return a[0]}))))||1,d=Math.max.apply(Math,[].concat(ra(a.map(function(a){return a[1]}))))||1;return a.map(function(a){var b=ja(a);a=\nb.next().value;b=b.next().value;return[a/c,b/d]}).map(function(a){var b=ja(a);a=b.next().value;b=b.next().value;return a+\",\"+(1-b)}).join(\" \")};ud.prototype.polygonPoints=ud.prototype.Ed;var vd={bindings:{timeseries:\"<\"},controller:ud,controllerAs:\"sparklineCtrl\",templateUrl:\"common/components/sparkline/sparkline.html\",templateNamespace:\"svg\"};function wd(){}wd.prototype.Bb=function(){return{de:!0,mode:\"yaml\",advanced:{fontSize:\"16px\"}}};wd.prototype.getEditorConfig=wd.prototype.Bb;var xd={bindings:{inputData:\"=\"},controller:wd,templateUrl:\"common/components/textinput/textinput.html\"};function yd(a){return{restrict:\"E\",templateUrl:\"common/components/uploadfile/uploadfile.html\",scope:{onLoad:\"&\",label:\"@\"},link:function(b,c){if(b.onLoad){var d=angular.element(c[0].querySelector(\"#fileInput\")),f=angular.element(c[0].querySelector(\"#uploadButton\")),g=angular.element(c[0].querySelector(\"#textInput\"));d.length&&f.length&&g.length&&(f.on(\"click\",function(){d[0].click()}),g.on(\"click\",function(){d[0].click()}));d.on(\"change\",function(c){var d=c.target.files[0];d&&(b.fileName=d.name,c=\nnew FileReader,c.onload=function(a){b.onLoad({file:{name:d.name,content:a.target.result}});b.$apply()},c.onerror=function(b){return a.error(\"Error reading file:\",b)},c.readAsText(d))})}else a.error(\"Required function callback 'onLoad' not provided.\")}}}yd.$inject=[\"$log\"];function z(a){this.limit=this.defaultLimit=2;this.a=a}z.prototype.Mb=function(a){return this.a.K(a)};z.prototype.getLocalizedMessage=z.prototype.Mb;z.prototype.Wd=function(){this.limit?this.limit=void 0:this.limit=this.defaultLimit};z.prototype.toggleWarnings=z.prototype.Wd;z.prototype.gb=function(a){this.warnings.splice(a,1)};z.prototype.dismissWarning=z.prototype.gb;z.prototype.hb=function(){this.warnings=[]};z.prototype.dismissWarnings=z.prototype.hb;\nz.prototype.ic=function(){return\"Show \"+(this.warnings.length-this.defaultLimit+\" more\")};z.prototype.getShowMoreLabel=z.prototype.ic;z.prototype.hc=function(){return\"Show \"+(this.warnings.length-this.defaultLimit+\" less\")};z.prototype.getShowLessLabel=z.prototype.hc;z.$inject=[\"localizerService\"];var zd={bindings:{warnings:\"<\"},controller:z,templateUrl:\"common/components/warnings/warnings.html\"};function Ad(a,b){this.b=a;this.a=b}Ad.prototype.kc=function(){return this.b.href(\"deploy\")};Ad.prototype.getStateHref=Ad.prototype.kc;Ad.prototype.Od=function(){return!this.a.isSlotFilled(\"title\")&&!this.a.isSlotFilled(\"text\")};Ad.prototype.showDefaultZerostate=Ad.prototype.Od;Ad.$inject=[\"$state\",\"$transclude\"];var Bd={},Cd={templateUrl:\"common/components/zerostate/zerostate.html\",transclude:(Bd.title=\"?kdZeroStateTitle\",Bd.text=\"?kdZeroStateText\",Bd),controller:Ad};var A=angular.module(\"kubernetesDashboard.common.components\",[\"ngMaterial\",\"ui.router\",p.name,Xb.name,lc.name,Cc.name,od.name,Sa.name,l.name,vb.name,zc.name,ic.name,bc.name]).component(\"kdLabels\",dc).component(\"kdZeroState\",Cd).component(\"kdMiddleEllipsis\",{bindings:{displayString:\"@\"},controller:function(){},controllerAs:\"ellipsisCtrl\",templateUrl:\"common/components/middleellipsis/middleellipsis.html\"}).component(\"kdSparkline\",vd).component(\"kdTextInput\",xd).component(\"kdToggleHiddenText\",{templateUrl:\"common/components/togglehiddentext/togglehiddentext.html\",\nbindings:{placeholder:\"@?\",text:\"@\",active:\"<\"}}).component(\"kdSerializedReference\",td).component(\"kdObjectMetaInfoCard\",{templateUrl:\"common/components/resourcedetail/infocard.html\",bindings:{objectMeta:\"<\"}}).component(\"kdContentCard\",kc).component(\"kdWarnings\",zd).component(\"kdConditionList\",{controller:function(){},templateUrl:\"common/components/conditions/conditionslist.html\",bindings:{conditions:\"=\"}}).component(\"kdScaleButton\",qd).component(\"kdPodWarnings\",Dc).component(\"kdCapacity\",{bindings:{capacity:\"<\"},\ntemplateUrl:\"common/components/capacity/capacity.html\"}).directive(\"kdWarnThreshold\",function(){var a={};return{restrict:\"A\",require:[\"^mdInputContainer\",\"ngModel\"],scope:(a.kdWarnThresholdBind=\"=\",a),link:function(a,c,d,f){var b=c.parent(),h=f[1];h.$viewChangeListeners.push(function(){parseInt(h.$viewValue,10)>d.kdWarnThreshold&&(a.kdWarnThresholdBind=!0,b.addClass(\"kd-warning\"));!a.kdWarnThresholdBind||parseInt(h.$viewValue,10)>d.kdWarnThreshold||(a.kdWarnThresholdBind=!1,b.removeClass(\"kd-warning\"))})}}}).directive(\"kdUploadFile\",\nyd);function B(a,b,c,d,f){this.loading=this.showLoadingSpinner=!1;this.a=a;this.s=b;this.c=c;this.h=d;this.j=f}B.prototype.$onInit=function(){Dd(this);Ed(this)};B.prototype.$onInit=B.prototype.$onInit;function Ed(a){a.h(\"api/v1/systembanner\").get(function(b){a.b=b})}B.prototype.Fa=function(){return void 0!==this.b&&0<this.b.message.length};B.prototype.isSystemBannerVisible=B.prototype.Fa;B.prototype.nc=function(){return this.b&&this.b.severity?\"kd-system-banner-\"+this.b.severity.toLowerCase():\"\"};\nB.prototype.getSystemBannerClass=B.prototype.nc;B.prototype.oc=function(){return this.Fa()?this.j.trustAsHtml(this.b.message):\"\"};B.prototype.getSystemBannerMessage=B.prototype.oc;B.prototype.Bc=function(){return!!this.a.current&&!!this.a.current.views&&!!this.a.current.views.actionbar&&!this.showLoadingSpinner};B.prototype.isActionbarVisible=B.prototype.Bc;B.prototype.Jc=function(){return!(!this.a.current.data||!0!==this.a.current.data.fillContent)};B.prototype.isFillContentView=B.prototype.Jc;\nfunction Dd(a){a.c.onStart({},function(){a.loading=!0;a.showLoadingSpinner=!1;a.s(function(){a.showLoadingSpinner=!0},250)});a.c.onError({},a.g.bind(a));a.c.onSuccess({},a.g.bind(a))}B.prototype.g=function(){this.showLoadingSpinner=this.loading=!1};B.prototype.create=function(){this.a.go(\"deploy\")};B.prototype.create=B.prototype.create;B.prototype.Rb=function(){return\"overview\"};B.prototype.getOverviewStateName=B.prototype.Rb;B.$inject=[\"$state\",\"$timeout\",\"$transitions\",\"$resource\",\"$sce\"];\nvar Fd={controller:B,templateUrl:\"chrome/chrome.html\"};function C(a,b){this.c=a;this.b=b;this.isLoginStatusLoaded=!1}C.prototype.$onInit=function(){var a=this;Gd(this.b).then(function(b){a.a=b;a.isLoginStatusLoaded=!0},function(b){a.c.error(b)})};C.prototype.lb=function(){return this.a.headerPresent?\"Logged in with auth header\":this.a.tokenPresent?\"Logged in with token\":\"Default service account\"};C.prototype.getAuthStatus=C.prototype.lb;C.prototype.Cc=function(){return\"true\"===this.b.a.get(\"skipLoginPage\")&&!this.a.headerPresent};\nC.prototype.isAuthSkipped=C.prototype.Cc;C.prototype.ia=function(){return this.a&&!this.a.headerPresent&&this.a.tokenPresent};C.prototype.isLoggedIn=C.prototype.ia;C.prototype.Pc=function(){return this.a&&this.a.httpsMode};C.prototype.isHttpsMode=C.prototype.Pc;C.prototype.la=function(){this.b.la()};C.prototype.logout=C.prototype.la;C.$inject=[\"$log\",\"kdAuthService\"];var Hd={controller:C,templateUrl:\"chrome/controlpanel/controlpanel.html\"};function Id(a){this.a=a}Id.prototype.toggle=function(){this.a.toggle()};Id.prototype.toggle=Id.prototype.toggle;Id.$inject=[\"kdNavService\"];var Jd={controller:Id,templateUrl:\"chrome/nav/hamburger.html\"};function Kd(a){this.a=a;this.states={namespace:\"namespacelist\",node:\"nodelist\",workload:\"workload\",cluster:\"cluster\",pod:\"podlist\",deployment:\"deploymentlist\",replicaSet:\"replicasetlist\",replicationController:\"replicationcontrollerlist\",daemonSet:\"daemonsetlist\",persistentVolume:\"persistentvolumelist\",statefulSet:\"statefulsetlist\",job:\"joblist\",cronJob:\"cronjoblist\",service:\"servicelist\",persistentVolumeClaim:\"persistentvolumeclaimlist\",secret:\"secretlist\",configMap:\"configmaplist\",ingress:\"ingresslist\",\ndiscovery:\"discovery\",config:\"config\",storageClass:\"storageclasslist\",about:\"about\",settings:\"settings\",overview:\"overview\"}}Kd.prototype.isVisible=function(){return this.a.isVisible()};Kd.prototype.isVisible=Kd.prototype.isVisible;Kd.prototype.toggle=function(){this.a.toggle()};Kd.prototype.G=function(a){this.a.G(a)};Kd.prototype.setVisibility=Kd.prototype.G;Kd.$inject=[\"kdNavService\"];var Ld={controller:Kd,templateUrl:\"chrome/nav/nav.html\"};function Md(a,b){this.a=[];this.c=b;this.b=a;this.isVisible_=!0}Md.prototype.O=function(a){for(var b=this.b.state;b;){var c=this.a.lastIndexOf(b.name);if(-1!==c)return this.a[c]===a;b.data&&b.data.kdBreadcrumbs?b=this.c.get(b.data.kdBreadcrumbs.parent):b=null}return!1};Md.prototype.toggle=function(){this.isVisible_=!this.isVisible_};Md.prototype.G=function(a){this.isVisible_=a};Md.prototype.isVisible=function(){return this.isVisible_};Md.$inject=[\"kdFutureStateService\",\"$state\"];function Nd(a,b){this.b=a;this.a=b}Nd.prototype.$onInit=function(){this.a.a.push(this.state)};Nd.prototype.$onInit=Nd.prototype.$onInit;Nd.prototype.Gb=function(){return this.href?this.href:this.b.href(this.state)};Nd.prototype.getHref=Nd.prototype.Gb;Nd.prototype.O=function(){return void 0!==this.active?this.active:this.a.O(this.state)};Nd.prototype.isActive=Nd.prototype.O;Nd.$inject=[\"$state\",\"kdNavService\"];var Od={controller:Nd,bindings:{state:\"@\",href:\"@\",active:\"=\"},transclude:!0,templateUrl:\"chrome/nav/navitem.html\"};function Pd(a){this.isVisible=!1;this.a=a}Pd.prototype.$onInit=function(){var a=this;this.a(\"api/v1/rbac/status\").get().$promise.then(function(b){b&&b.enabled&&(Object.assign(a.states,{role:\"rolelist\"}),a.isVisible=!0)})};Pd.prototype.$onInit=Pd.prototype.$onInit;Pd.$inject=[\"$resource\"];var Qd={controller:Pd,templateUrl:\"chrome/nav/rolenav.html\",bindings:{states:\"=\"}};var Rd=angular.module(\"kubernetesDashboard.chrome.nav\",[\"ngMaterial\",\"ngResource\",\"ui.router\",vb.name]).service(\"kdNavService\",Md).component(\"kdNavHamburger\",Jd).component(\"kdNavItem\",Od).component(\"kdNav\",Ld).component(\"kdRoleNav\",Qd);function Sd(a,b){this.a=a;this.b=b;this.query=\"\"}Sd.prototype.$onInit=function(){var a=this;this.b.onStart({},function(){a.clear()})};Sd.prototype.clear=function(){this.query=\"\"};Sd.prototype.clear=Sd.prototype.clear;Sd.prototype.submit=function(){this.a.go(\"search\",{q:this.query})};Sd.prototype.submit=Sd.prototype.submit;Sd.$inject=[\"$state\",\"$transitions\"];var Td={controller:Sd,templateUrl:\"chrome/search/search.html\"};function Ud(a){var b={},c={};a.state(\"chrome\",{url:\"?namespace\",\"abstract\":!0,data:(b.authRequired=!0,b),views:(c[\"\"]={template:'<div ui-view class=\"kd-content-div-filled\"></div>'},c.actionbar={template:'<div ui-view=\"actionbar\" layout=\"row\"></div>'},c)});a.decorator(\"parent\",Vd)}Ud.$inject=[\"$stateProvider\"];\nfunction Vd(a,b){var c=a.self;if(!c.parent&&\"chrome\"!==c.name&&\"login\"!==c.name)throw Error('State \"'+c.name+'\" requires parent state to be set to chrome. This is likely a programming error.');return b(a)};var E=angular.module(\"kubernetesDashboard.chrome\",[\"ngMaterial\",\"ui.router\",A.name,l.name,Rd.name]).config(Ud).component(\"kdChrome\",Fd).component(\"kdControlPanel\",Hd).component(\"kdSearch\",Td);function Wd(){this.i18n=Xd}Wd.prototype.i=function(){return void 0!==this.eventList&&void 0!==this.eventListResource?\"events\":\"\"};Wd.prototype.getSelectId=Wd.prototype.i;Wd.prototype.Ic=function(a){return a.type===Yd};Wd.prototype.isEventWarning=Wd.prototype.Ic;Wd.prototype.wc=function(){return void 0!==this.eventList&&0<this.eventList.events.length};Wd.prototype.hasEvents=Wd.prototype.wc;\nvar Zd={templateUrl:\"events/cardlist.html\",controller:Wd,bindings:{eventList:\"<\",eventListResource:\"<\"}},Xd={MSG_EVENTS_WARNING_LABEL:\"Warning\"},Yd=Xd.MSG_EVENTS_WARNING_LABEL;var F=angular.module(\"kubernetesDashboard.events\",[\"ngMaterial\",A.name,p.name]).component(\"kdEventCardList\",Zd);function $d(a){this.details=a}$d.$inject=[\"namespaceDetail\"];function ae(a,b){this.namespaceDetail=a;this.eventListResource=b}ae.$inject=[\"namespaceDetail\",\"kdNamespaceEventsResource\"];var be={},ce={},fe={url:\"/namespace/:objectName\",parent:\"namespace\",resolve:{namespaceDetailResource:de,namespaceDetail:ee},data:(be.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"namespacelist\"},be),views:(ce[\"\"]={controller:ae,controllerAs:\"ctrl\",templateUrl:\"namespace/detail/detail.html\"},ce[\"actionbar@chrome\"]={controller:$d,controllerAs:\"$ctrl\",templateUrl:\"namespace/detail/actionbar.html\"},ce)};function ge(a){return a(\"api/v1/namespace/:name/event\")}ge.$inject=[\"$resource\"];\nfunction de(a,b){return a(\"api/v1/namespace/\"+b.objectName)}de.$inject=[\"$resource\",\"$stateParams\"];function ee(a){return a.get().$promise}ee.$inject=[\"namespaceDetailResource\"];function he(a){this.a=a}he.prototype.O=function(){return\"Active\"===this.namespace.phase};he.prototype.isActive=he.prototype.O;he.prototype.hd=function(){return\"Terminating\"===this.namespace.phase};he.prototype.isTerminating=he.prototype.hd;he.prototype.Ob=function(){return this.a.href(\"namespacedetail\",new Ob(this.namespace.objectMeta.name))};he.prototype.getNamespaceDetailHref=he.prototype.Ob;he.$inject=[\"$state\"];var ie={bindings:{namespace:\"=\"},controller:he,templateUrl:\"namespace/list/card.html\"};function je(){}je.prototype.i=function(){return void 0!==this.namespaceList&&void 0!==this.namespaceListResource?\"namespaces\":\"\"};je.prototype.getSelectId=je.prototype.i;var ke={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:je,bindings:{namespaceList:\"<\",namespaceListResource:\"<\"},templateUrl:\"namespace/list/cardlist.html\"};function le(a,b){this.namespaceList=a;this.namespaceListResource=b}le.$inject=[\"namespaceList\",\"kdNamespaceListResource\"];var me={},oe={url:\"/namespace\",parent:\"namespace\",resolve:{namespaceList:ne},data:(me.kdBreadcrumbs={label:\"Namespaces\",parent:\"cluster\"},me),views:{\"\":{controller:le,controllerAs:\"$ctrl\",templateUrl:\"namespace/list/list.html\"}}};function pe(a){return a(\"api/v1/namespace\")}pe.$inject=[\"$resource\"];function ne(a,b){var c=b.l(\"\");return a.get(c).$promise}ne.$inject=[\"kdNamespaceListResource\",\"kdDataSelectService\"];function qe(a){a.state(\"namespace\",re).state(\"namespacelist\",oe).state(\"namespacedetail\",fe)}qe.$inject=[\"$stateProvider\"];var re={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var se=angular.module(\"kubernetesDashboard.namespace\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(qe).component(\"kdNamespaceCard\",ie).component(\"kdNamespaceCardList\",ke).component(\"kdNamespaceInfo\",{templateUrl:\"namespace/detail/info.html\",bindings:{namespace:\"=\"}}).factory(\"kdNamespaceEventsResource\",ge).factory(\"kdNamespaceListResource\",pe);function te(a,b,c){this.nodeDetail=a;this.podListResource=b;this.eventListResource=c}te.$inject=[\"nodeDetail\",\"kdNodePodsResource\",\"kdNodeEventsResource\"];var ue={},ve={},ye={url:\"/node/:objectName\",parent:\"node\",resolve:{nodeDetailResource:we,nodeDetail:xe},data:(ue.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"nodelist\"},ue),views:(ve[\"\"]={controller:te,controllerAs:\"ctrl\",templateUrl:\"node/detail/detail.html\"},ve[\"actionbar@chrome\"]={},ve)};function ze(a){return a(\"api/v1/node/:name/event\")}ze.$inject=[\"$resource\"];function Ae(a){return a(\"api/v1/node/:name/pod\")}Ae.$inject=[\"$resource\"];\nfunction we(a,b){return a(\"api/v1/node/\"+b.objectName)}we.$inject=[\"$resource\",\"$stateParams\"];function xe(a,b,c){b=b.l(\"\",c.objectName);return a.get(b).$promise}xe.$inject=[\"nodeDetailResource\",\"kdDataSelectService\",\"$stateParams\"];function Be(a){this.a=a}Be.prototype.Rc=function(){return\"True\"===this.node.ready};Be.prototype.isInReadyState=Be.prototype.Rc;Be.prototype.Qc=function(){return\"False\"===this.node.ready};Be.prototype.isInNotReadyState=Be.prototype.Qc;Be.prototype.Sc=function(){return\"Unknown\"===this.node.ready};Be.prototype.isInUnknownState=Be.prototype.Sc;Be.prototype.Pb=function(){return this.a.href(\"nodedetail\",new Ob(this.node.objectMeta.name))};Be.prototype.getNodeDetailHref=Be.prototype.Pb;Be.$inject=[\"$state\"];\nvar Ce={bindings:{node:\"=\"},controller:Be,templateUrl:\"node/list/card.html\"};function De(){}De.prototype.i=function(){return void 0!==this.nodeList&&void 0!==this.nodeListResource?\"nodes\":\"\"};De.prototype.getSelectId=De.prototype.i;var Ee={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:De,bindings:{nodeList:\"<\",nodeListResource:\"<\"},templateUrl:\"node/list/cardlist.html\"};function Fe(a,b){this.nodeList=a;this.nodeListResource=b}Fe.$inject=[\"nodeList\",\"kdNodeListResource\"];var Ge={},Ie={url:\"/node\",parent:\"node\",resolve:{nodeList:He},data:(Ge.kdBreadcrumbs={label:\"Nodes\",parent:\"cluster\"},Ge),views:{\"\":{controller:Fe,controllerAs:\"$ctrl\",templateUrl:\"node/list/list.html\"}}};function Je(a){return a(\"api/v1/node\")}Je.$inject=[\"$resource\"];function He(a,b){var c=b.l(\"\");return a.get(c).$promise}He.$inject=[\"kdNodeListResource\",\"kdDataSelectService\"];function Ke(a){a.state(\"node\",Le).state(\"nodelist\",Ie).state(\"nodedetail\",ye)}Ke.$inject=[\"$stateProvider\"];var Le={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Me=angular.module(\"kubernetesDashboard.node\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Ke).component(\"kdNodeAllocatedResources\",{controller:function(){},templateUrl:\"node/detail/allocatedresources.html\",bindings:{allocatedResources:\"=\"}}).component(\"kdNodeCard\",Ce).component(\"kdNodeCardList\",Ee).component(\"kdNodeInfo\",{controller:function(){},templateUrl:\"node/detail/info.html\",bindings:{node:\"=\"}}).factory(\"kdNodeEventsResource\",ze).factory(\"kdNodeListResource\",\nJe).factory(\"kdNodePodsResource\",Ae);function Ne(a){this.a=a}Ne.prototype.ca=function(){if(this.persistentVolume.claim){var a=this.persistentVolume.claim.split(\"/\");if(2<=a.length)return this.a.href(\"persistentvolumeclaimdetail\",new q(a[0],a[1]))}return\"\"};Ne.prototype.getPersistentVolumeClaimDetailsHref=Ne.prototype.ca;Ne.prototype.ea=function(){return this.a.href(\"storageclassdetail\",new Ob(this.persistentVolume.storageClass))};Ne.prototype.getStorageClassDetailsHref=Ne.prototype.ea;Ne.$inject=[\"$state\"];\nvar Oe={controller:Ne,templateUrl:\"persistentvolume/detail/info.html\",bindings:{persistentVolume:\"=\"}};function Pe(a){this.a=a}Pe.prototype.Tb=function(){return this.a.href(\"persistentvolumedetail\",new q(\"\",this.persistentVolume.objectMeta.name))};Pe.prototype.getPersistentVolumeDetailHref=Pe.prototype.Tb;Pe.prototype.ca=function(){if(this.persistentVolume.claim){var a=this.persistentVolume.claim.split(\"/\");if(2<=a.length)return this.a.href(\"persistentvolumeclaimdetail\",new q(a[0],a[1]))}return\"\"};Pe.prototype.getPersistentVolumeClaimDetailsHref=Pe.prototype.ca;Pe.$inject=[\"$state\"];\nvar Qe={bindings:{persistentVolume:\"=\"},controller:Pe,templateUrl:\"persistentvolume/list/card.html\"};function Re(){}Re.prototype.i=function(){return void 0!==this.persistentVolumeList&&void 0!==this.persistentVolumeListResource?\"persistentvolumes\":\"\"};Re.prototype.getSelectId=Re.prototype.i;var Se={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:Re,bindings:{persistentVolumeList:\"<\",persistentVolumeListResource:\"<\"},templateUrl:\"persistentvolume/list/cardlist.html\"};function Te(a,b){this.persistentVolumeList=a;this.persistentVolumeListResource=b}Te.$inject=[\"persistentVolumeList\",\"kdPersistentVolumeListResource\"];var Ue={},We={url:\"/persistentvolume\",parent:\"persistentvolume\",resolve:{persistentVolumeList:Ve},data:(Ue.kdBreadcrumbs={label:\"Persistent Volumes\",parent:\"cluster\"},Ue),views:{\"\":{controller:Te,controllerAs:\"$ctrl\",templateUrl:\"persistentvolume/list/list.html\"}}};function Xe(a){return a(\"api/v1/persistentvolume\")}Xe.$inject=[\"$resource\"];function Ve(a,b){var c=b.l(\"\");return a.get(c).$promise}Ve.$inject=[\"kdPersistentVolumeListResource\",\"kdDataSelectService\"];function Ye(a){this.details=a}Ye.$inject=[\"persistentVolumeDetail\"];function Ze(a){this.persistentVolumeDetail=a}Ze.$inject=[\"persistentVolumeDetail\"];var $e={},af={},df={url:\"/persistentvolume/:objectName\",parent:\"persistentvolume\",resolve:{persistentVolumeDetailResource:bf,persistentVolumeDetail:cf},data:($e.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"persistentvolumelist\"},$e),views:(af[\"\"]={controller:Ze,controllerAs:\"$ctrl\",templateUrl:\"persistentvolume/detail/detail.html\"},af[\"actionbar@chrome\"]={controller:Ye,controllerAs:\"$ctrl\",templateUrl:\"persistentvolume/detail/actionbar.html\"},af)};\nfunction bf(a,b){return a(\"api/v1/persistentvolume/\"+b.objectName)}bf.$inject=[\"$resource\",\"$stateParams\"];function cf(a){return a.get().$promise}cf.$inject=[\"persistentVolumeDetailResource\"];function ef(a){a.state(\"persistentvolume\",ff).state(\"persistentvolumelist\",We).state(\"persistentvolumedetail\",df)}ef.$inject=[\"$stateProvider\"];var ff={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var gf=angular.module(\"kubernetesDashboard.persistentVolume\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(ef).component(\"kdPersistentVolumeCardList\",Se).component(\"kdPersistentVolumeCard\",Qe).component(\"kdPersistentVolumeInfo\",Oe).component(\"kdPersistentVolumeSourceInfo\",{controller:function(){},templateUrl:\"persistentvolume/detail/sourceinfo.html\",bindings:{persistentVolumeSource:\"=\"}}).factory(\"kdPersistentVolumeListResource\",Xe);function hf(){}hf.prototype.i=function(){return void 0!==this.roleList&&void 0!==this.roleListResource?\"roles\":\"\"};hf.prototype.getSelectId=hf.prototype.i;var jf={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:hf,bindings:{roleList:\"<\",roleListResource:\"<\"},templateUrl:\"role/list/cardlist.html\"};function kf(a,b){this.roleList=a;this.roleListResource=b}kf.$inject=[\"roleList\",\"kdRoleListResource\"];var lf={},nf={url:\"/role\",parent:\"role\",resolve:{roleList:mf},data:(lf.kdBreadcrumbs={label:\"Roles\",parent:\"cluster\"},lf),views:{\"\":{controller:kf,controllerAs:\"$ctrl\",templateUrl:\"role/list/list.html\"}}};function of(a){return a(\"api/v1/rbac/role\")}of.$inject=[\"$resource\"];function mf(a,b){var c=b.l(\"\");return a.get(c).$promise}mf.$inject=[\"kdRoleListResource\",\"kdDataSelectService\"];function pf(a){a.state(\"role\",qf).state(\"rolelist\",nf)}pf.$inject=[\"$stateProvider\"];var qf={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var rf=angular.module(\"kubernetesDashboard.role\",[\"ngMaterial\",\"ngResource\",\"ui.router\",p.name,A.name,E.name]).config(pf).component(\"kdRoleCardList\",jf).component(\"kdRoleCard\",{bindings:{role:\"=\"},controller:function(){},templateUrl:\"role/list/card.html\"}).factory(\"kdRoleListResource\",of);function sf(a){this.details=a}sf.$inject=[\"storageClass\"];function tf(a,b){this.storageClass=a;this.storageClassPersistentVolumesResource=b}tf.$inject=[\"storageClass\",\"kdStorageClassPersistentVolumesResource\"];var uf={},vf={},yf={url:\"/storageclass/:objectName\",parent:\"storageclass\",resolve:{storageClassResource:wf,storageClass:xf},data:(uf.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"storageclasslist\"},uf),views:(vf[\"\"]={controller:tf,controllerAs:\"$ctrl\",templateUrl:\"storageclass/detail/detail.html\"},vf[\"actionbar@chrome\"]={controller:sf,controllerAs:\"$ctrl\",templateUrl:\"storageclass/detail/actionbar.html\"},vf)};function wf(a,b){return a(\"api/v1/storageclass/\"+b.objectName)}\nwf.$inject=[\"$resource\",\"$stateParams\"];function xf(a){return a.get().$promise}xf.$inject=[\"storageClassResource\"];function zf(a,b){return a(\"api/v1/storageclass/\"+b.objectName+\"/persistentvolume\")}zf.$inject=[\"$resource\",\"$stateParams\"];function Af(a){this.a=a}Af.prototype.mc=function(){return this.a.href(\"storageclassdetail\",new q(\"\",this.storageClass.objectMeta.name))};Af.prototype.getStorageClassDetailHref=Af.prototype.mc;Af.$inject=[\"$state\"];var Bf={bindings:{storageClass:\"=\"},controller:Af,templateUrl:\"storageclass/list/card.html\"};function Cf(){}Cf.prototype.i=function(){return void 0!==this.storageClassList&&void 0!==this.storageClassListResource?\"storageclasses\":\"\"};Cf.prototype.getSelectId=Cf.prototype.i;var Df={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:Cf,bindings:{storageClassList:\"<\",storageClassListResource:\"<\"},templateUrl:\"storageclass/list/cardlist.html\"};function Ef(a,b){this.storageClassList=a;this.storageClassListResource=b}Ef.$inject=[\"storageClassList\",\"kdStorageClassListResource\"];var Ff={},Hf={url:\"/storageclass\",parent:\"storageclass\",resolve:{storageClassList:Gf},data:(Ff.kdBreadcrumbs={label:\"Storage Classes\",parent:\"cluster\"},Ff),views:{\"\":{controller:Ef,controllerAs:\"$ctrl\",templateUrl:\"storageclass/list/list.html\"}}};function If(a){return a(\"api/v1/storageclass\")}If.$inject=[\"$resource\"];function Gf(a,b){var c=b.l(\"\");return a.get(c).$promise}Gf.$inject=[\"kdStorageClassListResource\",\"kdDataSelectService\"];function Jf(a){a.state(\"storageclass\",Kf).state(\"storageclasslist\",Hf).state(\"storageclassdetail\",yf)}Jf.$inject=[\"$stateProvider\"];var Kf={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Lf=angular.module(\"kubernetesDashboard.storageClass\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name,gf.name]).config(Jf).component(\"kdStorageClassCard\",Bf).component(\"kdStorageClassCardList\",Df).component(\"kdStorageClassInfo\",{templateUrl:\"storageclass/detail/info.html\",bindings:{storageClass:\"=\"}}).factory(\"kdStorageClassListResource\",If).factory(\"kdStorageClassPersistentVolumesResource\",zf);function Mf(a,b,c,d,f,g){this.cluster=a;this.kdNamespaceListResource=b;this.kdNodeListResource=c;this.kdPersistentVolumeListResource=d;this.kdRoleListResource=f;this.kdStorageClassListResource=g}Mf.prototype.A=function(){return 0===this.cluster.nodeList.listMeta.totalItems+this.cluster.namespaceList.listMeta.totalItems+this.cluster.persistentVolumeList.listMeta.totalItems+this.cluster.roleList.listMeta.totalItems+this.cluster.storageClassList.listMeta.totalItems};\nMf.prototype.shouldShowZeroState=Mf.prototype.A;Mf.$inject=\"cluster kdNamespaceListResource kdNodeListResource kdPersistentVolumeListResource kdRoleListResource kdStorageClassListResource\".split(\" \");function Nf(a){var b={};a.state(\"cluster\",{url:\"/cluster\",parent:\"chrome\",resolve:{cluster:Of},data:(b.kdBreadcrumbs={label:Pf},b),views:{\"\":{controller:Mf,controllerAs:\"$ctrl\",templateUrl:\"cluster/cluster.html\"}}})}Nf.$inject=[\"$stateProvider\"];function Of(a,b){var c=b.l();return a.get(c).$promise}Of.$inject=[\"kdClusterResource\",\"kdDataSelectService\"];var Pf=\"Cluster\";var Rf=angular.module(\"kubernetesDashboard.cluster\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,Me.name,se.name,gf.name,rf.name,Lf.name]).config(Nf).factory(\"kdClusterResource\",Qf);function Qf(a){return a(\"api/v1/cluster\")}Qf.$inject=[\"$resource\"];function Sf(a){this.a=a}function Tf(a,b){return a.a(\"api/v1/csrftoken/\"+b).get().$promise.then(a.b)}Sf.prototype.b=function(a){return a.token};Sf.$inject=[\"$resource\"];var Uf=angular.module(\"kubernetesDashboard.common.csrftoken\",[\"ui.router\"]).service(\"kdCsrfTokenService\",Sf).constant(\"kdCsrfTokenHeader\",\"X-CSRF-TOKEN\");function Vf(a,b){this.namespace=b;this.error=a}qa(Vf,xa);var Wf={MSG_DEPLOY_NAMESPACE_MISMATCH_ERROR:\"Your file specifies a namespace that is inconsistent with the namespace currently selected in Dashboard. Either edit the namespace entry in your file or select a different namespace in Dashboard to deploy to (eg. 'All namespaces' or the correct namespace provided in the file).\",MSG_DEPLOY_EMPTY_NAMESPACE_ERROR:\"Dashboard and your file do not specify any namespace to deploy a resource. Please select a specific namespace in dashboard or add one in yaml file.\",\nMSG_LOGIN_UNAUTHORIZED_ERROR:\"Authentication failed. Please try again.\",MSG_ENCRYPTION_KEY_CHANGED:\"Session expired. Please log in again.\",MSG_DASHBOARD_EXCLUSIVE_RESOURCE_ERROR:\"Trying to access/modify dashboard exclusive resource.\",MSG_TOKEN_EXPIRED_ERROR:\"Session expired. Please log in again.\",MSG_FORBIDDEN_ERROR:\"You do not have required permissions to access this page.\",MSG_FORBIDDEN_RESOURCE_ERROR:\"You do not have required permissions to access this resource.\",MSG_FORBIDDEN_TITLE_ERROR:\"Forbidden\"};\nfunction Xf(a,b){for(var c=[],d=1;d<arguments.length;++d)c[d-1]=arguments[d];var f=!1;c.forEach(function(b){b===a.trim()&&(f=!0)});return f};function Yf(a,b){this.a=a;this.b=b}function Zf(a){return a.a(\"api/v1/settings/global/cani\").get().$promise.then(function(b){if(b.allowed)return a.a(\"api/v1/settings/global\").get().$promise;a.b.go(\"internalerror\",{error:{statusText:Wf.MSG_FORBIDDEN_TITLE_ERROR,status:403,data:Wf.MSG_FORBIDDEN_ERROR}})},function(b){a.b.go(\"internalerror\",new Vf(b.detail,\"\"))})}Yf.$inject=[\"$resource\",\"$state\"];function $f(a,b,c){this.request=function(d){-1!==d.url.indexOf(\"api/v1\")&&(d.headers[c]=a.get(b));return d}}function ag(a,b,c){return new $f(a,b,c)}ag.$inject=[\"$cookies\",\"kdTokenCookieName\",\"kdTokenHeaderName\"];$f.$inject=[\"$cookies\",\"kdTokenCookieName\",\"kdTokenHeaderName\"];function bg(a,b,c,d,f,g,h,k,D,u){this.a=a;this.s=b;this.w=c;this.B=d;this.h=f;this.c=g;this.g=h;this.b=k;this.D=D;this.j=u}function cg(a,b){a.a.put(a.b,b,{secure:!0});a.a.put(a.b,b,{domain:\"localhost\"});a.a.put(a.b,b,{domain:\"127.0.0.1\"})}function dg(a){a.a.remove(a.b);a.a.remove(\"skipLoginPage\")}\nbg.prototype.ka=function(a){var b=this,c=this.c.defer();Tf(this.w,\"login\").then(function(d){var f={};b.g(\"api/v1/login\",{},{save:{method:\"POST\",headers:(f[b.j]=d,f)}}).save(a,function(a){0!==a.jweToken.length&&0===a.errors.length&&cg(b,a.jweToken);c.resolve(a.errors)},function(a){c.reject(a)})},function(a){c.reject(a)});return c.promise};bg.prototype.la=function(){dg(this);this.h.go(\"login\")};\nbg.prototype.ia=function(a){var b=this,c=this.c.defer();Gd(this).then(function(d){\"login\"!==a.to().name||!d.headerPresent&&!d.tokenPresent&&d.httpsMode?\"login\"===a.to().name||\"internalerror\"===a.to().name||\"true\"===b.a.get(\"skipLoginPage\")||!d.httpsMode||d.headerPresent||d.tokenPresent?c.resolve(!0):c.resolve(b.h.target(\"login\")):c.resolve(b.h.target(\"overview\"))},function(a){b.B.error(a);c.resolve(!0)});return c.promise};\nfunction eg(a){var b=a.a.get(a.b)||\"\",c=a.c.defer();if(0===b.length)return c.resolve(!0),c.promise;Tf(a.w,\"token\").then(function(d){var f={};a.g(\"api/v1/token/refresh\",{},{save:{method:\"POST\",headers:(f[a.j]=d,f)}}).save({jweToken:b},function(b){0!==b.jweToken.length&&0===b.errors.length?(cg(a,b.jweToken),c.resolve(b.jweToken)):c.resolve(b.errors)},function(a){c.resolve(a)})},function(a){c.resolve(a)});return c.promise}\nfunction Gd(a){var b=a.a.get(a.b)||\"\",c={};return a.g(\"api/v1/login/status\",{},{get:{method:\"GET\",headers:(c[a.D]=b,c)}}).get().$promise}function fg(a){function b(a){return a.data&&!0===a.data.authRequired}a.s.onBefore({to:b},function(b){return a.ia(b)},{priority:10});a.s.onBefore({to:b},function(){return eg(a)})}bg.$inject=\"$cookies $transitions kdCsrfTokenService $log $state $q $resource kdTokenCookieName kdTokenHeaderName kdCsrfTokenHeader\".split(\" \");var ig=angular.module(\"kubernetesDashboard.auth\",[\"ngCookies\",\"ngResource\",\"ui.router\",Uf.name]).service(\"kdAuthService\",bg).service(\"kdAuthorizerService\",Yf).factory(\"kdAuthInterceptor\",ag).config(gg).constant(\"kdTokenCookieName\",\"jweToken\").constant(\"kdTokenHeaderName\",\"jweToken\").run(hg);function hg(a){fg(a)}hg.$inject=[\"kdAuthService\"];function gg(a){a.interceptors.push(\"kdAuthInterceptor\")}gg.$inject=[\"$httpProvider\"];function y(a,b,c,d,f,g,h,k,D,u){this.currentPods=g;this.desiredPods=h;this.c=f;this.a=a;this.b=b;this.h=c;this.g=d;this.resourceKindName=D;this.resourceKindDisplayName=u;this.resourceName=k}y.prototype.sb=function(){return\"Current status: \"+(this.currentPods+\" created\")};y.prototype.getCurrentPods=y.prototype.sb;y.prototype.xb=function(){return\"\\n    \"+(this.desiredPods+\" desired.\\n  \")};y.prototype.getDesiredPods=y.prototype.xb;y.prototype.Gd=function(){return jg(this).update(this.s.bind(this),this.j.bind(this)).$promise};\ny.prototype.scaleResource=y.prototype.Gd;function jg(a){return a.g(\"api/v1/scale/\"+a.resourceKindName+\"/\"+a.c+\"/\"+a.resourceName+\"/\",{scaleBy:a.desiredPods},{update:{method:\"PUT\",transformRequest:function(a){a=angular.extend({},a,{\"Content-Type\":\"application/json\"});return angular.toJson(a)}}})}y.prototype.Tc=function(){return\"job\"===this.resourceKindName.toLowerCase()};y.prototype.isJob=y.prototype.Tc;y.prototype.cancel=function(){this.a.cancel()};y.prototype.cancel=y.prototype.cancel;\ny.prototype.s=function(a){this.b.info(\"Successfully updated replicas number to \"+a.desiredReplicas);this.a.hide();this.h.reload()};y.prototype.j=function(a){this.b.error(a);this.a.hide()};y.$inject=\"$mdDialog $log $state $resource namespace currentPods desiredPods resourceName resourceKindName resourceKindDisplayName\".split(\" \");function kg(a){this.a=a}kg.$inject=[\"$mdDialog\"];var lg=angular.module(\"kubernetesDashboard.scaling\",[\"ngMaterial\"]).service(\"kdScaleService\",kg);function mg(a,b){this.g=a;this.c=b;this.a=void 0;this.b=!1}mg.prototype.load=function(){var a=this;this.g(\"api/v1/settings/global\").get(function(b){a.a=b;a.b=!0;a.c.info(\"Reloaded global settings: \",b)},function(b){a.c.info(\"Error during global settings reload: \",b)})};mg.prototype.ua=function(){var a=\"\";this.b&&void 0!==this.a&&(a=this.a.clusterName);return a};mg.prototype.getClusterName=mg.prototype.ua;mg.prototype.N=function(){var a=10;this.b&&void 0!==this.a&&(a=this.a.itemsPerPage);return a};\nmg.prototype.getItemsPerPage=mg.prototype.N;mg.prototype.ta=function(){var a=5;this.b&&void 0!==this.a&&(a=this.a.autoRefreshTimeInterval);return a};mg.prototype.getAutoRefreshTimeInterval=mg.prototype.ta;mg.$inject=[\"$resource\",\"$log\"];var og=angular.module(\"kubernetesDashboard.common.settings\",[\"ui.router\",\"ngResource\"]).service(\"kdSettingsService\",mg).run(ng);function ng(a){a.load()}ng.$inject=[\"kdSettingsService\"];function pg(a,b){this.b=a;this.a=b}pg.prototype.f=function(){return this.a.f()};pg.prototype.areMultipleNamespacesSelected=pg.prototype.f;pg.prototype.ob=function(){return this.b.href(\"configmapdetail\",new q(this.configMap.objectMeta.namespace,this.configMap.objectMeta.name))};pg.prototype.getConfigMapDetailHref=pg.prototype.ob;pg.$inject=[\"$state\",\"kdNamespaceService\"];var qg={bindings:{configMap:\"=\"},controller:pg,templateUrl:\"configmap/list/card.html\"};function rg(a){this.a=a}rg.prototype.i=function(){return void 0!==this.configMapList&&void 0!==this.configMapListResource?\"configmaps\":\"\"};rg.prototype.getSelectId=rg.prototype.i;rg.prototype.f=function(){return this.a.f()};rg.prototype.areMultipleNamespacesSelected=rg.prototype.f;rg.$inject=[\"kdNamespaceService\"];var sg={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:rg,bindings:{configMapList:\"<\",configMapListResource:\"<\"},templateUrl:\"configmap/list/cardlist.html\"};function tg(a,b){this.configMapList=a;this.configMapListResource=b}tg.$inject=[\"configMapList\",\"kdConfigMapListResource\"];var ug={},wg={url:\"/configmap\",parent:\"configmap\",resolve:{configMapList:vg},data:(ug.kdBreadcrumbs={label:\"Config Maps\",parent:\"config\"},ug),views:{\"\":{controller:tg,controllerAs:\"$ctrl\",templateUrl:\"configmap/list/list.html\"}}};function xg(a){return a(\"api/v1/configmap/:namespace\")}xg.$inject=[\"$resource\"];function vg(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}vg.$inject=[\"kdConfigMapListResource\",\"$stateParams\",\"kdDataSelectService\"];function yg(a){this.details=a}yg.$inject=[\"configMapDetail\"];function zg(a){this.configMapDetail=a}zg.$inject=[\"configMapDetail\"];var Ag={},Bg={},Eg={url:r(\"/configmap\"),parent:\"configmap\",resolve:{configMapDetailResource:Cg,configMapDetail:Dg},data:(Ag.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"configmaplist\"},Ag),views:(Bg[\"\"]={controller:zg,controllerAs:\"$ctrl\",templateUrl:\"configmap/detail/detail.html\"},Bg[\"actionbar@chrome\"]={controller:yg,controllerAs:\"$ctrl\",templateUrl:\"configmap/detail/actionbar.html\"},Bg)};function Cg(a,b){return a(\"api/v1/configmap/\"+b.objectNamespace+\"/\"+b.objectName)}\nCg.$inject=[\"$resource\",\"$stateParams\"];function Dg(a){return a.get().$promise}Dg.$inject=[\"configMapDetailResource\"];function Fg(a){a.state(\"configmap\",Gg).state(\"configmaplist\",wg).state(\"configmapdetail\",Eg)}Fg.$inject=[\"$stateProvider\"];var Gg={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Hg=angular.module(\"kubernetesDashboard.configMap\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Fg).component(\"kdConfigMapCard\",qg).component(\"kdConfigMapCardList\",sg).component(\"kdConfigMapInfo\",{templateUrl:\"configmap/detail/info.html\",bindings:{configMap:\"=\"}}).factory(\"kdConfigMapListResource\",xg);function Ig(a){this.a=a}Ig.prototype.Ub=function(){return this.a.href(\"persistentvolumedetail\",new Ob(this.persistentVolumeClaim.volume))};Ig.prototype.getPersistentVolumeDetailsHref=Ig.prototype.Ub;Ig.prototype.ea=function(){return this.a.href(\"storageclassdetail\",new Ob(this.persistentVolumeClaim.storageClass))};Ig.prototype.getStorageClassDetailsHref=Ig.prototype.ea;Ig.$inject=[\"$state\"];var Jg={controller:Ig,templateUrl:\"persistentvolumeclaim/detail/info.html\",bindings:{persistentVolumeClaim:\"=\"}};function G(a,b,c){this.b=a;this.a=c}G.prototype.f=function(){return this.a.f()};G.prototype.areMultipleNamespacesSelected=G.prototype.f;G.prototype.Sb=function(){return this.b.href(\"persistentvolumeclaimdetail\",new q(this.persistentVolumeClaim.objectMeta.namespace,this.persistentVolumeClaim.objectMeta.name))};G.prototype.getPersistentVolumeClaimDetailHref=G.prototype.Sb;G.prototype.Fc=function(){return\"Bound\"===this.persistentVolumeClaim.status};G.prototype.isBound=G.prototype.Fc;\nG.prototype.o=function(){return\"Pending\"===this.persistentVolumeClaim.status};G.prototype.isPending=G.prototype.o;G.prototype.Wc=function(){return\"Lost\"===this.persistentVolumeClaim.status};G.prototype.isLost=G.prototype.Wc;G.$inject=[\"$state\",\"$interpolate\",\"kdNamespaceService\"];var Kg={bindings:{persistentVolumeClaim:\"=\"},controller:G,templateUrl:\"persistentvolumeclaim/list/card.html\"};function Lg(a){this.a=a}Lg.prototype.i=function(){return void 0!==this.persistentVolumeClaimList&&void 0!==this.persistentVolumeClaimListResource?\"persistentvolumeclaims\":\"\"};Lg.prototype.getSelectId=Lg.prototype.i;Lg.prototype.f=function(){return this.a.f()};Lg.prototype.areMultipleNamespacesSelected=Lg.prototype.f;Lg.$inject=[\"kdNamespaceService\"];\nvar Mg={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{persistentVolumeClaimList:\"<\",persistentVolumeClaimListResource:\"<\"},templateUrl:\"persistentvolumeclaim/list/cardlist.html\",controller:Lg};function Ng(a,b){this.persistentVolumeClaimList=a;this.persistentVolumeClaimListResource=b}Ng.$inject=[\"persistentVolumeClaimList\",\"kdPersistentVolumeClaimListResource\"];var Og={},Qg={url:\"/persistentvolumeclaim\",parent:\"persistentvolumeclaim\",resolve:{persistentVolumeClaimList:Pg},data:(Og.kdBreadcrumbs={parent:\"config\",label:\"Persistent Volume Claims\"},Og),views:{\"\":{controller:Ng,controllerAs:\"$ctrl\",templateUrl:\"persistentvolumeclaim/list/list.html\"}}};function Rg(a){return a(\"api/v1/persistentvolumeclaim/:namespace\")}Rg.$inject=[\"$resource\"];function Pg(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}\nPg.$inject=[\"kdPersistentVolumeClaimListResource\",\"$stateParams\",\"kdDataSelectService\"];function Sg(a){this.details=a}Sg.$inject=[\"persistentVolumeClaimDetail\"];function Tg(a){this.persistentVolumeClaimDetail=a}Tg.$inject=[\"persistentVolumeClaimDetail\"];var Ug={},Vg={},Yg={url:r(\"/persistentvolumeclaim\"),parent:\"persistentvolumeclaim\",resolve:{persistentVolumeClaimDetailResource:Wg,persistentVolumeClaimDetail:Xg},data:(Ug.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"persistentvolumeclaimlist\"},Ug),views:(Vg[\"\"]={controller:Tg,controllerAs:\"$ctrl\",templateUrl:\"persistentvolumeclaim/detail/detail.html\"},Vg[\"actionbar@chrome\"]={controller:Sg,controllerAs:\"$ctrl\",templateUrl:\"persistentvolumeclaim/detail/actionbar.html\"},Vg)};\nfunction Wg(a,b){return a(\"api/v1/persistentvolumeclaim/\"+b.objectNamespace+\"/\"+b.objectName)}Wg.$inject=[\"$resource\",\"$stateParams\"];function Xg(a){return a.get().$promise}Xg.$inject=[\"persistentVolumeClaimDetailResource\"];function Zg(a){a.state(\"persistentvolumeclaim\",$g).state(\"persistentvolumeclaimlist\",Qg).state(\"persistentvolumeclaimdetail\",Yg)}Zg.$inject=[\"$stateProvider\"];var $g={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var ah=angular.module(\"kubernetesDashboard.persistentVolumeClaim\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Zg).component(\"kdPersistentVolumeClaimCard\",Kg).component(\"kdPersistentVolumeClaimCardList\",Mg).component(\"kdPersistentVolumeClaimInfo\",Jg).factory(\"kdPersistentVolumeClaimListResource\",Rg);function bh(a,b){this.b=a;this.a=b}bh.prototype.cc=function(){return this.b.href(\"secretdetail\",new q(this.secret.objectMeta.namespace,this.secret.objectMeta.name))};bh.prototype.getSecretDetailHref=bh.prototype.cc;bh.prototype.f=function(){return this.a.f()};bh.prototype.areMultipleNamespacesSelected=bh.prototype.f;bh.$inject=[\"$state\",\"kdNamespaceService\"];var ch={bindings:{secret:\"=\"},controller:bh,templateUrl:\"secret/list/card.html\"};function dh(a){this.a=a}dh.prototype.i=function(){return void 0!==this.secretList&&void 0!==this.secretListResource?\"secrets\":\"\"};dh.prototype.getSelectId=dh.prototype.i;dh.prototype.f=function(){return this.a.f()};dh.prototype.areMultipleNamespacesSelected=dh.prototype.f;dh.$inject=[\"kdNamespaceService\"];var eh={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"secret/list/cardlist.html\",controller:dh,bindings:{secretList:\"<\",secretListResource:\"<\"}};function fh(a,b){this.secretList=a;this.secretListResource=b}fh.$inject=[\"secretList\",\"kdSecretListResource\"];var gh={},ih={url:\"/secret\",parent:\"secret\",resolve:{secretList:hh},data:(gh.kdBreadcrumbs={label:\"Secrets\",parent:\"config\"},gh),views:{\"\":{controller:fh,controllerAs:\"$ctrl\",templateUrl:\"secret/list/list.html\"}}};function jh(a){return a(\"api/v1/secret/:namespace\")}jh.$inject=[\"$resource\"];function hh(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}hh.$inject=[\"kdSecretListResource\",\"$stateParams\",\"kdDataSelectService\"];function kh(a){this.details=a}kh.$inject=[\"secretDetail\"];function lh(a,b){this.secretDetail=a;this.a=b}lh.prototype.Z=function(a){return this.a.atob(a)};lh.prototype.formatDataValue=lh.prototype.Z;lh.$inject=[\"secretDetail\",\"$window\"];var mh={},nh={},qh={url:r(\"/secret\"),parent:\"secret\",resolve:{secretDetailResource:oh,secretDetail:ph},data:(mh.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"secretlist\"},mh),views:(nh[\"\"]={controller:lh,controllerAs:\"$ctrl\",templateUrl:\"secret/detail/detail.html\"},nh[\"actionbar@chrome\"]={controller:kh,controllerAs:\"$ctrl\",templateUrl:\"secret/detail/actionbar.html\"},nh)};function oh(a,b){return a(\"api/v1/secret/\"+b.objectNamespace+\"/\"+b.objectName)}oh.$inject=[\"$resource\",\"$stateParams\"];\nfunction ph(a){return a.get().$promise}ph.$inject=[\"secretDetailResource\"];function rh(a){a.state(\"secret\",sh).state(\"secretlist\",ih).state(\"secretdetail\",qh)}rh.$inject=[\"$stateProvider\"];var sh={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var th=angular.module(\"kubernetesDashboard.secret\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(rh).component(\"kdSecretCard\",ch).component(\"kdSecretCardList\",eh).component(\"kdSecretInfo\",{controller:function(){},templateUrl:\"secret/detail/info.html\",bindings:{secret:\"=\"}}).factory(\"kdSecretListResource\",jh);function uh(a,b,c,d){this.config=a;this.kdConfigMapListResource=b;this.kdSecretListResource=c;this.pvcListResource=d}uh.prototype.A=function(){return 0===this.config.configMapList.listMeta.totalItems+this.config.secretList.listMeta.totalItems+this.config.persistentVolumeClaimList.listMeta.totalItems};uh.prototype.shouldShowZeroState=uh.prototype.A;uh.$inject=[\"config\",\"kdConfigMapListResource\",\"kdSecretListResource\",\"kdPersistentVolumeClaimListResource\"];function vh(a){var b={};a.state(\"config\",{url:\"/config\",parent:\"chrome\",resolve:{config:wh},data:(b.kdBreadcrumbs={label:xh},b),views:{\"\":{controller:uh,controllerAs:\"$ctrl\",templateUrl:\"config/config.html\"}}})}vh.$inject=[\"$stateProvider\"];function wh(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}wh.$inject=[\"kdConfigResource\",\"$stateParams\",\"kdDataSelectService\"];var xh=\"Config and storage\";var zh=angular.module(\"kubernetesDashboard.config\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,Hg.name,th.name,ah.name]).config(vh).factory(\"kdConfigResource\",yh);function yh(a){return a(\"api/v1/config/:namespace\")}yh.$inject=[\"$resource\"];function Ah(a){this.details=a}Ah.$inject=[\"cronJobDetail\"];function Bh(a,b,c){this.cronJobDetail=a;this.activeJobsResource=b;this.eventsResource=c}Bh.$inject=[\"cronJobDetail\",\"kdActiveJobsResource\",\"kdEventsResource\"];var Ch={},Dh={},Gh={url:r(\"/cronjob\"),parent:\"cronjob\",resolve:{cronJobDetailResource:Eh,cronJobDetail:Fh},data:(Ch.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"cronjoblist\"},Ch),views:(Dh[\"\"]={controller:Bh,controllerAs:\"ctrl\",templateUrl:\"cronjob/detail/detail.html\"},Dh[\"actionbar@chrome\"]={templateUrl:\"cronjob/detail/actionbar.html\",controller:Ah,controllerAs:\"$ctrl\"},Dh)};function Eh(a,b){return a(\"api/v1/cronjob/\"+b.objectNamespace+\"/\"+b.objectName)}Eh.$inject=[\"$resource\",\"$stateParams\"];\nfunction Hh(a){return a(\"api/v1/cronjob/:namespace/:name/job\")}Hh.$inject=[\"$resource\"];function Ih(a){return a(\"api/v1/cronjob/:namespace/:name/event\")}Ih.$inject=[\"$resource\"];function Fh(a){return a.get().$promise}Fh.$inject=[\"cronJobDetailResource\"];function Jh(a,b,c){this.c=a;this.a=b;this.b=c}Jh.prototype.f=function(){return this.b.f()};Jh.prototype.areMultipleNamespacesSelected=Jh.prototype.f;Jh.prototype.rb=function(){return this.c.href(\"cronjobdetail\",new q(this.cronJob.objectMeta.namespace,this.cronJob.objectMeta.name))};Jh.prototype.getCronJobDetailHref=Jh.prototype.rb;Jh.prototype.pb=function(a){return\"Created at \"+this.a(\"{{date | date}}\")({date:a})};Jh.prototype.getCreatedAtTooltip=Jh.prototype.pb;\nJh.$inject=[\"$state\",\"$interpolate\",\"kdNamespaceService\"];var Kh={bindings:{cronJob:\"=\",showResourceKind:\"<\"},controller:Jh,templateUrl:\"cronjob/list/card.html\"};function Lh(a){this.a=a}Lh.prototype.i=function(){return void 0!==this.cronJobList&&void 0!==this.cronJobListResource?\"cronjobs\":\"\"};Lh.prototype.getSelectId=Lh.prototype.i;Lh.prototype.f=function(){return this.a.f()};Lh.prototype.areMultipleNamespacesSelected=Lh.prototype.f;Lh.$inject=[\"kdNamespaceService\"];var Mh={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{cronJobList:\"<\",cronJobListResource:\"<\",showResourceKind:\"<\"},templateUrl:\"cronjob/list/cardlist.html\",controller:Lh};function Nh(a,b){this.cronJobList=a;this.cronJobListResource=b}Nh.$inject=[\"cronJobList\",\"kdCronJobListResource\"];var Oh={},Qh={url:\"/cronjob\",parent:\"cronjob\",resolve:{cronJobList:Ph},data:(Oh.kdBreadcrumbs={label:\"Cron Jobs\",parent:\"workload\"},Oh),views:{\"\":{controller:Nh,controllerAs:\"$ctrl\",templateUrl:\"cronjob/list/list.html\"}}};function Rh(a){return a(\"api/v1/cronjob/:namespace\")}Rh.$inject=[\"$resource\"];function Ph(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Ph.$inject=[\"kdCronJobListResource\",\"$stateParams\",\"kdDataSelectService\"];function Sh(a){a.state(\"cronjob\",Th).state(\"cronjoblist\",Qh).state(\"cronjobdetail\",Gh)}Sh.$inject=[\"$stateProvider\"];var Th={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Uh=angular.module(\"kubernetesDashboard.cronjob\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,p.name,l.name]).config(Sh).component(\"kdCronJobCard\",Kh).component(\"kdCronJobCardList\",Mh).component(\"kdCronJobInfo\",{templateUrl:\"cronjob/detail/info.html\",bindings:{cronJob:\"=\"}}).factory(\"kdActiveJobsResource\",Hh).factory(\"kdEventsResource\",Ih).factory(\"kdCronJobListResource\",Rh);function Vh(){}Vh.prototype.H=function(){return this.daemonSet.podInfo.running===this.daemonSet.podInfo.desired};Vh.prototype.areDesiredPodsRunning=Vh.prototype.H;var Wh={controller:Vh,templateUrl:\"daemonset/detail/info.html\",bindings:{daemonSet:\"=\"}};function Xh(a){this.details=a}Xh.$inject=[\"daemonSetDetail\"];function Yh(a,b,c,d){this.daemonSetDetail=a;this.daemonSetPodsResource=b;this.daemonSetServicesResource=c;this.daemonSetEventsResource=d}Yh.$inject=[\"daemonSetDetail\",\"kdDaemonSetPodsResource\",\"kdDaemonSetServicesResource\",\"kdDaemonSetEventsResource\"];var Zh={},$h={},ci={url:r(\"/daemonset\"),parent:\"daemonset\",resolve:{daemonSetDetailResource:ai,daemonSetDetail:bi},data:(Zh.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"daemonsetlist\"},Zh),views:($h[\"\"]={controller:Yh,controllerAs:\"ctrl\",templateUrl:\"daemonset/detail/detail.html\"},$h[\"actionbar@chrome\"]={controller:Xh,controllerAs:\"$ctrl\",templateUrl:\"daemonset/detail/actionbar.html\"},$h)};function di(a){return a(\"api/v1/daemonset/:namespace/:name/pod\")}di.$inject=[\"$resource\"];\nfunction ei(a){return a(\"api/v1/daemonset/:namespace/:name/service\")}ei.$inject=[\"$resource\"];function fi(a){return a(\"api/v1/daemonset/:namespace/:name/event\")}fi.$inject=[\"$resource\"];function ai(a,b){return a(\"api/v1/daemonset/\"+b.objectNamespace+\"/\"+b.objectName)}ai.$inject=[\"$resource\",\"$stateParams\"];function bi(a,b,c){b=c.l(b.objectNamespace,b.objectName);return a.get(b).$promise}bi.$inject=[\"daemonSetDetailResource\",\"$stateParams\",\"kdDataSelectService\"];function H(a,b){this.b=a;this.a=b}H.prototype.f=function(){return this.a.f()};H.prototype.areMultipleNamespacesSelected=H.prototype.f;H.prototype.tb=function(){return this.b.href(\"daemonsetdetail\",new q(this.daemonSet.objectMeta.namespace,this.daemonSet.objectMeta.name))};H.prototype.getDaemonSetDetailHref=H.prototype.tb;H.prototype.m=function(){return 0<this.daemonSet.pods.warnings.length};H.prototype.hasWarnings=H.prototype.m;H.prototype.o=function(){return!this.m()&&0<this.daemonSet.pods.pending};\nH.prototype.isPending=H.prototype.o;H.prototype.u=function(){return!this.o()&&!this.m()};H.prototype.isSuccess=H.prototype.u;H.$inject=[\"$state\",\"kdNamespaceService\"];var gi={bindings:{daemonSet:\"=\",showResourceKind:\"<\"},controller:H,templateUrl:\"daemonset/list/card.html\"};function hi(a){this.a=a}hi.prototype.i=function(){return void 0!==this.daemonSetList&&void 0!==this.daemonSetListResource?\"daemonsets\":\"\"};hi.prototype.getSelectId=hi.prototype.i;hi.prototype.f=function(){return this.a.f()};hi.prototype.areMultipleNamespacesSelected=hi.prototype.f;hi.$inject=[\"kdNamespaceService\"];\nvar ii={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"daemonset/list/cardlist.html\",controller:hi,bindings:{daemonSetList:\"<\",daemonSetListResource:\"<\",selectable:\"<\",withStatuses:\"<\",showResourceKind:\"<\"}};function ji(a,b){this.daemonSetList=a;this.daemonSetListResource=b}ji.$inject=[\"daemonSetList\",\"kdDaemonSetListResource\"];var ki={},mi={url:\"/daemonset\",parent:\"daemonset\",resolve:{daemonSetList:li},data:(ki.kdBreadcrumbs={label:\"Daemon Sets\",parent:\"workload\"},ki),views:{\"\":{controller:ji,controllerAs:\"ctrl\",templateUrl:\"daemonset/list/list.html\"}}};function ni(a){return a(\"api/v1/daemonset/:namespace\")}ni.$inject=[\"$resource\"];function li(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}li.$inject=[\"kdDaemonSetListResource\",\"$stateParams\",\"kdDataSelectService\"];function oi(a){a.state(\"daemonset\",pi).state(\"daemonsetlist\",mi).state(\"daemonsetdetail\",ci)}oi.$inject=[\"$stateProvider\"];var pi={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var qi=angular.module(\"kubernetesDashboard.daemonSet\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(oi).component(\"kdDaemonSetCard\",gi).component(\"kdDaemonSetCardList\",ii).component(\"kdDaemonSetInfo\",Wh).factory(\"kdDaemonSetEventsResource\",fi).factory(\"kdDaemonSetListResource\",ni).factory(\"kdDaemonSetPodsResource\",di).factory(\"kdDaemonSetServicesResource\",ei);function ri(a){this.a=a}ri.prototype.open=function(a,b){var c=this.a.alert();c.title(a);c.textContent(b);c.ok(si);this.a.show(c)};ri.prototype.open=ri.prototype.open;ri.$inject=[\"$mdDialog\"];var si=\"Close\";function ti(){}ti.prototype.K=function(a){var b=Wf[a.trim()];return void 0===b?a:b};ti.prototype.localize=ti.prototype.K;function vi(a){return{ErrStatus:{message:String(a.data),code:a.status,status:String(a.status),reason:String(a.data)}}};var wi=angular.module(\"kubernetesDashboard.errorhandling\",[\"ngMaterial\"]).service(\"errorDialog\",ri).service(\"kdErrorService\",function(){}).service(\"localizerService\",ti);function xi(a,b){this.b=a;this.g=b;this.a=\"\";this.c=null}function yi(a){a.g.onSuccess({},function(b){a.a=b.from().name||\"\";a.c=b.params(\"from\")})}function zi(a){var b=a.a||\"overview\";a.b.current.name===a.a&&(b=\"overview\");a.b.go(b,a.c)}xi.$inject=[\"$state\",\"$transitions\"];var Bi=angular.module(\"kubernetesDashboard.common.history\",[\"ui.router\"]).service(\"kdHistoryService\",xi).run(Ai);function Ai(a){yi(a)}Ai.$inject=[\"kdHistoryService\"];function Ci(a){return{restrict:\"A\",require:\"ngModel\",link:function(b,c,d,f){d.kdValidate.split(\",\").forEach(function(b){b=b.trim();var c=Di(a,b);f.$validators[\"kdValid\"+b[0].toUpperCase()+b.substr(1)]=function(a){return c.a(a)}})}}}Ci.$inject=[\"kdValidatorFactory\"];function Ei(){if(this.constructor===Ei)throw new TypeError('Abstract class \"Validator\" cannot be instantiated directly.');}Ei.prototype.a=function(){};function Fi(){Ei.call(this)}qa(Fi,Ei);Fi.prototype.a=function(a){return Number(a)===a&&0===a%1||!a};function Gi(a,b,c){if(a.a.has(b))throw Error(\"Validator with name \"+b+\" is already registered.\");a.a.set(b,c)}function Di(a,b){var c=a.a.get(b);if(!c)throw Error(\"Given validator '\"+b+\"' is not supported.\");return c};var Hi=angular.module(\"kubernetesDashboard.common.validators\",[\"ngMaterial\"]).service(\"kdValidatorFactory\",function(){this.a=new Map;Gi(this,\"integer\",new Fi)}).directive(\"kdValidate\",Ci);function I(a,b,c){this.b=a;this.c=c;this.a=b;this.file={name:\"\",content:\"\"}}I.prototype.C=function(){return!1===this.form.$valid||this.a.C()};I.prototype.isDeployDisabled=I.prototype.C;I.prototype.V=function(a){this.file=a};I.prototype.onFileLoad=I.prototype.V;I.prototype.J=function(){Ii(this.a,this.file.content,!0,this.file.name)};I.prototype.deploy=I.prototype.J;I.prototype.cancel=function(){zi(this.b)};I.prototype.cancel=I.prototype.cancel;I.prototype.f=function(){return this.c.f()};\nI.prototype.areMultipleNamespacesSelected=I.prototype.f;I.$inject=[\"kdHistoryService\",\"kdDeployService\",\"kdNamespaceService\"];var Ji={controller:I,templateUrl:\"deploy/deployfromfile/deployfromfile.html\"};function Ki(a,b,c){this.b=a;this.c=c;this.a=b;this.inputData=\"\"}Ki.prototype.C=function(){return 0===this.inputData.length||this.a.C()};Ki.prototype.isDeployDisabled=Ki.prototype.C;Ki.prototype.J=function(){Ii(this.a,this.inputData)};Ki.prototype.deploy=Ki.prototype.J;Ki.prototype.cancel=function(){zi(this.b)};Ki.prototype.cancel=Ki.prototype.cancel;Ki.prototype.f=function(){return this.c.f()};Ki.prototype.areMultipleNamespacesSelected=Ki.prototype.f;\nKi.$inject=[\"kdHistoryService\",\"kdDeployService\",\"kdNamespaceService\"];var Li={controller:Ki,templateUrl:\"deploy/deployfrominput/deployfrominput.html\"};function Mi(a,b,c,d,f,g,h){this.a=a;this.b=b;this.h=c;this.c=d;this.namespaces=f;this.namespace=\"\";this.namespaceMaxLength=63;this.namespacePattern=/^[a-z0-9]([-a-z0-9]*[a-z0-9])?$/;this.j=Tf(g,\"namespace\");this.g=h}Mi.prototype.Hc=function(){return 0<=this.namespaces.indexOf(this.namespace)};Mi.prototype.isDisabled=Mi.prototype.Hc;Mi.prototype.cancel=function(){this.a.cancel()};Mi.prototype.cancel=Mi.prototype.cancel;\nMi.prototype.cb=function(){var a=this;if(this.namespaceForm.$valid){var b={name:this.namespace};this.j.then(function(c){var d={};a.h(\"api/v1/namespace\",{},{save:{method:\"POST\",headers:(d[a.g]=c,d)}}).save(b,function(b){a.b.info(\"Successfully created namespace:\",b);a.a.hide(a.namespace)},function(b){a.a.hide();a.c.open(\"Error creating namespace\",b.data);a.b.info(\"Error creating namespace:\",b)})},function(b){a.a.hide();a.c.open(\"Error creating namespace\",b.data);a.b.info(\"Error creating namespace:\",\nb)})}};Mi.prototype.createNamespace=Mi.prototype.cb;Mi.$inject=\"$mdDialog $log $resource errorDialog namespaces kdCsrfTokenService kdCsrfTokenHeader\".split(\" \");function Ni(a,b,c,d,f,g,h){this.a=a;this.b=b;this.h=c;this.c=d;this.namespace=f;this.secretNameMaxLength=253;this.secretNamePattern=/^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/;this.dataPattern=/^([0-9a-zA-Z+/]{4})*(([0-9a-zA-Z+/]{2}==)|([0-9a-zA-Z+/]{3}=))?$/;this.j=Tf(g,\"secret\");this.g=h}Ni.prototype.cancel=function(){this.a.cancel()};Ni.prototype.cancel=Ni.prototype.cancel;\nNi.prototype.eb=function(){var a=this;if(this.secretForm.$valid){var b={name:this.secretName,namespace:this.namespace,data:this.data};this.j.then(function(c){var d={};a.h(\"api/v1/secret/\",{},{save:{method:\"POST\",headers:(d[a.g]=c,d)}}).save(b,function(b){a.b.info(\"Successfully created secret:\",b);a.a.hide(a.secretName)},function(b){a.a.hide();a.c.open(\"Error creating secret\",b.data);a.b.info(\"Error creating secret:\",b)})},function(b){a.a.hide();a.c.open(\"Error creating secret\",b.data);a.b.info(\"Error creating secret:\",\nb)})}};Ni.prototype.createSecret=Ni.prototype.eb;Ni.$inject=\"$mdDialog $log $resource errorDialog namespace kdCsrfTokenService kdCsrfTokenHeader\".split(\" \");function Oi(a,b,c,d){this.editable=void 0===c?!0:c;this.key=void 0===a?\"\":a;this.b=void 0===b?\"\":b;this.a=d}Oi.prototype.value=function(a){if(void 0!==this.a){if(void 0!==a)throw Error(\"Can not set value of derived label.\");return this.a(this.key)}return void 0!==a?this.b=a:this.b};Oi.prototype.value=Oi.prototype.value;Oi.prototype.Va=function(){return{key:this.key,value:this.value()}};Oi.prototype.toBackendApi=Oi.prototype.Va;function Pi(a,b){var c={};return{restrict:\"A\",require:\"ngModel\",scope:(c.namespace=\"=\",c),link:function(c,f,g,h){c.$watch(\"namespace\",function(){h.$validate()});h.$asyncValidators.uniqueName=function(d){return Qi(d,c.namespace,a,b)}}}}Pi.$inject=[\"$resource\",\"$q\"];function Qi(a,b,c,d){var f=d.defer();c(\"api/v1/appdeployment/validate/name\").save({name:a,namespace:b},function(a){!0===a.valid?f.resolve():f.reject()},function(){f.resolve()});return f.promise};function J(a,b,c,d,f,g,h){this.w=g;this.c=!1;this.containerCommandArgs=this.containerCommand=this.imagePullSecret=this.containerImageErrorMessage=this.containerImage=\"\";this.replicas=1;this.description=\"\";this.portMappings=[];this.variables=[];this.isExternal=!1;this.labels=[new Oi(\"k8s-app\",\"\",!1,this.S.bind(this)),new Oi];this.secrets=[];this.name=\"\";this.namePattern=/^[a-z]([-a-z0-9]*[a-z0-9])?$/;this.nameMaxLength=\"24\";this.runAsPrivileged=!1;this.memoryRequirement=this.cpuRequirement=null;this.b=\nb;this.a=a;this.h=c;this.j=d;this.s=f;this.namespace=this.j.namespace||\"\";this.g=h}\nJ.prototype.$onInit=function(){var a=this;this.b(\"api/v1/namespace\").get(function(b){a.namespaces=b.namespaces.map(function(a){return a.objectMeta.name});a.namespace=a.w.f()?a.namespaces[0]:a.j.namespace||a.namespaces[0]},function(b){a.a.log(\"Error during getting namespaces: \"+b)});this.b(\"api/v1/appdeployment/protocols\").get(function(b){a.protocols=b.protocols},function(b){a.a.log(\"Error during getting protocols: \"+b)})};J.prototype.$onInit=J.prototype.$onInit;\nJ.prototype.C=function(){return!this.form.$valid||this.g.C()};J.prototype.isDeployDisabled=J.prototype.C;J.prototype.cancel=function(){zi(this.s)};J.prototype.cancel=J.prototype.cancel;\nJ.prototype.J=function(){var a={containerImage:this.containerImage,imagePullSecret:this.imagePullSecret?this.imagePullSecret:null,containerCommand:this.containerCommand?this.containerCommand:null,containerCommandArgs:this.containerCommandArgs?this.containerCommandArgs:null,isExternal:this.isExternal,name:this.name,description:this.description?this.description:null,portMappings:this.portMappings.filter(this.B),variables:this.variables.filter(this.D),replicas:this.replicas,namespace:this.namespace,\ncpuRequirement:angular.isNumber(this.cpuRequirement)?this.cpuRequirement:null,memoryRequirement:angular.isNumber(this.memoryRequirement)?this.memoryRequirement+\"Mi\":null,labels:Ri(this.labels),runAsPrivileged:this.runAsPrivileged};this.g.J(a)};J.prototype.deploy=J.prototype.J;\nJ.prototype.sc=function(a){var b=this;this.h.show({controller:Mi,controllerAs:\"$ctrl\",clickOutsideToClose:!0,targetEvent:a,templateUrl:\"deploy/deployfromsettings/createnamespace/createnamespace.html\",locals:{namespaces:this.namespaces}}).then(function(a){a?(b.namespace=a,b.namespaces=b.namespaces.concat(a)):b.namespace=b.namespaces[0]},function(){b.namespace=b.namespaces[0]})};J.prototype.handleNamespaceDialog=J.prototype.sc;\nJ.prototype.rc=function(a){var b=this;this.h.show({controller:Ni,controllerAs:\"$ctrl\",clickOutsideToClose:!0,targetEvent:a,templateUrl:\"deploy/deployfromsettings/createsecret/createsecret.html\",locals:{namespace:this.namespace}}).then(function(a){a?(b.imagePullSecret=a,b.secrets=b.secrets.concat(b.imagePullSecret)):b.imagePullSecret=\"\"},function(){b.imagePullSecret=\"\"})};J.prototype.handleCreateSecretDialog=J.prototype.rc;\nJ.prototype.dc=function(a){var b=this;this.b(\"api/v1/secret/\"+a).get(function(a){b.secrets=a.secrets.map(function(a){return a.objectMeta.name})},function(a){b.a.log(\"Error getting secrets: \"+a)})};J.prototype.getSecrets=J.prototype.dc;J.prototype.Fd=function(){this.imagePullSecret=\"\"};J.prototype.resetImagePullSecret=J.prototype.Fd;J.prototype.ad=function(){var a=this.form.name;return a.$error.uniqueName||a.$invalid&&(a.$touched||this.form.$submitted)};J.prototype.isNameError=J.prototype.ad;\nfunction Ri(a){return a.filter(function(a){return 0!==a.key.length&&0!==a.value().length}).map(function(a){return a.Va()})}J.prototype.B=function(a){return!!a.port&&!!a.targetPort};J.prototype.D=function(a){return!!a.name};J.prototype.S=function(){return this.name};J.prototype.Zc=function(){return this.c};J.prototype.isMoreOptionsEnabled=J.prototype.Zc;J.prototype.Td=function(){this.c=!this.c};J.prototype.switchMoreOptions=J.prototype.Td;J.$inject=\"$log $resource $mdDialog $stateParams kdHistoryService kdNamespaceService kdDeployService\".split(\" \");\nvar Si={controller:J,templateUrl:\"deploy/deployfromsettings/deployfromsettings.html\"};function Ti(){}Ti.prototype.check=function(a){var b=this.labels[this.labels.length-1];0!==b.key.length&&0!==b.value().length&&this.labels.push(new Oi);angular.isDefined(a)&&(a=a.key,b=!Ui(this),a.$setValidity(\"unique\",b))};Ti.prototype.check=Ti.prototype.check;Ti.prototype.R=function(){var a=this.labels[this.labels.length-1];return!(!this.label.editable||this.label===a)};Ti.prototype.isRemovable=Ti.prototype.R;\nTi.prototype.fb=function(){var a=this.labels.indexOf(this.label);-1<a&&this.labels.splice(a,1)};Ti.prototype.deleteLabel=Ti.prototype.fb;function Ui(a){var b=0;a.labels.forEach(function(c){0!==a.label.key.length&&c.key===a.label.key&&b++});return 1<b}var Vi={controller:Ti,templateUrl:\"deploy/deployfromsettings/deploylabel/deploylabel.html\",bindings:{label:\"=\",labels:\"=\"}};function Wi(){}Wi.prototype.$onInit=function(){this.variables=[{name:\"\",value:\"\"}];this.namePattern=/^[A-Za-z_][A-Za-z0-9_]*$/};Wi.prototype.$onInit=Wi.prototype.$onInit;Wi.prototype.Ya=function(){this.variables[this.variables.length-1].name&&this.variables.push({name:\"\",value:\"\"})};Wi.prototype.addVariableIfNeeed=Wi.prototype.Ya;Wi.prototype.R=function(a){return a!==this.variables.length-1};Wi.prototype.isRemovable=Wi.prototype.R;Wi.prototype.remove=function(a){this.variables.splice(a,1)};\nWi.prototype.remove=Wi.prototype.remove;var Xi={controller:Wi,controllerAs:\"ctrl\",templateUrl:\"deploy/deployfromsettings/environmentvariables/environmentvariables.html\",bindings:{variables:\"=\"}};var Yi=angular.module(\"kubernetesDashboard.helpsection\",[]).directive(\"kdHelpSection\",function(){return{scope:{},templateUrl:\"deploy/deployfromsettings/helpsection/helpsection.html\",transclude:!0}}).directive(\"kdUserHelp\",function(){return{scope:{},templateUrl:\"deploy/deployfromsettings/helpsection/userhelp/userhelp.html\",transclude:!0}});function K(){this.i18n=Zi}K.prototype.$onInit=function(){this.serviceTypes=[$i,aj,bj];this.serviceType=$i};K.prototype.$onInit=K.prototype.$onInit;K.prototype.ab=function(a,b){this.qa();if(angular.isDefined(a)){var c=this.portMappings[b],d=a.targetPort,f=!c.port===!c.targetPort||!!c.targetPort;a.port.$setValidity(\"empty\",!c.port===!c.targetPort||!!c.port);d.$setValidity(\"empty\",f)}};K.prototype.checkPortMapping=K.prototype.ab;\nK.prototype.qa=function(){var a=this.portMappings[this.portMappings.length-1];a.port&&a.targetPort&&this.portMappings.push({port:null,targetPort:null,protocol:this.protocols[0]})};K.prototype.addProtocolIfNeeed_=K.prototype.qa;K.prototype.R=function(a){return a!==this.portMappings.length-1};K.prototype.isRemovable=K.prototype.R;K.prototype.remove=function(a){this.portMappings.splice(a,1)};K.prototype.remove=K.prototype.remove;\nK.prototype.Za=function(){this.serviceType===$i?this.portMappings=[]:0===this.portMappings.length&&(this.portMappings=[{port:null,targetPort:null,protocol:this.protocols[0]}]);this.isExternal=this.serviceType.external};K.prototype.changeServiceType=K.prototype.Za;K.prototype.Lc=function(a){return 0===a};K.prototype.isFirst=K.prototype.Lc;\nvar cj={controller:K,templateUrl:\"deploy/deployfromsettings/portmappings/portmappings.html\",bindings:{portMappings:\"=\",protocols:\"=\",isExternal:\"=\"}},Zi={MSG_PORT_MAPPINGS_SERVICE_TYPE_NONE_LABEL:\"None\",MSG_PORT_MAPPINGS_SERVICE_TYPE_INTERNAL_LABEL:\"Internal\",MSG_PORT_MAPPINGS_SERVICE_TYPE_EXTERNAL_LABEL:\"External\"};function dj(a,b){this.label=a;this.external=b}\nvar $i=new dj(Zi.MSG_PORT_MAPPINGS_SERVICE_TYPE_NONE_LABEL,!1),aj=new dj(Zi.MSG_PORT_MAPPINGS_SERVICE_TYPE_INTERNAL_LABEL,!1),bj=new dj(Zi.MSG_PORT_MAPPINGS_SERVICE_TYPE_EXTERNAL_LABEL,!0);function ej(a,b){var c={};return{restrict:\"A\",require:\"ngModel\",scope:(c.invalidImageErrorMessage=\"=\",c),link:function(c,f,g,h){h.$asyncValidators.validImageReference=function(d){return fj(d,c,a,b)}}}}ej.$inject=[\"$resource\",\"$q\"];\nfunction fj(a,b,c,d){var f=d.defer();c(\"api/v1/appdeployment/validate/imagereference\").save({reference:a},function(a){!0===a.valid?(b.invalidImageErrorMessage=\"\",f.resolve()):(b.invalidImageErrorMessage=a.reason,f.reject(b.invalidImageErrorMessage))},function(a){b.invalidImageErrorMessage=a.data;f.reject()});return f.promise};function gj(a,b){var c={};return{restrict:\"A\",require:\"ngModel\",scope:(c.isExternal=\"=\",c),link:function(c,f,g,h){var d=!1;c.$watch(\"isExternal\",function(a,b){d=a!==b;h.$validate()});h.$asyncValidators.validProtocol=function(f){return hj(h,d,f,c.isExternal,a,b)}}}}gj.$inject=[\"$resource\",\"$q\"];\nfunction hj(a,b,c,d,f,g){var h=g.defer();if(!a.$touched&&!b)return h.resolve(),h.promise;f(\"api/v1/appdeployment/validate/protocol\").save({protocol:c,isExternal:d},function(a){!0===a.valid?h.resolve():h.reject()},function(){h.reject()});return h.promise};function ij(a,b,c,d,f,g,h,k,D,u){this.a=a;this.w=b;this.S=c;this.s=d;this.j=f;this.h=g;this.g=h;this.D=k;this.c=u;this.B=D;this.i18n=jj;this.b=!1}\nij.prototype.J=function(a){var b=this,c=this.j.defer();Tf(this.B,\"appdeployment\").then(function(d){var f={};d=b.s(\"api/v1/appdeployment\",{},{save:{method:\"POST\",headers:(f[b.c]=d,f)}});b.b=!0;d.save(a,function(d){c.resolve(d);b.a.info(\"Successfully deployed application: \",d);d={};b.w.go(\"overview\",(d.namespace=a.namespace,d))},function(a){c.reject(a);b.a.error(\"Error deploying application:\",a)})},function(a){c.reject(a);b.a.error(\"Error deploying application:\",a)});c.promise[\"finally\"](function(){b.b=\n!1})};\nfunction Ii(a,b,c,d){c=void 0===c?!0:c;d=void 0===d?\"\":d;var f=a.j.defer(),g=Tf(a.B,\"appdeploymentfromfile\"),h={name:d,namespace:a.S.namespace||\"\",content:b,validate:c};g.then(function(c){var d={};c=a.s(\"api/v1/appdeploymentfromfile\",{},{save:{method:\"POST\",headers:(d[a.c]=c,d)}});a.b=!0;c.save(h,function(b){f.resolve(b);a.a.info(\"Deployment is completed: \",b);0<b.error.length&&a.g.open(\"Deployment has been partly completed\",b.error);a.w.go(\"overview\")},function(c){f.reject(c);if(-1<c.data.indexOf(\"validate=false\"))kj(a,b,\nc.data);else{var d=a.D.K(c.data);a.a.error(\"Error deploying application:\",c);a.g.open(a.i18n.MSG_DEPLOY_DIALOG_ERROR,d)}})},function(b){f.reject(b);a.a.error(\"Error deploying application:\",b)});f.promise[\"finally\"](function(){a.b=!1})[\"catch\"](function(b){a.a.error(\"Error:\",b)})}ij.prototype.C=function(){return this.b};function kj(a,b,c){lj(a,c).then(function(){Ii(a,b,!1)})}\nfunction lj(a,b){var c=a.h.confirm().title(jj.MSG_DEPLOY_ANYWAY_DIALOG_TITLE).htmlContent(b+\"<br><br>\"+jj.MSG_DEPLOY_ANYWAY_DIALOG_CONTENT).ok(jj.MSG_DEPLOY_ANYWAY_DIALOG_OK).cancel(jj.MSG_DEPLOY_ANYWAY_DIALOG_CANCEL);return a.h.show(c)}ij.$inject=\"$log $state $stateParams $resource $q $mdDialog errorDialog localizerService kdCsrfTokenService kdCsrfTokenHeader\".split(\" \");\nvar jj={MSG_DEPLOY_DIALOG_ERROR:\"Deploying file has failed\",MSG_DEPLOY_ANYWAY_DIALOG_TITLE:\"Validation error occurred\",MSG_DEPLOY_ANYWAY_DIALOG_CONTENT:\"Would you like to deploy anyway?\",MSG_DEPLOY_ANYWAY_DIALOG_OK:\"Yes\",MSG_DEPLOY_ANYWAY_DIALOG_CANCEL:\"No\"};function mj(a){var b={};a.state(\"deploy\",{parent:\"chrome\",url:\"/deploy\",views:{\"\":{templateUrl:\"deploy/deploy.html\"}},data:(b.kdBreadcrumbs={label:nj},b)})}mj.$inject=[\"$stateProvider\"];var nj=\"Resource creation\";function oj(){Ei.call(this)}qa(oj,Ei);oj.prototype.a=function(a){var b=a.indexOf(\"/\");return 63>=(-1<b?a.substring(b+1):a).length};function pj(){Ei.call(this);this.b=/^([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9]$/}qa(pj,Ei);pj.prototype.a=function(a){var b=a.indexOf(\"/\");return this.b.test(-1<b?a.substring(b+1):a)||\"\"===a};function qj(){Ei.call(this)}qa(qj,Ei);qj.prototype.a=function(a){var b=a.indexOf(\"/\");return 253>=(-1<b?a.substring(0,b):\"\").length};function rj(){Ei.call(this);this.b=/^[a-z0-9]([-a-z0-9]*[a-z0-9])?(\\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*$/}qa(rj,Ei);rj.prototype.a=function(a){var b=a.indexOf(\"/\");return-1<b?this.b.test(a.substring(0,b)):!0};function sj(){Ei.call(this);this.b=/^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$/}qa(sj,Ei);sj.prototype.a=function(a){return this.b.test(a)};var uj=angular.module(\"kubernetesDashboard.deploy\",[\"ngMaterial\",\"ngResource\",\"ui.router\",\"ui.ace\",Yi.name,wi.name,Hi.name,Bi.name,A.name,Uf.name]).config(mj).run(tj).component(\"kdPortMappings\",cj).directive(\"kdUniqueName\",Pi).directive(\"kdValidImagereference\",ej).directive(\"kdValidProtocol\",gj).component(\"kdEnvironmentVariables\",Xi).component(\"kdDeployLabel\",Vi).component(\"kdDeployFromFile\",Ji).component(\"kdDeployFromInput\",Li).component(\"kdDeployFromSettings\",Si).service(\"kdDeployService\",ij);\nfunction tj(a){Gi(a,\"labelKeyNameLength\",new oj);Gi(a,\"labelKeyPrefixLength\",new qj);Gi(a,\"labelKeyNamePattern\",new pj);Gi(a,\"labelKeyPrefixPattern\",new rj);Gi(a,\"labelValuePattern\",new sj)}tj.$inject=[\"kdValidatorFactory\"];function vj(){}vj.prototype.rollingUpdateStrategy=function(){return\"RollingUpdate\"===this.deployment.strategy};vj.prototype.rollingUpdateStrategy=vj.prototype.rollingUpdateStrategy;var wj={controller:vj,templateUrl:\"deployment/detail/info.html\",bindings:{deployment:\"=\"}};function xj(a){this.details=a}xj.$inject=[\"deploymentDetail\"];function yj(a,b,c){this.deploymentDetail=a;this.eventListResource=b;this.oldReplicaSetListResource=c;this.newReplicaSetList={replicaSets:[this.deploymentDetail.newReplicaSet],listMeta:{totalItems:1},errors:[],status:{failed:0,pending:0,running:0,succeeded:0}}}yj.$inject=[\"deploymentDetail\",\"kdDeploymentEventsResource\",\"kdDeploymentOldReplicaSetsResource\"];var zj={},Aj={},Dj={url:r(\"/deployment\"),parent:\"deployment\",resolve:{deploymentDetailResource:Bj,deploymentDetail:Cj},data:(zj.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"deploymentlist\"},zj),views:(Aj[\"\"]={controller:yj,controllerAs:\"ctrl\",templateUrl:\"deployment/detail/detail.html\"},Aj[\"actionbar@chrome\"]={controller:xj,controllerAs:\"$ctrl\",templateUrl:\"deployment/detail/actionbar.html\"},Aj)};function Ej(a){return a(\"api/v1/deployment/:namespace/:name/event\")}Ej.$inject=[\"$resource\"];\nfunction Fj(a){return a(\"api/v1/deployment/:namespace/:name/oldreplicaset\")}Fj.$inject=[\"$resource\"];function Bj(a,b){return a(\"api/v1/deployment/\"+b.objectNamespace+\"/\"+b.objectName)}Bj.$inject=[\"$resource\",\"$stateParams\"];function Cj(a){return a.get().$promise}Cj.$inject=[\"deploymentDetailResource\"];function L(a,b){this.b=a;this.a=b}L.prototype.f=function(){return this.a.f()};L.prototype.areMultipleNamespacesSelected=L.prototype.f;L.prototype.wb=function(){return this.b.href(\"deploymentdetail\",new q(this.deployment.objectMeta.namespace,this.deployment.objectMeta.name))};L.prototype.getDeploymentDetailHref=L.prototype.wb;L.prototype.m=function(){return 0<this.deployment.pods.warnings.length};L.prototype.hasWarnings=L.prototype.m;L.prototype.o=function(){return!this.m()&&0<this.deployment.pods.pending};\nL.prototype.isPending=L.prototype.o;L.prototype.u=function(){return!this.o()&&!this.m()};L.prototype.isSuccess=L.prototype.u;L.$inject=[\"$state\",\"kdNamespaceService\"];var Gj={bindings:{deployment:\"=\"},controller:L,templateUrl:\"deployment/list/card.html\"};function Hj(a){this.a=a}Hj.prototype.i=function(){return void 0!==this.deploymentList&&void 0!==this.deploymentListResource?\"deployments\":\"\"};Hj.prototype.getSelectId=Hj.prototype.i;Hj.prototype.f=function(){return this.a.f()};Hj.prototype.areMultipleNamespacesSelected=Hj.prototype.f;Hj.$inject=[\"kdNamespaceService\"];var Ij={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{deploymentList:\"<\",deploymentListResource:\"<\"},templateUrl:\"deployment/list/cardlist.html\",controller:Hj};function Jj(a,b){this.deploymentList=a;this.deploymentListResource=b}Jj.$inject=[\"deploymentList\",\"kdDeploymentListResource\"];var Kj={},Mj={url:\"/deployment\",parent:\"deployment\",resolve:{deploymentList:Lj},data:(Kj.kdBreadcrumbs={label:\"Deployments\",parent:\"workload\"},Kj),views:{\"\":{controller:Jj,controllerAs:\"$ctrl\",templateUrl:\"deployment/list/list.html\"}}};function Nj(a){return a(\"api/v1/deployment/:namespace\")}Nj.$inject=[\"$resource\"];function Lj(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Lj.$inject=[\"kdDeploymentListResource\",\"$stateParams\",\"kdDataSelectService\"];function Oj(a){a.state(\"deployment\",Pj).state(\"deploymentlist\",Mj).state(\"deploymentdetail\",Dj)}Oj.$inject=[\"$stateProvider\"];var Pj={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Qj=angular.module(\"kubernetesDashboard.deployment\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Oj).component(\"kdDeploymentCard\",Gj).component(\"kdDeploymentCardList\",Ij).component(\"kdDeploymentInfo\",wj).service(\"kdScaleService\",kg).factory(\"kdDeploymentEventsResource\",Ej).factory(\"kdDeploymentListResource\",Nj).factory(\"kdDeploymentOldReplicaSetsResource\",Fj);function Rj(a,b){this.b=a;this.a=b}Rj.prototype.Hb=function(){return this.b.href(\"ingressdetail\",new q(this.ingress.objectMeta.namespace,this.ingress.objectMeta.name))};Rj.prototype.getIngressDetailHref=Rj.prototype.Hb;Rj.prototype.f=function(){return this.a.f()};Rj.prototype.areMultipleNamespacesSelected=Rj.prototype.f;Rj.$inject=[\"$state\",\"kdNamespaceService\"];var Sj={bindings:{ingress:\"=\"},controller:Rj,templateUrl:\"ingress/list/card.html\"};function Tj(a){this.a=a}Tj.prototype.i=function(){return void 0!==this.ingressList&&void 0!==this.ingressListResource?\"ingresses\":\"\"};Tj.prototype.getSelectId=Tj.prototype.i;Tj.prototype.f=function(){return this.a.f()};Tj.prototype.areMultipleNamespacesSelected=Tj.prototype.f;Tj.$inject=[\"kdNamespaceService\"];var Uj={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"ingress/list/cardlist.html\",controller:Tj,bindings:{ingressList:\"<\",ingressListResource:\"<\"}};function Vj(a,b){this.ingressList=a;this.ingressListResource=b}Vj.$inject=[\"ingressList\",\"kdIngressListResource\"];var Wj={},Yj={url:\"/ingress\",parent:\"ingress\",resolve:{ingressList:Xj},data:(Wj.kdBreadcrumbs={label:\"Ingresses\",parent:\"discovery\"},Wj),views:{\"\":{controller:Vj,controllerAs:\"$ctrl\",templateUrl:\"ingress/list/list.html\"}}};function Zj(a){return a(\"api/v1/ingress/:namespace\")}Zj.$inject=[\"$resource\"];function Xj(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Xj.$inject=[\"kdIngressListResource\",\"$stateParams\",\"kdDataSelectService\"];function ak(a){this.details=a}ak.$inject=[\"ingressDetail\"];function bk(a){this.ingressDetail=a}bk.$inject=[\"ingressDetail\"];var ck={},dk={},gk={url:r(\"/ingress\"),parent:\"ingress\",resolve:{ingressDetailResource:ek,ingressDetail:fk},data:(ck.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"ingresslist\"},ck),views:(dk[\"\"]={controller:bk,controllerAs:\"$ctrl\",templateUrl:\"ingress/detail/detail.html\"},dk[\"actionbar@chrome\"]={controller:ak,controllerAs:\"$ctrl\",templateUrl:\"ingress/detail/actionbar.html\"},dk)};function ek(a,b){return a(\"api/v1/ingress/\"+b.objectNamespace+\"/\"+b.objectName)}ek.$inject=[\"$resource\",\"$stateParams\"];\nfunction fk(a){return a.get().$promise}fk.$inject=[\"ingressDetailResource\"];function hk(a){a.state(\"ingress\",ik).state(\"ingresslist\",Yj).state(\"ingressdetail\",gk)}hk.$inject=[\"$stateProvider\"];var ik={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var jk=angular.module(\"kubernetesDashboard.ingress\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(hk).component(\"kdIngressCard\",Sj).component(\"kdIngressCardList\",Uj).component(\"kdIngressInfo\",{controller:function(){},templateUrl:\"ingress/detail/info.html\",bindings:{ingress:\"=\"}}).factory(\"kdIngressListResource\",Zj);function kk(){this.i18n=lk}kk.prototype.i=function(){return void 0!==this.endpointList&&void 0!==this.endpointListResource?\"endpoints\":\"\"};kk.prototype.getSelectId=kk.prototype.i;kk.prototype.vc=function(){return void 0!==this.endpointList&&0<this.endpointList.endpoints.length};kk.prototype.hasEndpoints=kk.prototype.vc;var mk={templateUrl:\"endpoint/cardlist.html\",controller:kk,bindings:{endpointList:\"<\",endpointListResource:\"<\"}},lk={MSG_ENDPOINTS_WARNING_LABEL:\"Warning\"};var nk=angular.module(\"kubernetesDashboard.endpoint\",[\"ngMaterial\",A.name,p.name]).component(\"kdEndpointCardList\",mk);function ok(a){this.details=a}ok.$inject=[\"serviceDetail\"];function pk(a,b,c,d){this.serviceDetail=a;this.eventListResource=c;this.endpointListResource=d}pk.$inject=[\"serviceDetail\",\"kdServicePodsResource\",\"kdServiceEventsResource\",\"kdServiceEndpointResource\"];var qk={},rk={},uk={url:r(\"/service\"),parent:\"service\",resolve:{serviceDetailResource:sk,serviceDetail:tk},data:(qk.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"servicelist\"},qk),views:(rk[\"\"]={controller:pk,controllerAs:\"ctrl\",templateUrl:\"service/detail/detail.html\"},rk[\"actionbar@chrome\"]={controller:ok,controllerAs:\"$ctrl\",templateUrl:\"service/detail/actionbar.html\"},rk)};function vk(a){return a(\"api/v1/service/:namespace/:name/event\")}vk.$inject=[\"$resource\"];\nfunction wk(a){return a(\"api/v1/service/:namespace/:name/endpoint\")}wk.$inject=[\"$resource\"];function xk(a){return a(\"api/v1/service/:namespace/:name/pod\")}xk.$inject=[\"$resource\"];function sk(a,b){return b(\"api/v1/service/\"+a.objectNamespace+\"/\"+a.objectName)}sk.$inject=[\"$stateParams\",\"$resource\"];function tk(a){return a.get().$promise}tk.$inject=[\"serviceDetailResource\"];function M(a,b,c){this.a=c;this.b=a}M.prototype.f=function(){return this.a.f()};M.prototype.areMultipleNamespacesSelected=M.prototype.f;M.prototype.gc=function(){return this.b.href(\"servicedetail\",new q(this.service.objectMeta.namespace,this.service.objectMeta.name))};M.prototype.getServiceDetailHref=M.prototype.gc;M.prototype.o=function(){return null===this.service.clusterIP||\"LoadBalancer\"===this.service.type&&null===this.service.externalEndpoints};M.prototype.isPending=M.prototype.o;\nM.prototype.u=function(){return!this.o()};M.prototype.isSuccess=M.prototype.u;M.prototype.ec=function(){return this.service.clusterIP?this.service.clusterIP:\"-\"};M.prototype.getServiceClusterIP=M.prototype.ec;M.$inject=[\"$state\",\"$interpolate\",\"kdNamespaceService\"];var yk={templateUrl:\"service/list/card.html\",controller:M,bindings:{service:\"<\"}};function zk(a){this.a=a}zk.prototype.i=function(){return void 0!==this.serviceList&&void 0!==this.serviceListResource?\"services\":\"\"};zk.prototype.getSelectId=zk.prototype.i;zk.prototype.f=function(){return this.a.f()};zk.prototype.areMultipleNamespacesSelected=zk.prototype.f;zk.$inject=[\"kdNamespaceService\"];var Ak={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"service/list/cardlist.html\",controller:zk,bindings:{serviceList:\"<\",serviceListResource:\"<\",selectable:\"<\"}};function Bk(a,b){this.serviceList=a;this.serviceListResource=b}Bk.$inject=[\"serviceList\",\"kdServiceListResource\"];var Gk={},Ik={url:\"/service\",parent:\"service\",resolve:{serviceList:Hk},data:(Gk.kdBreadcrumbs={label:\"Services\",parent:\"discovery\"},Gk),views:{\"\":{controller:Bk,controllerAs:\"ctrl\",templateUrl:\"service/list/list.html\"}}};function Jk(a){return a(\"api/v1/service/:namespace\")}Jk.$inject=[\"$resource\"];function Hk(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Hk.$inject=[\"kdServiceListResource\",\"$stateParams\",\"kdDataSelectService\"];function Kk(a){a.state(\"service\",Lk).state(\"servicelist\",Ik).state(\"servicedetail\",uk)}Kk.$inject=[\"$stateProvider\"];var Lk={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Mk=angular.module(\"kubernetesDashboard.service\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,nk.name,p.name,l.name]).config(Kk).component(\"kdServiceCard\",yk).component(\"kdServiceCardList\",Ak).component(\"kdServiceInfo\",{templateUrl:\"service/detail/info.html\",bindings:{service:\"<\"},controller:function(){}}).factory(\"kdServiceListResource\",Jk).factory(\"kdServicePodsResource\",xk).factory(\"kdServiceEventsResource\",vk).factory(\"kdServiceEndpointResource\",wk);function Nk(a,b,c){this.discovery=a;this.kdServiceListResource=b;this.kdIngressListResource=c}Nk.prototype.A=function(){return 0===this.discovery.serviceList.listMeta.totalItems+this.discovery.ingressList.listMeta.totalItems};Nk.prototype.shouldShowZeroState=Nk.prototype.A;Nk.$inject=[\"discovery\",\"kdServiceListResource\",\"kdIngressListResource\"];function Ok(a){var b={};a.state(\"discovery\",{url:\"/discovery\",parent:\"chrome\",resolve:{discovery:Pk},data:(b.kdBreadcrumbs={label:Qk},b),views:{\"\":{controller:Nk,controllerAs:\"$ctrl\",templateUrl:\"discovery/discovery.html\"}}})}Ok.$inject=[\"$stateProvider\"];function Pk(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Pk.$inject=[\"kdDiscoveryResource\",\"$stateParams\",\"kdDataSelectService\"];var Qk=\"Discovery and load balancing\";var Sk=angular.module(\"kubernetesDashboard.discovery\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,Mk.name,jk.name]).config(Ok).factory(\"kdDiscoveryResource\",Rk);function Rk(a){return a(\"api/v1/discovery/:namespace\")}Rk.$inject=[\"$resource\"];function N(a,b,c,d,f){this.error=a.params().error;this.a=b;this.i18n=Tk;this.a.G(!1);this.b=d;this.c=f}N.prototype.$onInit=function(){var a=this;this.Da()&&setTimeout(function(){zi(a.c);a.a.G(!0)},3E3)};N.prototype.Da=function(){return this.error&&angular.isNumber(this.error.status)&&404===this.error.status};N.prototype.isNotFoundError=N.prototype.Da;\nN.prototype.za=function(){var a=this.error&&this.error.statusText&&0<this.error.statusText.length?this.error.statusText:this.i18n.MSG_UNKNOWN_SERVER_ERROR;this.error&&angular.isNumber(this.error.status)&&0<this.error.status&&(a+=\" (\"+this.error.status+\")\");return a};N.prototype.getErrorStatus=N.prototype.za;N.prototype.Uc=function(){return!(this.error&&angular.isNumber(this.error.status)&&500<=this.error.status||!this.error||!this.error.status)};N.prototype.isKnownError=N.prototype.Uc;\nN.prototype.ya=function(){return this.error&&this.error.data&&0<this.error.data.length?this.b.K(this.error.data):this.i18n.MSG_NO_ERROR_DATA};N.prototype.getErrorData=N.prototype.ya;\nN.prototype.ba=function(){var a=\"##### Steps to reproduce\\n\\x3c!-- Describe all steps needed to reproduce the issue. It is a good place to use numbered list. --\\x3e\\n\\n\\n##### Environment\\n```\\nInstallation method: \\nKubernetes version:\\nDashboard version: v1.10.0\\nCommit: aa1b6c0c31c4b3b703e16e554a15ed2a019aad47\\n```\\n\\n\\n##### Observed result\\n\"+(\"Dashboard reported \"+this.za()+\":\\n```\\n\"+this.ya()+\"\\n```\\n\\n\\n\")+\"##### Comments\\n\\x3c!-- If you have any comments or more details, put them here. --\\x3e\";\nreturn\"https://github.com/kubernetes/dashboard/issues/new?title=\"+encodeURIComponent(\"\")+(\"&body=\"+encodeURIComponent(a))};N.prototype.getLinkToFeedbackPage=N.prototype.ba;N.$inject=[\"$transition$\",\"kdNavService\",\"kdAppConfigService\",\"localizerService\",\"kdHistoryService\"];var Tk={MSG_UNKNOWN_SERVER_ERROR:\"Unknown Server Error\",MSG_NO_ERROR_DATA:\"No error data available\"};function Uk(a){var b={};a.state(\"internalerror\",{controller:N,parent:\"chrome\",controllerAs:\"ctrl\",params:new Vf({},\"\"),templateUrl:\"error/internalerror.html\",data:(b.authRequired=!1,b.kdBreadcrumbs={label:Vk},b)})}Uk.$inject=[\"$stateProvider\"];var Vk=\"Error\";var Xk=angular.module(\"kubernetesDashboard.error\",[\"ui.router\",E.name]).config(Uk).run(Wk);function Wk(a,b){a.defaultErrorHandler(function(c){Xf(c.detail.data,\"MSG_TOKEN_EXPIRED_ERROR\",\"MSG_ENCRYPTION_KEY_CHANGED\")?(dg(b),a.go(\"login\",new va(c.detail))):a.go(\"internalerror\",new Vf(c.detail,a.params.namespace))})}Wk.$inject=[\"$state\",\"kdAuthService\"];var Yk={Deployment:\"deploymentdetail\",ReplicaSet:\"replicasetdetail\",ReplicationController:\"replicationcontrollerdetail\"};function Zk(a,b){this.b=a;this.a=b}Zk.prototype.da=function(){return this.b.href(Yk[this.horizontalPodAutoscaler.scaleTargetRef.kind],new q(this.horizontalPodAutoscaler.objectMeta.namespace,this.horizontalPodAutoscaler.scaleTargetRef.name))};Zk.prototype.getScaleTargetHref=Zk.prototype.da;Zk.prototype.Kb=function(){return\"Last scaled at \"+this.a(\"{{date | date}}\")({date:this.horizontalPodAutoscaler.lastScaleTime})};\nZk.prototype.getLastScaledTooltip=Zk.prototype.Kb;Zk.$inject=[\"$state\",\"$interpolate\"];var $k={controller:Zk,templateUrl:\"horizontalpodautoscaler/detail/info.html\",bindings:{horizontalPodAutoscaler:\"=\"}};var al={Deployment:\"deploymentdetail\",ReplicaSet:\"replicasetdetail\",ReplicationController:\"replicationcontrollerdetail\"};function bl(a,b){this.a=a;this.b=b}bl.prototype.f=function(){return this.b.f()};bl.prototype.areMultipleNamespacesSelected=bl.prototype.f;bl.prototype.Fb=function(){return this.a.href(\"horizontalpodautoscalerdetail\",new q(this.horizontalPodAutoscaler.objectMeta.namespace,this.horizontalPodAutoscaler.objectMeta.name))};bl.prototype.getHorizontalPodAutoscalerDetailHref=bl.prototype.Fb;\nbl.prototype.da=function(){return this.a.href(al[this.horizontalPodAutoscaler.scaleTargetRef.kind],new q(this.horizontalPodAutoscaler.objectMeta.namespace,this.horizontalPodAutoscaler.scaleTargetRef.name))};bl.prototype.getScaleTargetHref=bl.prototype.da;bl.$inject=[\"$state\",\"kdNamespaceService\"];var cl={bindings:{horizontalPodAutoscaler:\"=\",showScaleTarget:\"<\"},controller:bl,templateUrl:\"horizontalpodautoscaler/list/card.html\"};function dl(a){this.a=a}dl.prototype.i=function(){return void 0!==this.horizontalPodAutoscalerList&&void 0!==this.horizontalPodAutoscalerListResource?\"hpas\":\"\"};dl.prototype.getSelectId=dl.prototype.i;dl.prototype.f=function(){return this.a.f()};dl.prototype.areMultipleNamespacesSelected=dl.prototype.f;dl.$inject=[\"kdNamespaceService\"];\nvar el={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"horizontalpodautoscaler/list/cardlist.html\",controller:dl,bindings:{horizontalPodAutoscalerList:\"<\",horizontalPodAutoscalerListResource:\"<\",showScaleTarget:\"<\"}};function fl(a,b){this.horizontalPodAutoscalerList=a;this.horizontalPodAutoscalerListResource=b}fl.prototype.A=function(){return 0===this.horizontalPodAutoscalerList.horizontalpodautoscalers.length};fl.prototype.shouldShowZeroState=fl.prototype.A;fl.$inject=[\"horizontalPodAutoscalerList\",\"kdHorizontalPodAutoscalerListResource\"];var gl={},il={url:\"/horizontalpodautoscaler\",parent:\"horizontalpodautoscaler\",resolve:{horizontalPodAutoscalerList:hl},data:(gl.kdBreadcrumbs={label:\"Horizontal Pod Autoscalers\"},gl),views:{\"\":{controller:fl,controllerAs:\"ctrl\",templateUrl:\"horizontalpodautoscaler/list/list.html\"}}};function jl(a){return a(\"api/v1/horizontalpodautoscaler/:namespace\")}jl.$inject=[\"$resource\"];function hl(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}\nhl.$inject=[\"kdHorizontalPodAutoscalerListResource\",\"$stateParams\",\"kdDataSelectService\"];function kl(a){this.details=a}kl.$inject=[\"horizontalPodAutoscalerDetail\"];function ll(a){this.horizontalPodAutoscalerDetail=a}ll.$inject=[\"horizontalPodAutoscalerDetail\"];var ml={},nl={},ql={url:r(\"/horizontalpodautoscaler\"),parent:\"horizontalpodautoscaler\",resolve:{horizontalPodAutoscalerDetailResource:ol,horizontalPodAutoscalerDetail:pl},data:(ml.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"horizontalpodautoscalerlist\"},ml),views:(nl[\"\"]={controller:ll,controllerAs:\"$ctrl\",templateUrl:\"horizontalpodautoscaler/detail/detail.html\"},nl[\"actionbar@chrome\"]={controller:kl,controllerAs:\"$ctrl\",templateUrl:\"horizontalpodautoscaler/detail/actionbar.html\"},\nnl)};function ol(a,b){return a(\"api/v1/horizontalpodautoscaler/\"+b.objectNamespace+\"/\"+b.objectName)}ol.$inject=[\"$resource\",\"$stateParams\"];function pl(a){return a.get().$promise}pl.$inject=[\"horizontalPodAutoscalerDetailResource\"];function rl(a){a.state(\"horizontalpodautoscaler\",sl).state(\"horizontalpodautoscalerlist\",il).state(\"horizontalpodautoscalerdetail\",ql)}rl.$inject=[\"$stateProvider\"];var sl={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var tl=angular.module(\"kubernetesDashboard.horizontalPodAutoscaler\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(rl).component(\"kdHorizontalPodAutoscalerCard\",cl).component(\"kdHorizontalPodAutoscalerCardList\",el).component(\"kdHorizontalPodAutoscalerInfo\",$k).factory(\"kdHorizontalPodAutoscalerListResource\",jl);function ul(a){a.otherwise(\"/overview\")}ul.$inject=[\"$urlRouterProvider\"];function vl(a){this.details=a}vl.$inject=[\"jobDetail\"];function wl(a,b,c){this.jobDetail=a;this.jobPodsResource=b;this.eventListResource=c}wl.$inject=[\"jobDetail\",\"kdJobPodsResource\",\"kdJobEventsResource\"];var xl={},yl={},Bl={url:r(\"/job\"),parent:\"job\",resolve:{jobDetailResource:zl,jobDetail:Al},data:(xl.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"joblist\"},xl),views:(yl[\"\"]={controller:wl,controllerAs:\"ctrl\",templateUrl:\"job/detail/detail.html\"},yl[\"actionbar@chrome\"]={templateUrl:\"job/detail/actionbar.html\",controller:vl,controllerAs:\"$ctrl\"},yl)};function Cl(a){return a(\"api/v1/job/:namespace/:name/event\")}Cl.$inject=[\"$resource\"];\nfunction Dl(a){return a(\"api/v1/job/:namespace/:name/pod\")}Dl.$inject=[\"$resource\"];function zl(a,b){return a(\"api/v1/job/\"+b.objectNamespace+\"/\"+b.objectName)}zl.$inject=[\"$resource\",\"$stateParams\"];function Al(a){return a.get().$promise}Al.$inject=[\"jobDetailResource\"];function O(a,b){this.b=a;this.a=b}O.prototype.f=function(){return this.a.f()};O.prototype.areMultipleNamespacesSelected=O.prototype.f;O.prototype.Jb=function(){return this.b.href(\"jobdetail\",new q(this.job.objectMeta.namespace,this.job.objectMeta.name))};O.prototype.getJobDetailHref=O.prototype.Jb;O.prototype.m=function(){return 0<this.job.pods.warnings.length&&!this.P()};O.prototype.hasWarnings=O.prototype.m;O.prototype.P=function(){return\"Failed\"===this.job.jobStatus.status};\nO.prototype.isFailed=O.prototype.P;O.prototype.o=function(){return!this.m()&&0<this.job.pods.pending};O.prototype.isPending=O.prototype.o;O.prototype.u=function(){return!this.o()&&!this.m()&&!this.P()};O.prototype.isSuccess=O.prototype.u;O.$inject=[\"$state\",\"kdNamespaceService\"];var El={bindings:{job:\"=\",showResourceKind:\"<\"},controller:O,templateUrl:\"job/list/card.html\"};function Fl(a){this.a=a}Fl.prototype.i=function(){return void 0!==this.jobList&&void 0!==this.jobListResource?\"jobs\":\"\"};Fl.prototype.getSelectId=Fl.prototype.i;Fl.prototype.f=function(){return this.a.f()};Fl.prototype.areMultipleNamespacesSelected=Fl.prototype.f;Fl.$inject=[\"kdNamespaceService\"];var Gl={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{jobList:\"<\",jobListResource:\"<\",showResourceKind:\"<\"},templateUrl:\"job/list/cardlist.html\",controller:Fl};function Hl(a,b){this.jobList=a;this.jobListResource=b}Hl.$inject=[\"jobList\",\"kdJobListResource\"];var Il={},Kl={url:\"/job\",parent:\"job\",resolve:{jobList:Jl},data:(Il.kdBreadcrumbs={label:\"Jobs\",parent:\"workload\"},Il),views:{\"\":{controller:Hl,controllerAs:\"$ctrl\",templateUrl:\"job/list/list.html\"}}};function Ll(a){return a(\"api/v1/job/:namespace\")}Ll.$inject=[\"$resource\"];function Jl(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Jl.$inject=[\"kdJobListResource\",\"$stateParams\",\"kdDataSelectService\"];function Ml(a){a.state(\"job\",Nl).state(\"joblist\",Kl).state(\"jobdetail\",Bl)}Ml.$inject=[\"$stateProvider\"];var Nl={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Ol=angular.module(\"kubernetesDashboard.job\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Ml).component(\"kdJobCard\",El).component(\"kdJobCardList\",Gl).component(\"kdJobInfo\",{controller:function(){},templateUrl:\"job/detail/info.html\",bindings:{job:\"=\"}}).service(\"kdScaleService\",kg).factory(\"kdJobListResource\",Ll).factory(\"kdJobPodsResource\",Dl).factory(\"kdJobEventsResource\",Cl);function Pl(a){a=void 0===a?{username:\"\",password:\"\",token:\"\",kubeConfig:\"\"}:a;var b=void 0===a.password?\"\":a.password,c=void 0===a.token?\"\":a.token,d=void 0===a.kubeConfig?\"\":a.kubeConfig;this.username=void 0===a.username?\"\":a.username;this.password=b;this.token=c;this.kubeConfig=d};function Ql(){this.selected=!1;this.password=this.username=\"\"}Ql.prototype.clear=function(){this.password=this.username=\"\";this.Ka();this.Ga()};Ql.prototype.clear=Ql.prototype.clear;Ql.prototype.$onInit=function(){this.loginOptionsCtrl.T(this)};Ql.prototype.$onInit=Ql.prototype.$onInit;Ql.prototype.Ka=function(){this.onUpdate({loginSpec:new Pl({username:this.username})})};Ql.prototype.onUsernameUpdate=Ql.prototype.Ka;Ql.prototype.Ga=function(){this.onUpdate({loginSpec:new Pl({password:this.password})})};\nQl.prototype.onPasswordUpdate=Ql.prototype.Ga;var Rl={templateUrl:\"login/basic.html\",require:{loginOptionsCtrl:\"^kdLoginOptions\"},bindings:{title:\"@\",desc:\"@\",onUpdate:\"&\"},controller:Ql};var Sl={TOKEN:\"token\",BASIC:\"basic\"};function P(a,b,c,d,f,g){this.b=a;this.c=b;this.a=c;this.errors=[];this.h=d;this.supportedAuthenticationModes=Sl;this.j=g}P.prototype.$onInit=function(){var a=this;this.a.params.error&&this.errors.push(vi(this.a.params.error));this.loginSpec=new Pl;this.b.G(!1);this.h.then(function(b){a.g=b.modes});this.j.then(function(b){a.s=b.skippable})};P.prototype.$onInit=P.prototype.$onInit;\nP.prototype.Dc=function(a){var b=!1;this.g&&this.g.forEach(function(c){a===c&&(b=!0)});return b};P.prototype.isAuthenticationModeEnabled=P.prototype.Dc;P.prototype.fd=function(){return this.s};P.prototype.isSkipButtonEnabled=P.prototype.fd;\nP.prototype.onUpdate=function(a){this.loginSpec.username=Tl(this.loginSpec.username,a.username);this.loginSpec.password=Tl(this.loginSpec.password,a.password);this.loginSpec.token=Tl(this.loginSpec.token,a.token);this.loginSpec.kubeConfig=Tl(this.loginSpec.kubeConfig,a.kubeConfig)};P.prototype.onUpdate=P.prototype.onUpdate;P.prototype.ma=function(){this.loginSpec=new Pl};P.prototype.onOptionChange=P.prototype.ma;function Tl(a,b){return a!==b&&0<b.length?b:a}\nP.prototype.ka=function(){var a=this;this.form.$valid&&this.c.ka(this.loginSpec).then(function(b){0<b.length?a.errors=b:(a.b.G(!0),a.a.transitionTo(\"overview\"))})[\"catch\"](function(b){a.errors=[vi(b)]})};P.prototype.login=P.prototype.ka;P.prototype.Rd=function(){var a=this.c;dg(a);a.a.put(\"skipLoginPage\",(!0).toString());this.b.G(!0);this.a.transitionTo(\"overview\")};P.prototype.skip=P.prototype.Rd;P.$inject=\"kdNavService kdAuthService $state kdAuthenticationModesResource kdErrorService kdSkipButtonEnabled\".split(\" \");\nvar Ul={templateUrl:\"login/login.html\",controller:P};function Vl(){this.selected=!1;this.kubeConfig=\"\";this.file={name:\"\",content:\"\"}}Vl.prototype.clear=function(){this.kubeConfig=\"\";this.V({name:\"\",content:\"\"})};Vl.prototype.$onInit=function(){this.loginOptionsCtrl.T(this)};Vl.prototype.$onInit=Vl.prototype.$onInit;Vl.prototype.V=function(a){this.onUpdate({loginSpec:new Pl({kubeConfig:a.content})})};Vl.prototype.onFileLoad=Vl.prototype.V;\nvar Wl={templateUrl:\"login/kubeconfig.html\",require:{loginOptionsCtrl:\"^kdLoginOptions\"},bindings:{title:\"@\",desc:\"@\",onUpdate:\"&\"},controller:Vl};function Xl(a){this.a=a;this.options=[]}Xl.prototype.select=function(a){this.options.forEach(function(a){a.selected=!1});a.selected=!0;this.selectedOption=a.title};Xl.prototype.select=Xl.prototype.select;Xl.prototype.T=function(a){0===this.options.length&&this.select(a);this.options.push(a)};Xl.prototype.addOption=Xl.prototype.T;Xl.prototype.ma=function(){var a=this;this.options.forEach(function(b){b.selected=b.title===a.selectedOption;if(b.selected)a.onChange()})};Xl.prototype.onOptionChange=Xl.prototype.ma;\nXl.prototype.Xa=function(a){return this.a.trustAsHtml(a)};Xl.prototype.acceptHtmlContent=Xl.prototype.Xa;Xl.$inject=[\"$sce\"];var Yl={transclude:!0,templateUrl:\"login/options.html\",controller:Xl,bindings:{onChange:\"&\"}};function Zl(a){a.state(\"login\",$l)}Zl.$inject=[\"$stateProvider\"];var am={},$l={url:\"/login\",params:new va,component:\"kdLogin\",data:(am.kdBreadcrumbs={label:\"Sign in\"},am)};function bm(a){return a(\"api/v1/login/modes\").get().$promise}bm.$inject=[\"$resource\"];function cm(a){return a(\"api/v1/login/skippable\").get().$promise}cm.$inject=[\"$resource\"];function dm(){this.selected=!1;this.token=\"\"}dm.prototype.clear=function(){this.token=\"\";this.Ja()};dm.prototype.$onInit=function(){this.loginOptionsCtrl.T(this)};dm.prototype.$onInit=dm.prototype.$onInit;dm.prototype.Ja=function(){this.onUpdate({loginSpec:new Pl({token:this.token})})};dm.prototype.onTokenUpdate=dm.prototype.Ja;var em={templateUrl:\"login/token.html\",require:{loginOptionsCtrl:\"^kdLoginOptions\"},bindings:{title:\"@\",desc:\"@\",onUpdate:\"&\"},controller:dm};var fm=angular.module(\"kubernetesDashboard.login\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name]).component(\"kdLogin\",Ul).component(\"kdLoginOptions\",Yl).component(\"kdBasicLogin\",Rl).component(\"kdTokenLogin\",em).component(\"kdKubeConfigLogin\",Wl).factory(\"kdAuthenticationModesResource\",bm).factory(\"kdSkipButtonEnabled\",cm).config(Zl);function Q(a,b,c,d,f,g,h,k){this.w=b;this.s=d;this.c=f;this.logsService=a;this.i18n=gm;this.topIndex=0;this.j=g;this.refreshInterval=5E3;this.b=null;this.B=h;this.h=k}Q.prototype.$onInit=function(){this.container=this.podLogs.info.containerName;this.pod=this.podLogs.info.podName;this.g=this.$transition$.params();hm(this,this.podLogs);this.topIndex=this.podLogs.logs.length;this.refreshInterval=1E3*this.B.ta()};Q.prototype.$onDestroy=function(){this.b&&(this.c.cancel(this.b),this.b=null)};\nfunction im(a){a.b?(a.c.cancel(a.b),a.b=null):a.b=a.c(function(){return a.ja()},a.refreshInterval)}Q.prototype.od=function(){jm(this,\"beginning\",\"oldest\",0,-2000000100,-2E9)};Q.prototype.loadOldest=Q.prototype.od;Q.prototype.ja=function(){jm(this,\"end\",\"newest\",0,2E9,2000000100)};Q.prototype.loadNewest=Q.prototype.ja;Q.prototype.nd=function(){jm(this,this.a.logFilePosition,this.a.referencePoint.timestamp,this.a.referencePoint.lineNum,this.a.offsetFrom-100,this.a.offsetFrom)};\nQ.prototype.loadOlder=Q.prototype.nd;Q.prototype.ld=function(){jm(this,this.a.logFilePosition,this.a.referencePoint.timestamp,this.a.referencePoint.lineNum,this.a.offsetTo,this.a.offsetTo+100)};Q.prototype.loadNewer=Q.prototype.ld;Q.prototype.Vd=function(){var a=this.logsService;a.g=!a.g;im(this)};Q.prototype.toggleLogFollow=Q.prototype.Vd;\nfunction jm(a,b,c,d,f,g){a.s(\"api/v1/log/\"+a.g.objectNamespace+\"/\"+a.pod+\"/\"+a.container).get({logFilePosition:b,referenceTimestamp:c,referenceLineNum:d,offsetFrom:f,offsetTo:g,previous:a.logsService.a},function(b){hm(a,b)})}function hm(a,b){a.podLogs=b;a.a=b.selection;a.logsSet=km(a,b.logs);b.info.truncated&&a.j.open(a.i18n.MSG_LOGS_TRUNCATED_WARNING,\"\")}\nfunction km(a,b){0===b.length&&(b=[{timestamp:\"0\",content:a.i18n.MSG_LOGS_ZEROSTATE_TEXT}]);return b.map(function(b){var c=a.w.trustAsHtml((new AnsiUp).ansi_to_html(b.content));return a.logsService.b?b.timestamp+\" \"+c:c})}\nQ.prototype.ib=function(){this.h.b.show({controller:R,controllerAs:\"$ctrl\",locals:{downloadUrl:\"api/v1/log/file/\"+this.g.objectNamespace+\"/\"+this.pod+\"/\"+this.container+\"?previous=\"+this.logsService.a,fileName:\"logs-from-\"+this.container+\"-in-\"+this.pod+\".txt\"},templateUrl:\"logs/download/dialog.html\",escapeToClose:!1})};Q.prototype.downloadLog=Q.prototype.ib;Q.prototype.td=function(){var a=this.logsService;a.c=!a.c};Q.prototype.onFontSizeChange=Q.prototype.td;\nQ.prototype.zd=function(){var a=this.logsService;a.h=!a.h};Q.prototype.onTextColorChange=Q.prototype.zd;Q.prototype.vd=function(){var a=this.logsService;a.b=!a.b;this.logsSet=km(this,this.podLogs.logs)};Q.prototype.onShowTimestamp=Q.prototype.vd;Q.prototype.ud=function(){var a=this.logsService;a.a=!a.a;this.ja()};Q.prototype.onPreviousChange=Q.prototype.ud;Q.$inject=\"logsService $sce $document $resource $interval errorDialog kdSettingsService kdDownloadService\".split(\" \");\nvar lm={controller:Q,controllerAs:\"ctrl\",templateUrl:\"logs/logs.html\",bindings:{logSources:\"<\",podLogs:\"<\",$transition$:\"<\"}},gm={MSG_LOGS_ZEROSTATE_TEXT:\"The selected container has not logged any messages yet.\",MSG_LOGS_TRUNCATED_WARNING:\"The middle part of the log file cannot be loaded, because it is too big.\"};function R(a,b,c,d,f,g,h){this.B=a;this.D=b;this.j=this.loaded=0;this.a=!1;this.S=c;this.c=d;this.h=f.defer();this.s=g;this.g=h;this.kdLocalizerErrors=Wf}R.prototype.$onInit=function(){var a=this;mm(this.s,this.B,this.Yd.bind(this),this.h).then(this.w.bind(this))[\"catch\"](function(b){a.error=b.status})};R.prototype.$onInit=R.prototype.$onInit;R.prototype.Yd=function(a){var b=this;this.j=a.loaded;this.b||(this.b=this.g(function(){b.b=void 0;b.loaded=a.loaded},500))};\nR.prototype.w=function(a){this.data=a.data;this.a=!0;this.g.cancel(this.b);this.loaded=this.j};R.prototype.uc=function(){return this.a};R.prototype.hasDownloadFinished=R.prototype.uc;R.prototype.save=function(){this.S.saveAs(this.data,this.D);this.c.hide()};R.prototype.save=R.prototype.save;R.prototype.abort=function(){this.h.resolve();this.c.hide()};R.prototype.abort=R.prototype.abort;R.prototype.zb=function(){return this.a?\"determinate\":\"indeterminate\"};R.prototype.getDownloadMode=R.prototype.zb;\nR.prototype.yc=function(){return void 0!==this.error&&403===this.error};R.prototype.hasForbiddenError=R.prototype.yc;R.$inject=\"downloadUrl fileName FileSaver $mdDialog $q kdDownloadService $timeout\".split(\" \");function nm(a,b){this.a=a;this.b=b}function mm(a,b,c,d){return a.a.get(b,{responseType:\"blob\",timeout:d.promise,Ha:function(a){c(a)}})}nm.$inject=[\"$http\",\"$mdDialog\"];function om(){this.h=!0;this.g=this.a=this.b=this.c=!1}om.prototype.Db=function(){return this.g};om.prototype.getFollowing=om.prototype.Db;om.prototype.Ib=function(){return this.h};om.prototype.getInverted=om.prototype.Ib;om.prototype.nb=function(){return this.c};om.prototype.getCompact=om.prototype.nb;om.prototype.jc=function(){return this.b};om.prototype.getShowTimestamp=om.prototype.jc;om.prototype.Xb=function(){return this.a};om.prototype.getPrevious=om.prototype.Xb;function pm(a){var b={};a.state(\"log\",{url:r(\"/log\")+\"/:resourceType\",parent:\"chrome\",resolve:{logSources:qm,podLogs:rm},data:(b.kdBreadcrumbs={label:sm},b.fillContent=!0,b),views:{\"\":{component:\"kdLogs\"}}})}pm.$inject=[\"$stateProvider\"];function qm(a,b){return b(\"api/v1/log/source/\"+a.objectNamespace+\"/\"+a.objectName+\"/\"+(a.resourceType||\"\")).get().$promise}qm.$inject=[\"$stateParams\",\"$resource\"];\nfunction rm(a,b,c){var d=a.objectNamespace,f=a.objectName;\"Pod\"!==(a.resourceType||\"\")&&(f=c.podNames[0]);return b(\"api/v1/log/\"+d+\"/\"+f).get().$promise}rm.$inject=[\"$stateParams\",\"$resource\",\"logSources\"];var sm=\"Logs\";var um=angular.module(\"kubernetesDashboard.logs\",[\"ngResource\",\"ngFileSaver\",\"ngMaterial\",\"ui.router\",og.name]).service(\"logsService\",om).service(\"kdDownloadService\",nm).component(\"kdLogs\",lm).config(pm).decorator(\"$xhrFactory\",tm);function tm(a,b){return function(c,d){var f=a(c,d),g=b.get(\"$http\");g=g.pendingRequests[g.pendingRequests.length-1];angular.isFunction(g.Ha)&&f.addEventListener(\"progress\",g.Ha);return f}}var vm=tm,wm=[\"httpProgressUpdateDecorator$$module$logs$module\"],xm=this;\nwm[0]in xm||\"undefined\"==typeof xm.execScript||xm.execScript(\"var \"+wm[0]);for(var ym;wm.length&&(ym=wm.shift());){var zm;if(zm=!wm.length)zm=void 0!==vm;zm?xm[ym]=vm:xm[ym]&&xm[ym]!==Object.prototype[ym]?xm=xm[ym]:xm=xm[ym]={}}tm.$inject=[\"$delegate\",\"$injector\"];function Am(){}Am.prototype.H=function(){return this.replicaSet.podInfo.running===this.replicaSet.podInfo.desired};Am.prototype.areDesiredPodsRunning=Am.prototype.H;var Bm={controller:Am,templateUrl:\"replicaset/detail/info.html\",bindings:{replicaSet:\"=\"}};function Cm(a){this.details=a}Cm.$inject=[\"replicaSetDetail\"];function Dm(a,b,c,d){this.replicaSetDetail=a;this.replicaSetPodsResource=b;this.replicaSetServicesResource=c;this.eventListResource=d}Dm.$inject=[\"replicaSetDetail\",\"kdReplicaSetPodsResource\",\"kdReplicaSetServicesResource\",\"kdReplicaSetEventsResource\"];var Em={},Fm={},Hm={url:r(\"/replicaset\"),parent:\"replicaset\",resolve:{replicaSetDetail:Gm},data:(Em.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"replicasetlist\"},Em),views:(Fm[\"\"]={controller:Dm,controllerAs:\"ctrl\",templateUrl:\"replicaset/detail/detail.html\"},Fm[\"actionbar@chrome\"]={controller:Cm,controllerAs:\"$ctrl\",templateUrl:\"replicaset/detail/actionbar.html\"},Fm)};function Im(a){return a(\"api/v1/replicaset/:namespace/:name\")}Im.$inject=[\"$resource\"];\nfunction Jm(a){return a(\"api/v1/replicaset/:namespace/:name/pod\")}Jm.$inject=[\"$resource\"];function Km(a){return a(\"api/v1/replicaset/:namespace/:name/service\")}Km.$inject=[\"$resource\"];function Lm(a){return a(\"api/v1/replicaset/:namespace/:name/event\")}Lm.$inject=[\"$resource\"];function Gm(a,b,c){b=c.l(b.objectNamespace,b.objectName);return a.get(b).$promise}Gm.$inject=[\"kdReplicaSetDetailResource\",\"$stateParams\",\"kdDataSelectService\"];function S(a,b){this.b=a;this.a=b}S.prototype.f=function(){return this.a.f()};S.prototype.areMultipleNamespacesSelected=S.prototype.f;S.prototype.ac=function(){return this.b.href(\"replicasetdetail\",new q(this.replicaSet.objectMeta.namespace,this.replicaSet.objectMeta.name))};S.prototype.getReplicaSetDetailHref=S.prototype.ac;S.prototype.m=function(){return 0<this.replicaSet.pods.warnings.length};S.prototype.hasWarnings=S.prototype.m;S.prototype.o=function(){return!this.m()&&0<this.replicaSet.pods.pending};\nS.prototype.isPending=S.prototype.o;S.prototype.u=function(){return!this.o()&&!this.m()};S.prototype.isSuccess=S.prototype.u;S.$inject=[\"$state\",\"kdNamespaceService\"];var Mm={bindings:{replicaSet:\"=\",showResourceKind:\"<\"},controller:S,templateUrl:\"replicaset/list/card.html\"};function Nm(a){this.a=a}Nm.prototype.i=function(){return void 0!==this.replicaSetList&&void 0!==this.replicaSetListResource?\"replicasets\":\"\"};Nm.prototype.getSelectId=Nm.prototype.i;Nm.prototype.f=function(){return this.a.f()};Nm.prototype.areMultipleNamespacesSelected=Nm.prototype.f;Nm.$inject=[\"kdNamespaceService\"];\nvar Om={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{replicaSetList:\"<\",replicaSetListResource:\"<\",showResourceKind:\"<\"},templateUrl:\"replicaset/list/cardlist.html\",controller:Nm};function Pm(a,b){this.replicaSetList=a;this.replicaSetListResource=b}Pm.$inject=[\"replicaSetList\",\"kdReplicaSetListResource\"];var Qm={},Sm={url:\"/replicaset\",parent:\"replicaset\",resolve:{replicaSetList:Rm},data:(Qm.kdBreadcrumbs={label:\"Replica Sets\",parent:\"workload\"},Qm),views:{\"\":{controller:Pm,controllerAs:\"$ctrl\",templateUrl:\"replicaset/list/list.html\"}}};function Tm(a){return a(\"api/v1/replicaset/:namespace\")}Tm.$inject=[\"$resource\"];function Rm(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}Rm.$inject=[\"kdReplicaSetListResource\",\"$stateParams\",\"kdDataSelectService\"];function Um(a){a.state(\"replicaset\",Vm).state(\"replicasetlist\",Sm).state(\"replicasetdetail\",Hm)}Um.$inject=[\"$stateProvider\"];var Vm={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Wm=angular.module(\"kubernetesDashboard.replicaSet\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(Um).component(\"kdReplicaSetCard\",Mm).component(\"kdReplicaSetCardList\",Om).component(\"kdReplicaSetInfo\",Bm).factory(\"kdReplicaSetDetailResource\",Im).factory(\"kdReplicaSetEventsResource\",Lm).factory(\"kdReplicaSetListResource\",Tm).factory(\"kdReplicaSetPodsResource\",Jm).factory(\"kdReplicaSetServicesResource\",Km);function T(a,b){this.a=a;this.isSecretVisible=!1;this.b=b}T.prototype.Yb=function(a){return a.valueFrom?a.valueFrom.configMapKeyRef?this.wa(a.valueFrom.configMapKeyRef):a.valueFrom.secretKeyRef?this.xa(a.valueFrom.secretKeyRef):\"\":\"\"};T.prototype.getRefObjectHref=T.prototype.Yb;T.prototype.cd=function(a){return!!a.valueFrom&&!!a.valueFrom.secretKeyRef};T.prototype.isSecret=T.prototype.cd;T.prototype.Qd=function(){this.isSecretVisible=!0};T.prototype.showSecret=T.prototype.Qd;T.prototype.kb=function(a){return this.b.atob(a)};\nT.prototype.formatSecretValue=T.prototype.kb;T.prototype.Z=function(a){return this.b.atob(a)};T.prototype.formatDataValue=T.prototype.Z;T.prototype.Zb=function(a){return a.valueFrom.configMapKeyRef?a.valueFrom.configMapKeyRef.name:a.valueFrom.secretKeyRef.name};T.prototype.getRefObjectName=T.prototype.Zb;T.prototype.Cb=function(a){return a.valueFrom&&a.valueFrom.fieldRef.apiVersion&&a.valueFrom.fieldRef.fieldPath?\"(\"+a.valueFrom.fieldRef.apiVersion+\":\"+a.valueFrom.fieldRef.fieldPath+\")\":a.value};\nT.prototype.getFieldRefValue=T.prototype.Cb;T.prototype.ha=function(a){return!!a.valueFrom&&(!!a.valueFrom.configMapKeyRef||!!a.valueFrom.secretKeyRef)};T.prototype.isHref=T.prototype.ha;T.prototype.wa=function(a){return this.a.href(\"configmapdetail\",new q(this.namespace,a.name))};T.prototype.getEnvConfigMapHref=T.prototype.wa;T.prototype.xa=function(a){return this.a.href(\"secretdetail\",new q(this.namespace,a.name))};T.prototype.getEnvSecretHref=T.prototype.xa;T.$inject=[\"$state\",\"$window\"];\nvar Xm={transclude:{header:\"?kdHeader\"},controller:T,templateUrl:\"pod/detail/containerinfo.html\",bindings:{containers:\"<\",namespace:\"<\",podName:\"<\"}};var Ym={deployment:\"deploymentdetail\",replicaset:\"replicasetdetail\",replicationcontroller:\"replicationcontrollerdetail\",daemonset:\"daemonsetdetail\",statefulset:\"statefulsetdetail\",job:\"jobdetail\"};function U(a,b){this.b=a;this.a=b}U.prototype.m=function(){return 0<this.creator.pods.warnings.length};U.prototype.hasWarnings=U.prototype.m;U.prototype.o=function(){return!this.m()&&0<this.creator.pods.pending};U.prototype.isPending=U.prototype.o;U.prototype.u=function(){return!this.o()&&!this.m()};\nU.prototype.isSuccess=U.prototype.u;U.prototype.f=function(){return this.a.f()};U.prototype.areMultipleNamespacesSelected=U.prototype.f;U.prototype.qb=function(){return this.b.href(Ym[this.creator.typeMeta.kind],new q(this.creator.objectMeta.namespace,this.creator.objectMeta.name))};U.prototype.getCreatorDetailHref=U.prototype.qb;U.$inject=[\"$state\",\"kdNamespaceService\"];var Zm={controller:U,templateUrl:\"pod/detail/creatorinfo.html\",bindings:{creator:\"<\"}};function $m(a){this.a=a}$m.prototype.Qb=function(){return this.a.href(\"nodedetail\",new Ob(this.pod.nodeName))};$m.prototype.getNodeDetailsHref=$m.prototype.Qb;$m.$inject=[\"$state\"];var an={controller:$m,templateUrl:\"pod/detail/info.html\",bindings:{pod:\"<\"}};function bn(a){this.details=a}bn.$inject=[\"podDetail\"];function cn(a,b,c){this.podDetail=a;this.eventListResource=b;this.persistentVolumeClaimsResource=c}cn.$inject=[\"podDetail\",\"kdPodEventsResource\",\"kdPodPersistentVolumeClaimsResource\"];var dn={},en={},hn={url:r(\"/pod\"),parent:\"pod\",resolve:{podDetailResource:fn,podDetail:gn},data:(dn.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"podlist\"},dn),views:(en[\"\"]={controller:cn,controllerAs:\"ctrl\",templateUrl:\"pod/detail/detail.html\"},en[\"actionbar@chrome\"]={controller:bn,controllerAs:\"$ctrl\",templateUrl:\"pod/detail/actionbar.html\"},en)};function jn(a){return a(\"api/v1/pod/:namespace/:name/event\")}jn.$inject=[\"$resource\"];\nfunction fn(a,b){return a(\"api/v1/pod/\"+b.objectNamespace+\"/\"+b.objectName)}fn.$inject=[\"$resource\",\"$stateParams\"];function gn(a){return a.get().$promise}gn.$inject=[\"podDetailResource\"];function kn(a){return a(\"api/v1/pod/:namespace/:name/persistentvolumeclaim\")}kn.$inject=[\"$resource\"];function V(a,b){this.a=b;this.b=a}V.prototype.f=function(){return this.a.f()};V.prototype.areMultipleNamespacesSelected=V.prototype.f;V.prototype.m=function(){return 0<this.pod.warnings.length};V.prototype.o=function(){return\"Pending\"===this.pod.podStatus.status};V.prototype.isPending=V.prototype.o;V.prototype.u=function(){return\"Succeeded\"===this.pod.podStatus.status||\"Running\"===this.pod.podStatus.status};V.prototype.isSuccess=V.prototype.u;V.prototype.P=function(){return\"Failed\"===this.pod.podStatus.status};\nV.prototype.isFailed=V.prototype.P;V.prototype.Wb=function(){return this.b.href(\"poddetail\",new q(this.pod.objectMeta.namespace,this.pod.objectMeta.name))};V.prototype.getPodDetailHref=V.prototype.Wb;\nV.prototype.yb=function(){var a=\"running\",b=void 0;if(this.pod.podStatus.containerStates)for(var c=this.pod.podStatus.containerStates.length-1;0<=c;c--){var d=this.pod.podStatus.containerStates[c];d.waiting&&(a=\"waiting\",b=d.waiting.reason);d.terminated&&(a=\"terminated\",(b=d.terminated.reason)||(b=d.terminated.signal?\"Signal:${state.terminated.signal}\":\"ExitCode:${state.terminated.exitCode}\"))}return\"waiting\"===a?\"Waiting: \"+b:\"terminated\"===a?\"Terminated: \"+b:this.pod.podStatus.podPhase};\nV.prototype.getDisplayStatus=V.prototype.yb;V.prototype.ga=function(){return!!this.pod&&!!this.pod.metrics&&!!this.pod.metrics.memoryUsageHistory&&0<this.pod.metrics.memoryUsageHistory.length};V.prototype.hasMemoryUsage=V.prototype.ga;V.prototype.fa=function(){return!!this.pod&&!!this.pod.metrics&&!!this.pod.metrics.cpuUsageHistory&&0<this.pod.metrics.cpuUsageHistory.length};V.prototype.hasCpuUsage=V.prototype.fa;V.$inject=[\"$state\",\"kdNamespaceService\"];\nvar ln={bindings:{pod:\"=\",showMetrics:\"<\"},controller:V,templateUrl:\"pod/list/card.html\"};function mn(a){this.a=a}mn.prototype.i=function(){return void 0!==this.podList&&void 0!==this.podListResource?\"pods\":\"\"};mn.prototype.getSelectId=mn.prototype.i;mn.prototype.Pd=function(){return this.podList.pods&&0<this.podList.pods.length?!!this.podList.pods[0].metrics:!1};mn.prototype.showMetrics=mn.prototype.Pd;mn.prototype.f=function(){return this.a.f()};mn.prototype.areMultipleNamespacesSelected=mn.prototype.f;mn.$inject=[\"kdNamespaceService\"];\nvar nn={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},templateUrl:\"pod/list/cardlist.html\",controller:mn,bindings:{podList:\"<\",podListResource:\"<\",selectable:\"<\",withStatuses:\"<\"}};function on(a,b){this.podList=a;this.podListResource=b}on.$inject=[\"podList\",\"kdPodListResource\"];var pn={},rn={url:\"/pod\",parent:\"pod\",resolve:{podList:qn},data:(pn.kdBreadcrumbs={label:\"Pods\",parent:\"workload\"},pn),views:{\"\":{controller:on,controllerAs:\"$ctrl\",templateUrl:\"pod/list/list.html\"}}};function sn(a){return a(\"api/v1/pod/:namespace\")}sn.$inject=[\"$resource\"];function qn(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}qn.$inject=[\"kdPodListResource\",\"$stateParams\",\"kdDataSelectService\"];function tn(a){a.state(\"pod\",un).state(\"podlist\",rn).state(\"poddetail\",hn)}tn.$inject=[\"$stateProvider\"];var un={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var vn=angular.module(\"kubernetesDashboard.pod\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,Hg.name,F.name,p.name,l.name,ah.name]).config(tn).component(\"kdContainerInfo\",Xm).component(\"kdCreatorInfo\",Zm).component(\"kdPodCard\",ln).component(\"kdPodCardList\",nn).component(\"kdPodInfo\",an).factory(\"kdPodEventsResource\",jn).factory(\"kdPodListResource\",sn).factory(\"kdPodPersistentVolumeClaimsResource\",kn);function wn(){}wn.$inject=[\"kdResourceVerberService\"];function xn(){}xn.prototype.H=function(){return this.replicationController.podInfo.running===this.replicationController.podInfo.desired};xn.prototype.areDesiredPodsRunning=xn.prototype.H;var yn={controller:xn,templateUrl:\"replicationcontroller/detail/info.html\",bindings:{replicationController:\"<\"}};function zn(a){this.details=a}zn.$inject=[\"replicationControllerDetail\"];function An(a,b,c,d){this.replicationControllerDetail=a;this.podListResource=b;this.serviceListResource=c;this.eventListResource=d}An.prototype.fa=function(a){return!!a.metrics&&!!a.metrics.cpuUsageHistory&&0<a.metrics.cpuUsageHistory.length};An.prototype.hasCpuUsage=An.prototype.fa;An.prototype.ga=function(a){return!!a.metrics&&!!a.metrics.memoryUsageHistory&&0<a.metrics.memoryUsageHistory.length};An.prototype.hasMemoryUsage=An.prototype.ga;\nAn.$inject=[\"replicationControllerDetail\",\"kdRCPodsResource\",\"kdRCServicesResource\",\"kdRCEventsResource\"];var Bn={},Cn={},En={url:r(\"/replicationcontroller\"),parent:\"replicationcontroller\",resolve:{replicationControllerDetail:Dn},data:(Bn.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"replicationcontrollerlist\"},Bn),views:(Cn[\"\"]={controller:An,controllerAs:\"$ctrl\",templateUrl:\"replicationcontroller/detail/detail.html\"},Cn[\"actionbar@chrome\"]={controller:zn,controllerAs:\"$ctrl\",templateUrl:\"replicationcontroller/detail/actionbar.html\"},Cn)};\nfunction Fn(a){return a(\"api/v1/replicationcontroller/:namespace/:name\")}Fn.$inject=[\"$resource\"];function Gn(a){return a(\"api/v1/replicationcontroller/:namespace/:name/pod\")}Gn.$inject=[\"$resource\"];function Hn(a){return a(\"api/v1/replicationcontroller/:namespace/:name/event\")}Hn.$inject=[\"$resource\"];function In(a){return a(\"api/v1/replicationcontroller/:namespace/:name/service\")}In.$inject=[\"$resource\"];function Dn(a,b,c){b=c.l(b.objectNamespace,b.objectName);return a.get(b).$promise}\nDn.$inject=[\"kdRCResource\",\"$stateParams\",\"kdDataSelectService\"];function W(a,b){this.b=a;this.a=b}W.prototype.f=function(){return this.a.f()};W.prototype.areMultipleNamespacesSelected=W.prototype.f;W.prototype.bc=function(){return this.b.href(\"replicationcontrollerdetail\",new q(this.replicationController.objectMeta.namespace,this.replicationController.objectMeta.name))};W.prototype.getReplicationControllerDetailHref=W.prototype.bc;W.prototype.m=function(){return 0<this.replicationController.pods.warnings.length};W.prototype.hasWarnings=W.prototype.m;\nW.prototype.o=function(){return!this.m()&&0<this.replicationController.pods.pending};W.prototype.isPending=W.prototype.o;W.prototype.u=function(){return!this.o()&&!this.m()};W.prototype.isSuccess=W.prototype.u;W.$inject=[\"$state\",\"kdNamespaceService\"];var Jn={bindings:{replicationController:\"=\",showResourceKind:\"<\"},controller:W,templateUrl:\"replicationcontroller/list/card.html\"};function Kn(a){this.a=a}Kn.prototype.i=function(){return void 0!==this.replicationControllerList&&void 0!==this.replicationControllerListResource?\"replicationcontrollers\":\"\"};Kn.prototype.getSelectId=Kn.prototype.i;Kn.prototype.f=function(){return this.a.f()};Kn.prototype.areMultipleNamespacesSelected=Kn.prototype.f;Kn.$inject=[\"kdNamespaceService\"];\nvar Ln={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},bindings:{replicationControllerList:\"<\",replicationControllerListResource:\"<\",showResourceKind:\"<\"},templateUrl:\"replicationcontroller/list/cardlist.html\",controller:Kn};function Mn(a,b){this.replicationControllerList=a;this.rcListResource=b}Mn.$inject=[\"replicationControllerList\",\"kdRCListResource\"];var Nn={},Pn={url:\"/replicationcontroller\",parent:\"replicationcontroller\",resolve:{replicationControllerList:On},data:(Nn.kdBreadcrumbs={label:\"Replication Controllers\",parent:\"workload\"},Nn),views:{\"\":{controller:Mn,controllerAs:\"$ctrl\",templateUrl:\"replicationcontroller/list/list.html\"}}};function Qn(a){return a(\"api/v1/replicationcontroller/:namespace\")}Qn.$inject=[\"$resource\"];function On(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}On.$inject=[\"kdRCListResource\",\"$stateParams\",\"kdDataSelectService\"];function Rn(a){a.state(\"replicationcontroller\",Sn).state(\"replicationcontrollerlist\",Pn).state(\"replicationcontrollerdetail\",En)}Rn.$inject=[\"$stateProvider\"];var Sn={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var Tn=angular.module(\"kubernetesDashboard.replicationController\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name,Uf.name,vn.name]).config(Rn).component(\"kdReplicationControllerCard\",Jn).component(\"kdReplicationControllerCardList\",Ln).component(\"kdReplicationControllerCardMenu\",{bindings:{replicationController:\"=\"},templateUrl:\"replicationcontroller/list/cardmenu.html\"}).component(\"kdReplicationControllerInfo\",yn).service(\"kdReplicationControllerService\",wn).service(\"kdScaleService\",\nkg).factory(\"kdRCListResource\",Qn).factory(\"kdRCResource\",Fn).factory(\"kdRCPodsResource\",Gn).factory(\"kdRCEventsResource\",Hn).factory(\"kdRCServicesResource\",In);function Un(){}Un.prototype.H=function(){return this.statefulSet.podInfo.running===this.statefulSet.podInfo.desired};Un.prototype.areDesiredPodsRunning=Un.prototype.H;var Vn={controller:Un,templateUrl:\"statefulset/detail/info.html\",bindings:{statefulSet:\"=\"}};function Wn(a){this.details=a}Wn.$inject=[\"statefulSetDetail\"];function Xn(a,b,c){this.statefulSetDetail=a;this.statefulSetPodsResource=b;this.statefulSetEventsResource=c}Xn.$inject=[\"statefulSetDetail\",\"kdStatefulSetPodsResource\",\"kdStatefulSetEventsResource\"];var Yn={},Zn={},bo={url:r(\"/statefulset\"),parent:\"statefulset\",resolve:{statefulSetDetailResource:$n,statefulSetDetail:ao},data:(Yn.kdBreadcrumbs={label:\"{{$stateParams.objectName}}\",parent:\"statefulsetlist\"},Yn),views:(Zn[\"\"]={controller:Xn,controllerAs:\"ctrl\",templateUrl:\"statefulset/detail/detail.html\"},Zn[\"actionbar@chrome\"]={controller:Wn,controllerAs:\"$ctrl\",templateUrl:\"statefulset/detail/actionbar.html\"},Zn)};function co(a){return a(\"api/v1/statefulset/:namespace/:name/pod\")}co.$inject=[\"$resource\"];\nfunction eo(a){return a(\"api/v1/statefulset/:namespace/:name/event\")}eo.$inject=[\"$resource\"];function $n(a,b){return a(\"api/v1/statefulset/\"+b.objectNamespace+\"/\"+b.objectName)}$n.$inject=[\"$resource\",\"$stateParams\"];function ao(a){return a.get().$promise}ao.$inject=[\"statefulSetDetailResource\"];function X(a,b){this.b=a;this.a=b}X.prototype.f=function(){return this.a.f()};X.prototype.areMultipleNamespacesSelected=X.prototype.f;X.prototype.lc=function(){return this.b.href(\"statefulsetdetail\",new q(this.statefulSet.objectMeta.namespace,this.statefulSet.objectMeta.name))};X.prototype.getStatefulSetDetailHref=X.prototype.lc;X.prototype.m=function(){return 0<this.statefulSet.pods.warnings.length};X.prototype.hasWarnings=X.prototype.m;X.prototype.o=function(){return!this.m()&&0<this.statefulSet.pods.pending};\nX.prototype.isPending=X.prototype.o;X.prototype.u=function(){return!this.o()&&!this.m()};X.prototype.isSuccess=X.prototype.u;X.$inject=[\"$state\",\"kdNamespaceService\"];var fo={bindings:{statefulSet:\"=\",showResourceKind:\"<\"},controller:X,templateUrl:\"statefulset/list/card.html\"};function go(a){this.a=a}go.prototype.i=function(){return void 0!==this.statefulSetList&&void 0!==this.statefulSetListResource?\"statefulsets\":\"\"};go.prototype.getSelectId=go.prototype.i;go.prototype.f=function(){return this.a.f()};go.prototype.areMultipleNamespacesSelected=go.prototype.f;go.$inject=[\"kdNamespaceService\"];var ho={transclude:{header:\"?kdHeader\",zerostate:\"?kdEmptyListText\"},controller:go,bindings:{statefulSetList:\"<\",statefulSetListResource:\"<\",showResourceKind:\"<\"},templateUrl:\"statefulset/list/cardlist.html\"};function io(a,b){this.statefulSetList=a;this.statefulSetListResource=b}io.$inject=[\"statefulSetList\",\"kdStatefulSetListResource\"];var jo={},lo={url:\"/statefulset\",parent:\"statefulset\",resolve:{statefulSetList:ko},data:(jo.kdBreadcrumbs={label:\"Stateful Sets\",parent:\"workload\"},jo),views:{\"\":{controller:io,controllerAs:\"$ctrl\",templateUrl:\"statefulset/list/list.html\"}}};function mo(a){return a(\"api/v1/statefulset/:namespace\")}mo.$inject=[\"$resource\"];function ko(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}ko.$inject=[\"kdStatefulSetListResource\",\"$stateParams\",\"kdDataSelectService\"];function no(a){a.state(\"statefulset\",oo).state(\"statefulsetlist\",lo).state(\"statefulsetdetail\",bo)}no.$inject=[\"$stateProvider\"];var oo={\"abstract\":!0,parent:\"chrome\",template:\"<ui-view/>\"};var po=angular.module(\"kubernetesDashboard.statefulSet\",[\"ngMaterial\",\"ngResource\",\"ui.router\",E.name,A.name,F.name,p.name,l.name]).config(no).component(\"kdStatefulSetCard\",fo).component(\"kdStatefulSetCardList\",ho).component(\"kdStatefulSetInfo\",Vn).service(\"kdScaleService\",kg).factory(\"kdStatefulSetEventsResource\",eo).factory(\"kdStatefulSetListResource\",mo).factory(\"kdStatefulSetPodsResource\",co);function Y(a,b,c,d,f,g,h,k,D,u,sb,Ea,lb,Kb){this.overview=a;this.podListResource=b;this.replicaSetListResource=c;this.daemonSetListResource=d;this.deploymentListResource=f;this.statefulSetListResource=g;this.jobListResource=h;this.cronJobListResource=k;this.rcListResource=D;this.kdServiceListResource=u;this.kdIngressListResource=sb;this.kdConfigMapListResource=Ea;this.kdSecretListResource=lb;this.pvcListResource=Kb;this.resourcesRatio={}}\nY.prototype.$onInit=function(){this.resourcesRatio.cronJobRatio=this.Ba(this.overview.cronJobList.status,this.overview.cronJobList.listMeta.totalItems);this.resourcesRatio.daemonSetRatio=this.L(this.overview.daemonSetList.status,this.overview.daemonSetList.listMeta.totalItems);this.resourcesRatio.deploymentRatio=this.L(this.overview.deploymentList.status,this.overview.deploymentList.listMeta.totalItems);this.resourcesRatio.jobRatio=this.aa(this.overview.jobList.status,this.overview.jobList.listMeta.totalItems);\nthis.resourcesRatio.podRatio=this.aa(this.overview.podList.status,this.overview.podList.listMeta.totalItems);this.resourcesRatio.replicaSetRatio=this.L(this.overview.replicaSetList.status,this.overview.replicaSetList.listMeta.totalItems);this.resourcesRatio.rcRatio=this.L(this.overview.replicationControllerList.status,this.overview.replicationControllerList.listMeta.totalItems);this.resourcesRatio.statefulSetRatio=this.L(this.overview.statefulSetList.status,this.overview.statefulSetList.listMeta.totalItems)};\nY.prototype.A=function(){return!this.Ta()&&!this.Sa()&&!this.Ra()};Y.prototype.shouldShowZeroState=Y.prototype.A;Y.prototype.Ta=function(){return 0!==this.overview.deploymentList.listMeta.totalItems+this.overview.replicaSetList.listMeta.totalItems+this.overview.cronJobList.listMeta.totalItems+this.overview.jobList.listMeta.totalItems+this.overview.replicationControllerList.listMeta.totalItems+this.overview.podList.listMeta.totalItems+this.overview.daemonSetList.listMeta.totalItems+this.overview.statefulSetList.listMeta.totalItems};\nY.prototype.shouldShowWorkloadsSection=Y.prototype.Ta;Y.prototype.Sa=function(){return 0!==this.overview.serviceList.listMeta.totalItems+this.overview.ingressList.listMeta.totalItems};Y.prototype.shouldShowDiscoverySection=Y.prototype.Sa;Y.prototype.Ra=function(){return 0!==this.overview.configMapList.listMeta.totalItems+this.overview.secretList.listMeta.totalItems+this.overview.persistentVolumeClaimList.listMeta.totalItems};Y.prototype.shouldShowConfigSection=Y.prototype.Ra;\nY.prototype.Ba=function(a,b){return 0<b?[{key:\"Running: \"+a.running,value:a.running/b*100},{key:\"Suspended: \"+a.failed,value:a.failed/b*100}]:[]};Y.prototype.getSuspendableResourceRatio=Y.prototype.Ba;Y.prototype.L=function(a,b){return 0<b?[{key:\"Running: \"+a.running,value:a.running/b*100},{key:\"Failed: \"+a.failed,value:a.failed/b*100},{key:\"Pending: \"+a.pending,value:a.pending/b*100}]:[]};Y.prototype.getDefaultResourceRatio=Y.prototype.L;\nY.prototype.aa=function(a,b){return 0<b?[{key:\"Running: \"+a.running,value:a.running/b*100},{key:\"Failed: \"+a.failed,value:a.failed/b*100},{key:\"Pending: \"+a.pending,value:a.pending/b*100},{key:\"Succeeded: \"+a.succeeded,value:a.succeeded/b*100}]:[]};Y.prototype.getCompletableResourceRatio=Y.prototype.aa;Y.$inject=\"overview kdPodListResource kdReplicaSetListResource kdDaemonSetListResource kdDeploymentListResource kdStatefulSetListResource kdJobListResource kdCronJobListResource kdRCListResource kdServiceListResource kdIngressListResource kdConfigMapListResource kdSecretListResource kdPersistentVolumeClaimListResource\".split(\" \");function qo(a){var b={};a.state(\"overview\",{url:\"/overview\",parent:\"chrome\",resolve:{overview:ro},data:(b.kdBreadcrumbs={label:so},b),views:{\"\":{controller:Y,controllerAs:\"$ctrl\",templateUrl:\"overview/overview.html\"}}})}qo.$inject=[\"$stateProvider\"];function ro(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}ro.$inject=[\"kdOverviewResource\",\"$stateParams\",\"kdDataSelectService\"];var so=\"Overview\";var uo=angular.module(\"kubernetesDashboard.overview\",[\"ngMaterial\",\"ngResource\",\"ui.router\",p.name,A.name,E.name,Ol.name,Uh.name,Tn.name,Wm.name,Qj.name,qi.name,po.name,Mk.name,jk.name,Hg.name,th.name,ah.name]).config(qo).factory(\"kdOverviewResource\",to).component(\"kdWorkloadStatuses\",{bindings:{resourcesRatio:\"<\"},controller:function(){this.colorPalette=[\"#00c752\",\"#f00\",\"#ffad20\",\"#006028\"]},templateUrl:\"overview/workloadstatuses/workloadstatuses.html\"});\nfunction to(a){return a(\"api/v1/overview/:namespace\")}to.$inject=[\"$resource\"];var vo=angular.module(\"kubernetesDashboard.resourceLimit\",[\"ngMaterial\",\"ngResource\",\"ui.router\",A.name,p.name,F.name,E.name]).component(\"kdResourceLimits\",{transclude:{header:\"?kdHeader\"},controller:function(){},templateUrl:\"resourcelimit/detail/detail.html\",bindings:{resourceLimits:\"=\"}});var wo=angular.module(\"kubernetesDashboard.resourceQuota\",[\"ngMaterial\",\"ngResource\",\"ui.router\",A.name,p.name,F.name,E.name]).component(\"kdResourceQuotaDetail\",{controller:function(){},templateUrl:\"resourcequota/detail/detail.html\",bindings:{resourceQuotaDetail:\"=\"}}).component(\"kdResourceQuotaDetailStatus\",{controller:function(){},templateUrl:\"resourcequota/detail/status.html\",bindings:{statusList:\"=\"}});function xo(a,b,c,d,f,g,h,k,D,u,sb,Ea,lb,Kb,Ck,Dk,Fk,Ek){this.search=a;this.podListResource=b;this.replicaSetListResource=c;this.daemonSetListResource=d;this.deploymentListResource=f;this.statefulSetListResource=g;this.jobListResource=h;this.rcListResource=k;this.kdNamespaceListResource=D;this.kdNodeListResource=u;this.kdPersistentVolumeListResource=sb;this.kdRoleListResource=Ea;this.kdStorageClassListResource=lb;this.kdConfigMapListResource=Kb;this.kdSecretListResource=Ck;this.pvcListResource=Dk;\nthis.kdServiceListResource=Fk;this.kdIngressListResource=Ek}\nxo.prototype.A=function(){return 0===this.search.deploymentList.listMeta.totalItems+this.search.replicaSetList.listMeta.totalItems+this.search.jobList.listMeta.totalItems+this.search.replicationControllerList.listMeta.totalItems+this.search.podList.listMeta.totalItems+this.search.daemonSetList.listMeta.totalItems+this.search.statefulSetList.listMeta.totalItems+this.search.nodeList.listMeta.totalItems+this.search.namespaceList.listMeta.totalItems+this.search.persistentVolumeList.listMeta.totalItems+\nthis.search.storageClassList.listMeta.totalItems+this.search.configMapList.listMeta.totalItems+this.search.secretList.listMeta.totalItems+this.search.persistentVolumeClaimList.listMeta.totalItems+this.search.serviceList.listMeta.totalItems+this.search.ingressList.listMeta.totalItems};xo.prototype.shouldShowZeroState=xo.prototype.A;xo.$inject=\"search kdPodListResource kdReplicaSetListResource kdDaemonSetListResource kdDeploymentListResource kdStatefulSetListResource kdJobListResource kdRCListResource kdNamespaceListResource kdNodeListResource kdPersistentVolumeListResource kdRoleListResource kdStorageClassListResource kdConfigMapListResource kdSecretListResource kdPersistentVolumeClaimListResource kdServiceListResource kdIngressListResource\".split(\" \");function yo(a){var b={};a.state(\"search\",{url:\"/search?q\",parent:\"chrome\",resolve:{search:zo},data:(b.kdBreadcrumbs={label:Ao+\" {{$stateParams.q}}\"},b),views:{\"\":{controller:xo,controllerAs:\"$ctrl\",templateUrl:\"search/search.html\"}}})}yo.$inject=[\"$stateProvider\"];function zo(a,b,c){b=(new m(b.N())).oa(c.namespace).na(c.q).I();\"_all\"===b.namespace&&(b.namespace=\"\");return a.get(b).$promise}zo.$inject=[\"kdSearchResource\",\"kdSettingsService\",\"$stateParams\",\"kdNamespaceService\"];var Ao=\"Search for\";var Co=angular.module(\"kubernetesDashboard.search\",[\"ngMaterial\",\"ngResource\",\"ui.router\",p.name,A.name,E.name,Ol.name,Tn.name,Wm.name,Qj.name,qi.name,po.name,Me.name,se.name,gf.name,rf.name,Lf.name,Hg.name,th.name,ah.name,Mk.name,jk.name]).config(yo).factory(\"kdSearchResource\",Bo);function Bo(a){return a(\"api/v1/search/:namespace\")}Bo.$inject=[\"$resource\"];function Do(a,b,c,d,f){this.c=a;this.a=b;this.b=c;this.g=d;this.global=f;this.h=this.b.confirm().title(\"Settings have changed since last reload\").textContent(\"Do you want to save them anyways?\").ok(\"Save\").cancel(\"Refresh\")}function Eo(a){a.c(\"api/v1/settings/global\").get(function(b){a.global=b;a.a.info(\"Reloaded global settings: \",b)},function(b){a.a.info(\"Error during global settings reload: \",b)})}\nDo.prototype.Ma=function(){var a=this,b={clusterName:this.global.clusterName,itemsPerPage:this.global.itemsPerPage,autoRefreshTimeInterval:this.global.autoRefreshTimeInterval};this.c(\"api/v1/settings/global\",{},{save:{method:\"PUT\",headers:{\"Content-Type\":\"application/json\"}}}).save(b,function(b){a.a.info(\"Successfully saved settings: \",b);a.globalForm.$setPristine();a.g.load()},function(b){a.a.error(\"Error during saving settings:\",b);b&&-1!==b.data.indexOf(\"settings changed since last reload\")&&a.b.show(a.h).then(function(){a.Ma()},\nfunction(){Eo(a)})})};Do.prototype.saveGlobal=Do.prototype.Ma;Do.$inject=[\"$resource\",\"$log\",\"$mdDialog\",\"kdSettingsService\",\"globalSettings\"];function Fo(a){var b={};a.state(\"settings\",{url:\"/settings\",parent:\"chrome\",views:{\"\":{controller:Do,controllerAs:\"$ctrl\",templateUrl:\"settings/settings.html\"}},resolve:{globalSettings:Go},data:(b.kdBreadcrumbs={label:Ho},b)})}Fo.$inject=[\"$stateProvider\"];var Ho=\"Settings\";function Go(a){return Zf(a)}Go.$inject=[\"kdAuthorizerService\"];var Io=angular.module(\"kubernetesDashboard.settings\",[\"ngMaterial\",\"ui.router\",og.name]).config(Fo).component(\"kdSettingsEntry\",{bindings:{key:\"@\",desc:\"@\"},templateUrl:\"settings/settingsentry/settingsentry.html\",transclude:!0});function Jo(a,b,c,d){this.h=b[0];this.j=c;this.g=d;this.c=this.g.params;this.containers=a.containers?a.containers:[];this.container=this.va();this.podName=this.c.objectName;this.a=this.io=this.b=null;hterm.defaultStorage=new lib.Storage.Memory;this.b=new hterm.Terminal;this.b.onTerminalReady=this.onTerminalReady.bind(this)}Jo.prototype.va=function(){return this.c.container?this.c.container:0<this.containers.length?this.containers[0]:\"\"};Jo.prototype.getContainerName=Jo.prototype.va;\nJo.prototype.Cd=function(){var a=this.h.getElementById(\"kd-shell-term\");this.b.decorate(a);a.firstChild.style.position=null;this.b.installKeyboard()};Jo.prototype.openTerminal=Jo.prototype.Cd;aa=Jo.prototype;aa.onTerminalReady=function(){this.io=this.b.io.push();this.j(\"api/v1/pod/\"+this.c.objectNamespace+\"/\"+this.podName+\"/shell/\"+this.container).get({},this.wd.bind(this))};\naa.wd=function(a){this.a=new SockJS(\"api/sockjs?\"+a.id);this.a.onopen=this.rd.bind(this,a);this.a.onmessage=this.qd.bind(this);this.a.onclose=this.pd.bind(this)};aa.rd=function(a){this.a.send(JSON.stringify({Op:\"bind\",SessionID:a.id}));this.onTerminalResize(this.b.screenSize.width,this.b.screenSize.height);this.io.onVTKeystroke=this.yd.bind(this);this.io.sendString=this.xd.bind(this);this.io.onTerminalResize=this.onTerminalResize.bind(this)};\naa.qd=function(a){a=JSON.parse(a.data);switch(a.Op){case \"stdout\":this.io.print(a.Data);break;case \"toast\":this.io.showOverlay(a.Data)}};aa.pd=function(a){\"\"!==a.reason&&1E3>a.code?this.io.showOverlay(a.reason,null):this.io.showOverlay(\"Connection closed\",null);this.a.close();this.b.uninstallKeyboard()};aa.yd=function(a){this.a.send(JSON.stringify({Op:\"stdin\",Data:a}))};aa.xd=function(a){this.a.send(JSON.stringify({Op:\"stdin\",Data:a}))};\naa.onTerminalResize=function(a,b){this.a.send(JSON.stringify({Op:\"resize\",Cols:a,Rows:b}))};aa.sd=function(a){this.g.go(\"shell\",new Ub(this.c.objectNamespace,this.c.objectName,a))};Jo.prototype.onContainerChange=Jo.prototype.sd;Jo.$inject=[\"podContainers\",\"$document\",\"$resource\",\"$state\"];function Ko(a){var b={\"\":{templateUrl:\"shell/shell.html\",controller:Jo,controllerAs:\"ctrl\"}},c={};a.state(\"shell\",{url:r(\"/shell\")+\"/:container\",params:{container:{value:null,ae:!0}},parent:\"chrome\",resolve:{podContainers:Lo},data:(c.kdBreadcrumbs={label:Mo},c.fillContent=!0,c),views:b})}Ko.$inject=[\"$stateProvider\"];function Lo(a,b){return b(\"api/v1/pod/\"+a.objectNamespace+\"/\"+a.objectName+\"/container\").get().$promise}Lo.$inject=[\"$stateParams\",\"$resource\"];var Mo=\"Shell\";function No(a){return{restrict:\"A\",terminal:!0,transclude:!1,link:function(b,c,d){a(b.$eval(d.termOpen),0)}}}No.$inject=[\"$timeout\"];var Oo=angular.module(\"kubernetesDashboard.shell\",[\"ngResource\",\"ui.router\"]).config(Ko).directive(\"termOpen\",[\"$timeout\",No]);function Po(a,b,c,d){this.a=b;this.c=d;this.b=a}Po.prototype.title=function(){var a=\"\",b=this.c.ua();b&&(a+=b+\" - \");if((b=za(this.a.state))&&b.label){var c=this.a.params;b=this.b(b.label)({$stateParams:c}).toString();a+=b+\" - \"}return a+\"Kubernetes Dashboard\"};Po.prototype.title=Po.prototype.title;Po.$inject=[\"$interpolate\",\"kdFutureStateService\",\"kdBreadcrumbsService\",\"kdSettingsService\"];function Qo(a,b,c,d,f,g,h,k,D){this.workloads=a;this.podListResource=b;this.replicaSetListResource=c;this.daemonSetListResource=d;this.deploymentListResource=f;this.statefulSetListResource=g;this.jobListResource=k;this.cronJobListResource=h;this.rcListResource=D}\nQo.prototype.A=function(){return 0===this.workloads.deploymentList.listMeta.totalItems+this.workloads.replicaSetList.listMeta.totalItems+this.workloads.jobList.listMeta.totalItems+this.workloads.cronJobList.listMeta.totalItems+this.workloads.replicationControllerList.listMeta.totalItems+this.workloads.podList.listMeta.totalItems+this.workloads.daemonSetList.listMeta.totalItems+this.workloads.statefulSetList.listMeta.totalItems};Qo.prototype.shouldShowZeroState=Qo.prototype.A;Qo.$inject=\"workloads kdPodListResource kdReplicaSetListResource kdDaemonSetListResource kdDeploymentListResource kdStatefulSetListResource kdCronJobListResource kdJobListResource kdRCListResource\".split(\" \");function Ro(a){var b={};a.state(\"workload\",{url:\"/workload\",parent:\"chrome\",resolve:{workloads:So},data:(b.kdBreadcrumbs={label:To},b),views:{\"\":{controller:Qo,controllerAs:\"$ctrl\",templateUrl:\"workloads/workloads.html\"}}})}Ro.$inject=[\"$stateProvider\"];function So(a,b,c){b=c.l(b.namespace);return a.get(b).$promise}So.$inject=[\"kdWorkloadResource\",\"$stateParams\",\"kdDataSelectService\"];var To=\"Workloads\";var Vo=angular.module(\"kubernetesDashboard.workloads\",[\"ngMaterial\",\"ngResource\",\"ui.router\",p.name,A.name,E.name,Ol.name,Uh.name,Tn.name,Wm.name,Qj.name,qi.name,po.name]).config(Ro).factory(\"kdWorkloadResource\",Uo);function Uo(a){return a(\"api/v1/workload/:namespace\")}Uo.$inject=[\"$resource\"];var Z=angular.module(\"kubernetesDashboard\",[\"ngAnimate\",\"ngAria\",\"ngMaterial\",\"ngMessages\",\"ngResource\",\"ngSanitize\",\"ui.router\",Fa.name,Io.name,og.name,ig.name,uo.name,E.name,qi.name,uj.name,Xk.name,Ol.name,Uh.name,fm.name,um.name,Oo.name,Tn.name,Wm.name,se.name,Me.name,Qj.name,tl.name,Vo.name,Co.name,Rf.name,Mk.name,vn.name,gf.name,po.name,ah.name,wo.name,vo.name,Hg.name,th.name,jk.name,Sk.name,zh.name,Uf.name,Lf.name,rf.name,lg.name]).config(ua).config(ul).controller(\"kdTitle\",Po).controller(\"kdMain\",\nwa);Z.run([\"$templateCache\",function(a){a.put(\"about/about.html\",' <kd-content-card> <kd-title>About</kd-title> <kd-content class=\"kd-content-padded\"> <div layout=\"row\"> <img src=\"assets/images/kubernetes-logo.svg\" class=\"kd-about-kubernetes-logo\">  <div layout=\"column\" layout-align=\"start start\"> <div class=\"md-headline\">Dashboard</div> <div class=\"md-subhead\">General-purpose web UI for Kubernetes clusters</div> </div> </div> <kd-info-card-entry title=\"Dashboard Version\" ng-if=\"::$ctrl.dashboardVersion\"> {{$ctrl.dashboardVersion}} </kd-info-card-entry> <kd-info-card-entry title=\"Git Commit\" ng-if=\"::$ctrl.gitCommit\"> {{$ctrl.gitCommit}} </kd-info-card-entry> <div class=\"kd-footer\"> Copyright 2015-{{ $ctrl.latestCopyrightYear}} The Kubernetes Authors. <br> Kubernetes Dashboard is made possible by the Dashboard <a href=\"https://github.com/kubernetes/dashboard/graphs/contributors\">community</a> as an <a href=\"https://github.com/kubernetes/dashboard\">open source project</a>. </div> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"about/actionbar.html\",' <a href=\"https://kubernetes.io/docs/user-guide/ui/\"> <md-button class=\"kd-actionbar-button\"> <md-icon>description</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Read Kubernetes Dashboard documentation </md-tooltip> <div class=\"kd-actionbar-button-text\"> Documentation </div> </md-button> </a> <a ng-href=\"{{$ctrl.getLinkToFeedbackPage()}}\"> <md-button class=\"kd-actionbar-button\"> <md-icon>feedback</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Create new issue on GitHub </md-tooltip> <div class=\"kd-actionbar-button-text\"> Send feedback </div> </md-button> </a> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/chrome.html\",' <md-toolbar class=\"kd-toolbar\"> <div class=\"md-toolbar-tools kd-toolbar-tools\"> <div class=\"kd-logo-bar\"> <a ui-sref=\"{{$ctrl.getOverviewStateName()}}\" class=\"kd-toolbar-logo-link\"> <md-icon md-svg-icon=\"assets/images/kubernetes-logo.svg\" class=\"kd-toolbar-logo\"> </md-icon> <md-icon md-svg-icon=\"assets/images/kubernetes-logo-text.svg\" class=\"kd-toolbar-logo-text\"> </md-icon> </a> </div> <kd-search class=\"kd-search-bar\"></kd-search> <div class=\"kd-global-actions\"> <md-button ng-click=\"$ctrl.create()\" class=\"kd-actionbar-button\"> <md-icon class=\"kd-global-action-icon\">add</md-icon> <md-tooltip md-delay=\"500\" md-autohide> <div class=\"kd-actionbar-button-text\"> Create an application or any Kubernetes resource </div> </md-tooltip> Create </md-button> <kd-control-panel></kd-control-panel> </div> </div> </md-toolbar> <md-toolbar class=\"kd-second-toolbar\"> <div class=\"md-toolbar-tools kd-toolbar-tools\"> <kd-nav-hamburger flex=\"none\"></kd-nav-hamburger> <kd-breadcrumbs class=\"kd-actionbar-breadcrumbs\" limit=\"3\" flex=\"auto\" layout=\"row\"></kd-breadcrumbs> <div flex=\"auto\" ui-view=\"toolbar\"></div> <kd-actionbar></kd-actionbar> </div> </md-toolbar> <md-toolbar class=\"kd-system-banner\" ng-class=\"$ctrl.getSystemBannerClass()\" ng-if=\"$ctrl.isSystemBannerVisible()\" ng-bind-html=\"$ctrl.getSystemBannerMessage()\"> </md-toolbar> <md-content layout=\"row\" class=\"kd-app-entire-content\" flex=\"auto\"> <kd-nav flex=\"none\"></kd-nav> <md-content flex=\"auto\" class=\"kd-main-content-box\"> <div ng-switch=\"$ctrl.loading\" class=\"kd-content-div-filled kd-main-content-div\"> <div ng-switch-when=\"true\" class=\"kd-spinner\"> <md-progress-circular ng-if=\"$ctrl.showLoadingSpinner\" md-mode=\"indeterminate\" md-diameter=\"48\"> </md-progress-circular> </div> <div ng-switch-when=\"false\" class=\"kd-app-content\"> <div ui-view class=\"md-body-1\" ng-class=\"{\\'kd-content-div-filled\\': $ctrl.isFillContentView()}\"></div> </div> </div> </md-content> </md-content> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cluster/cluster.html\",' <kd-warnings warnings=\"::$ctrl.cluster.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.cluster.nodeList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these resources. (Does not count pods double because it is mentioned both in the pod list and its controller is mentioned in e.g. a replica set.)\" metrics=\"::$ctrl.cluster.nodeList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <kd-content-card ng-if=\"$ctrl.cluster.namespaceList.namespaces.length\"> <kd-content> <kd-namespace-card-list namespace-list=\"$ctrl.cluster.namespaceList\" with-statuses=\"true\" namespace-list-resource=\"$ctrl.kdNamespaceListResource\"> </kd-namespace-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.cluster.nodeList.nodes.length\"> <kd-content> <kd-node-card-list node-list=\"$ctrl.cluster.nodeList\" with-statuses=\"true\" node-list-resource=\"$ctrl.kdNodeListResource\"> </kd-node-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.cluster.persistentVolumeList.items.length\"> <kd-content> <kd-persistent-volume-card-list persistent-volume-list=\"$ctrl.cluster.persistentVolumeList\" with-statuses=\"true\" persistent-volume-list-resource=\"$ctrl.kdPersistentVolumeListResource\"> </kd-persistent-volume-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.cluster.roleList.items.length\"> <kd-content> <kd-role-card-list role-list=\"$ctrl.cluster.roleList\" with-statuses=\"false\" role-list-resource=\"$ctrl.kdRoleListResource\"> </kd-role-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.cluster.storageClassList.storageClasses.length\"> <kd-content> <kd-storage-class-card-list storage-class-list=\"$ctrl.cluster.storageClassList\" with-statuses=\"true\" storage-class-list-resource=\"$ctrl.kdStorageClassListResource\"> </kd-storage-class-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"config/config.html\",' <kd-warnings warnings=\"::$ctrl.config.errors\"></kd-warnings> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <kd-content-card ng-if=\"$ctrl.config.configMapList.items.length\"> <kd-content> <kd-config-map-card-list config-map-list=\"$ctrl.config.configMapList\" with-statuses=\"true\" config-map-list-resource=\"$ctrl.kdConfigMapListResource\"> </kd-config-map-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.config.persistentVolumeClaimList.items.length\"> <kd-content> <kd-persistent-volume-claim-card-list persistent-volume-claim-list=\"$ctrl.config.persistentVolumeClaimList\" persistent-volume-claim-list-resource=\"$ctrl.pvcListResource\"> </kd-persistent-volume-claim-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.config.secretList.secrets.length\"> <kd-content> <kd-secret-card-list secret-list=\"$ctrl.config.secretList\" with-statuses=\"true\" secret-list-resource=\"$ctrl.kdSecretListResource\"> </kd-secret-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deploy.html\",' <kd-content-card> <kd-content> <md-tabs md-dynamic-height md-border-bottom class=\"kd-deploy-tabs\"> <md-tab label=\"Create from text input\"> <kd-deploy-from-input></kd-deploy-from-input> </md-tab> <md-tab label=\"Create from file\"> <kd-deploy-from-file></kd-deploy-from-file> </md-tab> <md-tab label=\"Create an app\"> <kd-deploy-from-settings></kd-deploy-from-settings> </md-tab> </md-tabs> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"discovery/discovery.html\",' <kd-warnings warnings=\"::$ctrl.discovery.errors\"></kd-warnings> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <kd-content-card ng-if=\"$ctrl.discovery.ingressList.items.length\"> <kd-content> <kd-ingress-card-list ingress-list=\"$ctrl.discovery.ingressList\" with-statuses=\"true\" ingress-list-resource=\"$ctrl.kdIngressListResource\"> </kd-ingress-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.discovery.serviceList.services.length\"> <kd-content> <kd-service-card-list service-list=\"$ctrl.discovery.serviceList\" with-statuses=\"true\" service-list-resource=\"$ctrl.kdServiceListResource\"> </kd-service-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"endpoint/cardlist.html\",' <kd-content-card> <kd-content> <kd-resource-card-list selectable=\"false\" with-statuses=\"false\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.endpointList\" list-resource=\"$ctrl.endpointListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title> Endpoints </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.hasEndpoints()\"> <kd-zero-state-text> There are currently no Endpoints selected by this Service. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.hasEndpoints()\"> <kd-resource-card-header-column> Host </kd-resource-card-header-column> <kd-resource-card-header-column> Ports (Name, Port, Protocol) </kd-resource-card-header-column> <kd-resource-card-header-column> Node </kd-resource-card-header-column> <kd-resource-card-header-column> Ready  </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card dir-paginate=\"endpoint in $ctrl.endpointList.endpoints | itemsPerPage: default\" total-items=\"::$ctrl.endpointList.listMeta.totalItems\" object-meta=\"endpoint.objectMeta\" type-meta=\"endpoint.typeMeta\" pagination-id=\"{{::$ctrl.getSelectId()}}\"> <kd-resource-card-columns> <kd-resource-card-column>{{::endpoint.host}}</kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"port in endpoint.ports\"> <div ng-if=\"port.name\"> <kd-middle-ellipsis display-string=\"{{::port.name}}, {{::port.port}}, {{::port.protocol}}\"> </kd-middle-ellipsis> </div> <div ng-if=\"!port.name\"> <kd-middle-ellipsis display-string=\"<unset>, {{::port.port}}, {{::port.protocol}}\"> </kd-middle-ellipsis> </div> </div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"endpoint.nodeName\">{{::endpoint.nodeName}}</div> <div ng-if=\"!endpoint.nodeName\">-</div> </kd-resource-card-column> <kd-resource-card-column>{{::endpoint.ready}}</kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"error/internalerror.html\",' <div class=\"kd-error-center-fixed\"> <div layout=\"column\" layout-align=\"center center\"> <div flex=\"auto\" class=\"kd-error-block\"> <h2 class=\"md-headline kd-error-view-header\"> <i class=\"material-icons kd-error-view-icon\">error_outline</i> <span>{{ctrl.getErrorStatus()}}</span> </h2> <pre ng-class=\"{\\'kd-error-spacer\\': ctrl.isKnownError()}\">{{ctrl.getErrorData()}}</pre> <pre ng-if=\"ctrl.isNotFoundError()\">Redirecting to previous state in 3 seconds...</pre> <div ng-if=\"!ctrl.isKnownError()\" layout=\"row\" layout-align=\"end center\"> <a ng-href=\"{{ctrl.getLinkToFeedbackPage()}}\"> <md-button class=\"kd-error-feedback-button\"> Send feedback </md-button> </a> </div> </div> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"events/cardlist.html\",' <kd-content-card> <kd-content> <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.eventList\" list-resource=\"$ctrl.eventListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title> Events </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.hasEvents()\"> <kd-zero-state-text> It is possible that all events have expired. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.hasEvents()\"> <kd-resource-card-header-column size=\"medium\" grow=\"4\"> Message </kd-resource-card-header-column> <kd-resource-card-header-column> Source </kd-resource-card-header-column> <kd-resource-card-header-column> Sub-object </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> Count </kd-resource-card-header-column> <kd-resource-card-header-column> First seen </kd-resource-card-header-column> <kd-resource-card-header-column> Last seen </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card dir-paginate=\"event in $ctrl.eventList.events | itemsPerPage: default\" total-items=\"::$ctrl.eventList.listMeta.totalItems\" object-meta=\"event.objectMeta\" type-meta=\"event.typeMeta\" pagination-id=\"{{::$ctrl.getSelectId()}}\"> <kd-resource-card-status> <i ng-if=\"$ctrl.isEventWarning(event)\" class=\"material-icons kd-replicationcontrollerevents-warning-icon\">warning</i> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div class=\"kd-replicationcontrollerevents-message\"> {{event.message}} </div> </kd-resource-card-column> <kd-resource-card-column> {{event.sourceComponent}} {{event.sourceHost}} </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"event.object\">{{event.object}}</div> <div ng-if=\"!event.object\">-</div> </kd-resource-card-column> <kd-resource-card-column>{{event.count}}</kd-resource-card-column> <kd-resource-card-column> {{event.firstSeen | date}} </kd-resource-card-column> <kd-resource-card-column> {{event.lastSeen | date}} </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"login/basic.html\",' <div ng-if=\"$ctrl.selected\"> <md-input-container class=\"md-block\"> <label>Username</label> <input ng-model=\"$ctrl.username\" ng-change=\"$ctrl.onUsernameUpdate()\" required md-no-asterisk> </md-input-container> <md-input-container class=\"md-block\"> <label>Password</label> <input type=\"password\" ng-model=\"$ctrl.password\" ng-change=\"$ctrl.onPasswordUpdate()\" required md-no-asterisk> </md-input-container> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"login/kubeconfig.html\",' <div ng-if=\"$ctrl.selected\"> <kd-upload-file on-load=\"$ctrl.onFileLoad(file)\" label=\"Choose kubeconfig file\"> </kd-upload-file> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"login/login.html\",' <kd-warnings warnings=\"$ctrl.errors\" class=\"kd-login-error\"></kd-warnings> <form name=\"$ctrl.form\" ng-submit=\"$ctrl.login()\" novalidate> <kd-content-card class=\"kd-login-card\"> <kd-title> Kubernetes Dashboard </kd-title> <kd-content> <kd-login-options on-change=\"$ctrl.onOptionChange()\"> <kd-token-login ng-if=\"$ctrl.isAuthenticationModeEnabled($ctrl.supportedAuthenticationModes.TOKEN)\" title=\"Token\" desc=\"Every Service Account has a Secret with valid Bearer Token that can be used to log in to Dashboard. To find out more about how to configure and use Bearer Tokens, please refer to the <a href=\\'https://kubernetes.io/docs/admin/authentication/\\'>Authentication</a> section.\" on-update=\"$ctrl.onUpdate(loginSpec)\"></kd-token-login> <kd-basic-login ng-if=\"$ctrl.isAuthenticationModeEnabled($ctrl.supportedAuthenticationModes.BASIC)\" title=\"Basic\" on-update=\"$ctrl.onUpdate(loginSpec)\"></kd-basic-login> <kd-kube-config-login title=\"Kubeconfig\" desc=\"Please select the kubeconfig file that you have created to configure access to the cluster. To find out more about how to configure and use kubeconfig file, please refer to the <a href=\\'https://kubernetes.io/docs/tasks/access-application-cluster/configure-access-multiple-clusters/\\'>Configure Access to Multiple Clusters</a> section.\" on-update=\"$ctrl.onUpdate(loginSpec)\"></kd-kube-config-login> </kd-login-options> <md-button class=\"md-raised md-primary\" type=\"submit\"> Sign in </md-button> <md-button class=\"md-primary\" ng-click=\"$ctrl.skip()\" ng-if=\"$ctrl.isSkipButtonEnabled()\"> Skip </md-button> </kd-content> </kd-content-card> </form> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"login/options.html\",' <md-radio-group ng-model=\"$ctrl.selectedOption\" ng-change=\"$ctrl.onOptionChange()\"> <div ng-repeat=\"option in $ctrl.options\"> <md-radio-button value=\"{{::option.title}}\" class=\"kd-login-option md-primary\"> {{::option.title}} </md-radio-button> <div class=\"kd-login-option-desc\" ng-bind-html=\"$ctrl.acceptHtmlContent(option.desc)\"></div> </div> </md-radio-group> <div ng-transclude class=\"kd-option-container\"> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"login/token.html\",' <div ng-if=\"$ctrl.selected\"> <md-input-container class=\"md-block\"> <label>Enter token</label> <input ng-model=\"$ctrl.token\" ng-change=\"$ctrl.onTokenUpdate()\" required type=\"password\" md-no-asterisk> </md-input-container> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"logs/logs.html\",' <kd-content-card class=\"kd-log-content-card\"> <kd-title class=\"kd-logs-title\"> Logs from <md-select class=\"kd-logs-toolbar-select\" aria-label=\"container\" ng-model=\"ctrl.container\" md-on-close=\"ctrl.loadNewest()\" required> <md-optgroup label=\"Containers\" class=\"kd-namespace-select-namespace-list\"> <md-option ng-repeat=\"item in ctrl.logSources.containerNames\" ng-value=\"item\"> <span class=\"kd-logs-toolbar-text\">{{::item}}</span> </md-option> </md-optgroup> <md-optgroup label=\"Init Containers\" class=\"kd-namespace-select-namespace-list\"> <md-option ng-repeat=\"item in ctrl.logSources.initContainerNames\" ng-value=\"item\"> <span class=\"kd-logs-toolbar-text\">{{::item}}</span> </md-option> </md-optgroup> </md-select> in <md-select class=\"kd-logs-toolbar-select\" aria-label=\"resource\" ng-model=\"ctrl.pod\" md-on-close=\"ctrl.loadNewest()\" required> <md-option ng-repeat=\"item in ctrl.logSources.podNames\" ng-value=\"item\"> <span class=\"kd-logs-toolbar-text\">{{::item}}</span> </md-option> </md-select> <div class=\"kd-logs-style-buttons\"> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.onTextColorChange()\"> <md-icon ng-class=\"{\\'kd-logs-color-icon-invert\\': ctrl.logsService.getInverted(),\\n                            \\'kd-logs-color-icon\\': !ctrl.logsService.getInverted()}\"> format_color_text </md-icon> <md-tooltip md-delay=\"500\" md-autohide> Invert colors </md-tooltip> </md-button> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.onFontSizeChange()\"> <md-icon ng-class=\"{\\'kd-logs-size-icon-compact\\': ctrl.logsService.getCompact(),\\n                            \\'kd-logs-size-icon\\': !ctrl.logsService.getCompact()}\"> text_fields </md-icon> <md-tooltip md-delay=\"500\" md-autohide> Toggle font size </md-tooltip> </md-button> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.onShowTimestamp()\"> <md-icon class=\"kd-logs-icon\">{{ctrl.logsService.getShowTimestamp() ? \\'timer\\' : \\'timer_off\\'}}</md-icon> </md-button> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.toggleLogFollow()\"> <md-icon class=\"kd-logs-icon\"> refresh <svg class=\"kd-cross-style\" ng-if=\"!ctrl.logsService.getFollowing()\" width=\"32px\" height=\"32px\" viewBox=\"0 0 32 32\"> <line class=\"kd-cross-line-white\" x1=\"9\" x2=\"27\" y1=\"9\" y2=\"27\"/> <line class=\"kd-cross-line-black\" x1=\"9\" x2=\"27\" y1=\"10\" y2=\"28\"/> </svg> </md-icon> <md-tooltip md-delay=\"500\" md-autohide> Toggle auto-refresh (every {{ctrl.refreshInterval / 1000}} seconds) </md-tooltip> </md-button> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.onPreviousChange()\"> <md-icon class=\"kd-logs-icon\">{{ctrl.logsService.getPrevious() ? \\'exposure_neg_1\\' : \\'exposure_zero\\'}}</md-icon> <md-tooltip ng-if=\"ctrl.logsService.getPrevious()\" md-delay=\"500\" md-autohide> Show current logs </md-tooltip> <md-tooltip ng-if=\"!ctrl.logsService.getPrevious()\" md-delay=\"500\" md-autohide> Show previous logs </md-tooltip> </md-button> <md-button class=\"kd-logs-toolbar-button\" ng-click=\"ctrl.downloadLog()\"> <md-icon class=\"kd-logs-icon\">file_download</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Download logs </md-tooltip> </md-button> </div> </kd-title> <kd-content> <md-virtual-repeat-container class=\"kd-log-view\" ng-class=\"{\\'kd-logs-text-color-invert\\': ctrl.logsService.getInverted(),\\n                                            \\'kd-logs-text-color\\': !ctrl.logsService.getInverted()}\" md-top-index=\"ctrl.topIndex\"> <div md-virtual-repeat=\"item in ctrl.logsSet\" ng-class=\"{\\'kd-logs-element-compact\\': ctrl.logsService.getCompact(),\\n                      \\'kd-logs-element\\': !ctrl.logsService.getCompact()}\"> <span ng-bind-html=\"item\" class=\"kd-log-line\">&nbsp;</span> </div> </md-virtual-repeat-container> </kd-content> <kd-footer> <div layout=\"row\"> <span class=\"kd-logs-info\" ng-show=\"ctrl.logsSet.length > 1\"> Logs from {{ctrl.podLogs.info.fromDate | date : \"short\"}} to {{ctrl.podLogs.info.toDate | date : \"short\" }} UTC </span> <span flex></span> <div class=\"kd-list-pagination-buttons\"> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-click=\"ctrl.loadOldest()\"> <md-icon>first_page</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-click=\"ctrl.loadOlder()\"> <md-icon>chevron_left</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-click=\"ctrl.loadNewer()\"> <md-icon>chevron_right</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-click=\"ctrl.loadNewest()\"> <md-icon>last_page</md-icon> </md-button> </div> </div> </kd-footer> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"overview/overview.html\",' <kd-warnings warnings=\"::$ctrl.overview.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.overview.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these resources. (Does not count pods double because it is mentioned both in the pod list and its controller is mentioned in e.g. a replica set.)\" metrics=\"::$ctrl.overview.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <div class=\"kd-overview-section\" ng-if=\"::$ctrl.shouldShowWorkloadsSection()\"> Workloads </div> <kd-content-card ng-if=\"::$ctrl.shouldShowWorkloadsSection()\"> <kd-title>Workloads Statuses</kd-title> <kd-content> <kd-workload-statuses resources-ratio=\"::$ctrl.resourcesRatio\"></kd-workload-statuses> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.cronJobList.items.length\"> <kd-content> <kd-cron-job-card-list cron-job-list=\"$ctrl.overview.cronJobList\" cron-job-list-resource=\"$ctrl.cronJobListResource\"> </kd-cron-job-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.daemonSetList.daemonSets.length\"> <kd-content> <kd-daemon-set-card-list daemon-set-list=\"$ctrl.overview.daemonSetList\" with-statuses=\"true\" daemon-set-list-resource=\"$ctrl.daemonSetListResource\"> </kd-daemon-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.deploymentList.deployments.length\"> <kd-content> <kd-deployment-card-list deployment-list=\"$ctrl.overview.deploymentList\" deployment-list-resource=\"$ctrl.deploymentListResource\"> </kd-deployment-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.jobList.jobs.length\"> <kd-content> <kd-job-card-list job-list=\"$ctrl.overview.jobList\" job-list-resource=\"$ctrl.jobListResource\"> </kd-job-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.podList.pods.length\"> <kd-content> <kd-pod-card-list pod-list=\"$ctrl.overview.podList\" pod-list-resource=\"$ctrl.podListResource\" with-statuses=\"true\"> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.replicaSetList.replicaSets.length\"> <kd-content> <kd-replica-set-card-list replica-set-list=\"$ctrl.overview.replicaSetList\" replica-set-list-resource=\"$ctrl.replicaSetListResource\"> </kd-replica-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.replicationControllerList.replicationControllers.length\"> <kd-content> <kd-replication-controller-card-list replication-controller-list=\"$ctrl.overview.replicationControllerList\" replication-controller-list-resource=\"$ctrl.rcListResource\"> </kd-replication-controller-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.statefulSetList.statefulSets.length\"> <kd-content> <kd-stateful-set-card-list stateful-set-list=\"$ctrl.overview.statefulSetList\" stateful-set-list-resource=\"$ctrl.statefulSetListResource\"> </kd-stateful-set-card-list> </kd-content> </kd-content-card> <div class=\"kd-overview-section\" ng-if=\"::$ctrl.shouldShowDiscoverySection()\"> Discovery and Load Balancing </div> <kd-content-card ng-if=\"$ctrl.overview.ingressList.items.length\"> <kd-content> <kd-ingress-card-list ingress-list=\"$ctrl.overview.ingressList\" with-statuses=\"true\" ingress-list-resource=\"$ctrl.kdIngressListResource\"> </kd-ingress-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.serviceList.services.length\"> <kd-content> <kd-service-card-list service-list=\"$ctrl.overview.serviceList\" with-statuses=\"true\" service-list-resource=\"$ctrl.kdServiceListResource\"> </kd-service-card-list> </kd-content> </kd-content-card> <div class=\"kd-overview-section\" ng-if=\"::$ctrl.shouldShowConfigSection()\"> Config and Storage </div> <kd-content-card ng-if=\"$ctrl.overview.configMapList.items.length\"> <kd-content> <kd-config-map-card-list config-map-list=\"$ctrl.overview.configMapList\" with-statuses=\"true\" config-map-list-resource=\"$ctrl.kdConfigMapListResource\"> </kd-config-map-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.persistentVolumeClaimList.items.length\"> <kd-content> <kd-persistent-volume-claim-card-list persistent-volume-claim-list=\"$ctrl.overview.persistentVolumeClaimList\" persistent-volume-claim-list-resource=\"$ctrl.pvcListResource\"> </kd-persistent-volume-claim-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.overview.secretList.secrets.length\"> <kd-content> <kd-secret-card-list secret-list=\"$ctrl.overview.secretList\" with-statuses=\"true\" secret-list-resource=\"$ctrl.kdSecretListResource\"> </kd-secret-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"search/search.html\",' <kd-warnings warnings=\"::$ctrl.search.errors\"></kd-warnings> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <kd-content-card ng-if=\"$ctrl.search.configMapList.items.length\"> <kd-content> <kd-config-map-card-list config-map-list=\"$ctrl.search.configMapList\" with-statuses=\"true\" config-map-list-resource=\"$ctrl.kdConfigMapListResource\"> </kd-config-map-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.daemonSetList.daemonSets.length\"> <kd-content> <kd-daemon-set-card-list daemon-set-list=\"$ctrl.search.daemonSetList\" with-statuses=\"true\" daemon-set-list-resource=\"$ctrl.daemonSetListResource\"> </kd-daemon-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.deploymentList.deployments.length\"> <kd-content> <kd-deployment-card-list deployment-list=\"$ctrl.search.deploymentList\" deployment-list-resource=\"$ctrl.deploymentListResource\"> </kd-deployment-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.ingressList.items.length\"> <kd-content> <kd-ingress-card-list ingress-list=\"$ctrl.search.ingressList\" with-statuses=\"true\" ingress-list-resource=\"$ctrl.kdIngressListResource\"> </kd-ingress-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.jobList.jobs.length\"> <kd-content> <kd-job-card-list job-list=\"$ctrl.search.jobList\" job-list-resource=\"$ctrl.jobListResource\"> </kd-job-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.namespaceList.namespaces.length\"> <kd-content> <kd-namespace-card-list namespace-list=\"$ctrl.search.namespaceList\" with-statuses=\"true\" namespace-list-resource=\"$ctrl.kdNamespaceListResource\"> </kd-namespace-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.nodeList.nodes.length\"> <kd-content> <kd-node-card-list node-list=\"$ctrl.search.nodeList\" with-statuses=\"true\" node-list-resource=\"$ctrl.kdNodeListResource\"> </kd-node-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.persistentVolumeList.items.length\"> <kd-content> <kd-persistent-volume-card-list persistent-volume-list=\"$ctrl.search.persistentVolumeList\" with-statuses=\"true\" persistent-volume-list-resource=\"$ctrl.kdPersistentVolumeListResource\"> </kd-persistent-volume-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.persistentVolumeClaimList.items.length\"> <kd-content> <kd-persistent-volume-claim-card-list persistent-volume-claim-list=\"$ctrl.search.persistentVolumeClaimList\" persistent-volume-claim-list-resource=\"$ctrl.pvcListResource\"> </kd-persistent-volume-claim-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.podList.pods.length\"> <kd-content> <kd-pod-card-list pod-list=\"$ctrl.search.podList\" pod-list-resource=\"$ctrl.podListResource\" with-statuses=\"true\"> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.replicaSetList.replicaSets.length\"> <kd-content> <kd-replica-set-card-list replica-set-list=\"$ctrl.search.replicaSetList\" replica-set-list-resource=\"$ctrl.replicaSetListResource\"> </kd-replica-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.replicationControllerList.replicationControllers.length\"> <kd-content> <kd-replication-controller-card-list replication-controller-list=\"$ctrl.search.replicationControllerList\" replication-controller-list-resource=\"$ctrl.rcListResource\"> </kd-replication-controller-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.roleList.items.length\"> <kd-content> <kd-role-card-list role-list=\"$ctrl.search.roleList\" with-statuses=\"false\" role-list-resource=\"$ctrl.kdRoleListResource\"> </kd-role-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.secretList.secrets.length\"> <kd-content> <kd-secret-card-list secret-list=\"$ctrl.search.secretList\" with-statuses=\"true\" secret-list-resource=\"$ctrl.kdSecretListResource\"> </kd-secret-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.serviceList.services.length\"> <kd-content> <kd-service-card-list service-list=\"$ctrl.search.serviceList\" with-statuses=\"true\" service-list-resource=\"$ctrl.kdServiceListResource\"> </kd-service-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.statefulSetList.statefulSets.length\"> <kd-content> <kd-stateful-set-card-list stateful-set-list=\"$ctrl.search.statefulSetList\" stateful-set-list-resource=\"$ctrl.statefulSetListResource\"> </kd-stateful-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.search.storageClassList.storageClasses.length\"> <kd-content> <kd-storage-class-card-list storage-class-list=\"$ctrl.search.storageClassList\" with-statuses=\"true\" storage-class-list-resource=\"$ctrl.kdStorageClassListResource\"> </kd-storage-class-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"settings/settings.html\",' <kd-content-card> <kd-title>Global settings</kd-title> <kd-content> <form name=\"$ctrl.globalForm\" ng-submit=\"$ctrl.saveGlobal(false)\"> <kd-settings-entry key=\"Cluster name\" desc=\"Cluster name appears in the browser window title if it is set\"> <md-input-container md-no-float> <input placeholder=\"Cluster name\" type=\"text\" aria-label=\"clusterName\" ng-model=\"$ctrl.global.clusterName\"> </md-input-container> </kd-settings-entry> <kd-settings-entry key=\"Items per page\" desc=\"Max number of items that can be displayed on each list page\"> <md-slider-container> <md-slider md-discrete flex min=\"5\" max=\"50\" step=\"5\" ng-model=\"$ctrl.global.itemsPerPage\" aria-label=\"itemsPerPage\"> </md-slider> <div class=\"kd-slider-value\">{{$ctrl.global.itemsPerPage}}</div> </md-slider-container> </kd-settings-entry> <kd-settings-entry key=\"Auto-refresh time interval\" desc=\"Number of seconds between every auto-refresh of logs\"> <md-slider-container> <md-slider md-discrete flex min=\"1\" max=\"10\" step=\"1\" ng-model=\"$ctrl.global.autoRefreshTimeInterval\" aria-label=\"autoRefreshTimeInterval\"> </md-slider> <div class=\"kd-slider-value\">{{$ctrl.global.autoRefreshTimeInterval}}</div> </md-slider-container> </kd-settings-entry> <div class=\"kd-settings-control-panel\"> <md-button class=\"md-raised md-primary\" type=\"submit\" ng-disabled=\"$ctrl.globalForm.$pristine\"> Save </md-button> </div> </form> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"shell/shell.html\",' <kd-content-card class=\"kd-shell-content-card\"> <kd-title class=\"kd-shell-title\"> Shell in <md-select class=\"kd-shell-toolbar-select\" aria-label=\"container\" ng-model=\"ctrl.container\" md-on-close=\"ctrl.onContainerChange(ctrl.container)\" required> <md-option ng-repeat=\"item in ctrl.containers\" ng-value=\"item\"> <span class=\"kd-shell-toolbar-text\">{{::item}}</span> </md-option> </md-select> in {{ctrl.podName}} </kd-title> <kd-content> <div class=\"kd-shell-term\" id=\"kd-shell-term\" term-open=\"ctrl.openTerminal()\"></div> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"workloads/workloads.html\",' <kd-warnings warnings=\"::$ctrl.workloads.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.workloads.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these resources. (Does not count pods double because it is mentioned both in the pod list and its controller is mentioned in e.g. a replica set.)\" metrics=\"::$ctrl.workloads.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card ng-if=\"$ctrl.workloads.cronJobList.items.length\"> <kd-content> <kd-cron-job-card-list cron-job-list=\"$ctrl.workloads.cronJobList\" cron-job-list-resource=\"$ctrl.cronJobListResource\"> </kd-cron-job-card-list> </kd-content> </kd-content-card> <div ng-if=\"!$ctrl.shouldShowZeroState()\"> <kd-content-card ng-if=\"$ctrl.workloads.daemonSetList.daemonSets.length\"> <kd-content> <kd-daemon-set-card-list daemon-set-list=\"$ctrl.workloads.daemonSetList\" with-statuses=\"true\" daemon-set-list-resource=\"$ctrl.daemonSetListResource\"> </kd-daemon-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.deploymentList.deployments.length\"> <kd-content> <kd-deployment-card-list deployment-list=\"$ctrl.workloads.deploymentList\" deployment-list-resource=\"$ctrl.deploymentListResource\"> </kd-deployment-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.jobList.jobs.length\"> <kd-content> <kd-job-card-list job-list=\"$ctrl.workloads.jobList\" job-list-resource=\"$ctrl.jobListResource\"> </kd-job-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.podList.pods.length\"> <kd-content> <kd-pod-card-list pod-list=\"$ctrl.workloads.podList\" pod-list-resource=\"$ctrl.podListResource\" with-statuses=\"true\"> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.replicaSetList.replicaSets.length\"> <kd-content> <kd-replica-set-card-list replica-set-list=\"$ctrl.workloads.replicaSetList\" replica-set-list-resource=\"$ctrl.replicaSetListResource\"> </kd-replica-set-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.replicationControllerList.replicationControllers.length\"> <kd-content> <kd-replication-controller-card-list replication-controller-list=\"$ctrl.workloads.replicationControllerList\" replication-controller-list-resource=\"$ctrl.rcListResource\"> </kd-replication-controller-card-list> </kd-content> </kd-content-card> <kd-content-card ng-if=\"$ctrl.workloads.statefulSetList.statefulSets.length\"> <kd-content> <kd-stateful-set-card-list stateful-set-list=\"$ctrl.workloads.statefulSetList\" stateful-set-list-resource=\"$ctrl.statefulSetListResource\"> </kd-stateful-set-card-list> </kd-content> </kd-content-card> </div> <kd-content-card ng-if=\"$ctrl.shouldShowZeroState()\"> <kd-content> <kd-zero-state></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/controlpanel/controlpanel.html\",' <div class=\"kd-control-panel-container\" ng-if=\"$ctrl.isHttpsMode()\"> <span class=\"kd-control-panel-separator\">|</span> <md-menu md-position-mode=\"target-right target\"> <md-button class=\"md-icon-button\" ng-click=\"$mdMenu.open($event)\"> <i class=\"material-icons\">account_circle</i> <svg class=\"kd-cross-style\" ng-if=\"$ctrl.isAuthSkipped()\" width=\"40px\" height=\"40px\" viewBox=\"0 0 40 40\"> <line class=\"kd-cross-line-white\" x1=\"10\" x2=\"30\" y1=\"10\" y2=\"30\"/> <line class=\"kd-cross-line-blue\" x1=\"10\" x2=\"30\" y1=\"10\" y2=\"30\"/> </svg> <md-tooltip md-delay=\"500\" md-autohide> Control panel </md-tooltip> </md-button> <md-menu-content width=\"4\"> <md-menu-item> <md-button disabled=\"disabled\" aria-label=\"Control panel\"> <div class=\"kd-auth-status\" ng-if=\"$ctrl.isLoginStatusLoaded\"> {{$ctrl.getAuthStatus()}} </div> <md-progress-circular class=\"kd-auth-status-spinner\" ng-if=\"!$ctrl.isLoginStatusLoaded\" md-diameter=\"24\"> </md-progress-circular> </md-button> </md-menu-item> <md-menu-divider ng-if=\"$ctrl.isLoggedIn() || $ctrl.isAuthSkipped()\"></md-menu-divider> <md-menu-item ng-if=\"$ctrl.isLoggedIn()\"> <md-button ng-click=\"$ctrl.logout()\"> Sign out </md-button> </md-menu-item> <md-menu-item ng-if=\"$ctrl.isAuthSkipped()\"> <md-button ng-click=\"$ctrl.logout()\"> Sign in </md-button> </md-menu-item> </md-menu-content> </md-menu> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/nav/hamburger.html\",' <md-button ng-click=\"$ctrl.toggle()\" class=\"md-icon-button\"> <md-icon md-font-library=\"material-icons\">menu</md-icon> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/nav/nav.html\",' <md-sidenav md-is-locked-open=\"$ctrl.isVisible()\" class=\"kd-nav\" layout=\"column\"> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.cluster}}\">Cluster</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.namespace}}\">Namespaces</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.node}}\">Nodes</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.persistentVolume}}\">Persistent Volumes</kd-nav-item> <kd-role-nav states=\"$ctrl.states\"></kd-role-nav> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.storageClass}}\">Storage Classes</kd-nav-item> </div> <div class=\"kd-nav-group-divider\"></div> <kd-namespace-select></kd-namespace-select> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.overview}}\">Overview</kd-nav-item> </div> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.workload}}\">Workloads</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.cronJob}}\">Cron Jobs</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.daemonSet}}\">Daemon Sets</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.deployment}}\">Deployments</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.job}}\">Jobs</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.pod}}\">Pods</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.replicaSet}}\">Replica Sets</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.replicationController}}\">Replication Controllers</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.statefulSet}}\">Stateful Sets</kd-nav-item> </div> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.discovery}}\">Discovery and Load Balancing</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.ingress}}\">Ingresses</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.service}}\">Services</kd-nav-item> </div> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.config}}\">Config and Storage</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.configMap}}\">Config Maps</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.persistentVolumeClaim}}\">Persistent Volume Claims</kd-nav-item> <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.secret}}\">Secrets</kd-nav-item> </div> <div class=\"kd-nav-group-divider\"></div> <div class=\"kd-nav-group\"> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.settings}}\">Settings</kd-nav-item> <kd-nav-item class=\"kd-nav-group-item\" state=\"{{::$ctrl.states.about}}\">About</kd-nav-item> </div> </md-sidenav> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/nav/navitem.html\",' <md-button ng-href=\"{{$ctrl.getHref()}}\" ng-if=\"::$ctrl.getHref()\" class=\"kd-nav-item-button\" ng-class=\"{\\'kd-nav-item-active\\': $ctrl.isActive()}\"> <span ng-transclude></span> </md-button> <span ng-transclude ng-if=\"::!$ctrl.getHref()\" class=\"kd-nav-item-button\"></span> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/nav/rolenav.html\",' <kd-nav-item class=\"kd-nav-item\" state=\"{{::$ctrl.states.role}}\" ng-if=\"$ctrl.isVisible\"> Roles </kd-nav-item> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"chrome/search/search.html\",' <form class=\"kd-search\" ng-submit=\"$ctrl.submit()\"> <md-icon class=\"kd-search-icon\" type=\"submit\">search</md-icon> <input type=\"search\" placeholder=\"Search\" ng-model=\"$ctrl.query\" ui-keydown=\"{esc: \\'$ctrl.clear()\\'}\" required> <md-icon class=\"kd-search-icon\" ng-click=\"$ctrl.clear()\" ng-show=\"$ctrl.query\"> close </md-icon> </form> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/namespace/dialog.html\",' <md-dialog aria-label=\"Change namespace?\" layout=\"column\"> <md-dialog-content layout-padding> <h4 class=\"md-title\">Change namespace?</h4> <div class=\"kd-namespace-change-dialog-text\">Selected resource is in a different namespace than currently selected.</div> <div class=\"kd-namespace-change-dialog-text\"> Do you want to change namespace from <i>{{ $ctrl.currentNamespace()}}</i> to <i>{{::$ctrl.newNamespace}}</i>? </div> <md-dialog-actions layout=\"row\"> <md-button ng-click=\"$ctrl.changeNamespace()\" class=\"md-primary\">Yes</md-button> <md-button ng-click=\"$ctrl.cancel()\">No</md-button> </md-dialog-actions> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/namespace/namespaceselect.html\",' <div class=\"kd-namespace-select-title\">Namespace</div> <md-input-container md-no-float class=\"kd-namespace-select-input-container\"> <md-select ng-model=\"$ctrl.selectedNamespace\" md-on-open=\"$ctrl.loadNamespacesIfNeeded()\" md-on-close=\"$ctrl.changeNamespace()\" class=\"kd-namespace-select\" aria-label=\"Selector for namespaces\" md-container-class=\"kd-namespace-select-container\" md-selected-text=\"$ctrl.formatNamespace()\"> <md-select-header class=\"kd-namespace-select-input-header\" ng-class=\"{\\'kd-namespace-select-input-header-border\\': $ctrl.namespaces.length}\"> <md-input-container md-no-float> <input placeholder=\"Select namespace...\" ng-model=\"$ctrl.namespaceInput\" class=\"kd-namespace-select-input\" ng-keyup=\"$event.keyCode == 13 ? $ctrl.selectNamespace() : null\"> </md-input-container> </md-select-header> <md-option ng-value=\"::$ctrl.ALL_NAMESPACES\" ng-if=\"$ctrl.namespaces.length\"> All namespaces </md-option> <md-optgroup ng-if=\"$ctrl.namespaces.length\"> <label>Namespaces</label> <md-option ng-value=\"namespace\" ng-repeat=\"namespace in $ctrl.namespaces | filter:$ctrl.namespaceInput\"> {{::namespace}} </md-option> </md-optgroup> </md-select> </md-input-container> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/pagination/pagination.html\",' <div> <div class=\"kd-list-pagination-label\"> {{ range.lower }} - {{ range.upper }} of {{ range.total}} </div> <div class=\"kd-list-pagination-buttons\"> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-if=\"boundaryLinks\" ng-click=\"setCurrent(1)\" ng-disabled=\"pagination.current == 1\"> <md-icon>first_page</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-if=\"directionLinks\" ng-click=\"setCurrent(pagination.current - 1)\" ng-disabled=\"pagination.current == 1\"> <md-icon>chevron_left</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-if=\"directionLinks\" ng-disabled=\"pagination.current == pagination.last\" ng-click=\"setCurrent(pagination.current + 1)\"> <md-icon>chevron_right</md-icon> </md-button> <md-button class=\"md-icon-button md-button md-ink-ripple\" ng-if=\"boundaryLinks\" ng-disabled=\"pagination.current == pagination.last\" ng-click=\"setCurrent(pagination.last)\"> <md-icon>last_page</md-icon> </md-button> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/resource/deleteresource.html\",' <md-dialog aria-label=\"Delete a {{::$ctrl.resourceKindName}}\" layout=\"column\"> <md-dialog-content layout-padding> <h4 class=\"md-title\">Delete a {{::$ctrl.resourceKindName}}</h4> <div ng-if=\"::$ctrl.objectMeta.namespace\"> Are you sure you want to delete {{::$ctrl.resourceKindName}} <i>{{::$ctrl.objectMeta.name}}</i> in namespace <i>{{::$ctrl.objectMeta.namespace}}</i>? </div> <div ng-if=\"::!$ctrl.objectMeta.namespace\"> Are you sure you want to delete {{::$ctrl.resourceKindName}} <i>{{::$ctrl.objectMeta.name}}</i>? </div> <md-dialog-actions> <md-button class=\"md-primary kd-cancel-btn\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> <md-button class=\"md-primary kd-delete-btn\" ng-click=\"$ctrl.remove()\"> Delete </md-button> </md-dialog-actions> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/resource/editresource.html\",' <md-dialog aria-label=\"Edit a {{::$ctrl.resourceKindName}}\" layout=\"column\" class=\"kd-edit-dialog\"> <md-dialog-content layout-padding class=\"kd-json-edit-dialog-content\"> <h4 class=\"md-title\">Edit a {{::$ctrl.resourceKindName}}</h4> <kd-text-input input-data=\"$ctrl.data\" class=\"kd-edit-dialog-text-input\"> </kd-text-input> <md-dialog-actions> <md-button class=\"md-primary kd-cancel-btn\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> <md-button class=\"md-primary kd-copy-btn\" ng-click=\"$ctrl.copy()\"> Copy </md-button> <md-button class=\"md-primary kd-delete-btn\" ng-click=\"$ctrl.update()\"> Update </md-button> </md-dialog-actions> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/scaling/scaleresource.html\",' <md-dialog aria-label=\"Scale a {{::$ctrl.resourceKindDisplayName}}\" layout=\"column\"> <md-dialog-content layout-padding> <h4 class=\"md-title\">Scale a {{::$ctrl.resourceKindDisplayName}}</h4> <div> <br>Resource {{::$ctrl.resourceName}} will be updated to reflect the desired count.<br> {{$ctrl.getCurrentPods()}},{{$ctrl.getDesiredPods()}} </div> <div> <md-input-container class=\"md-block\"> <div ng-if=\"!$ctrl.isJob()\"> <label>Desired number of pods</label> </div> <div ng-if=\"$ctrl.isJob()\"> <label>Desired degree of parallelism for Job</label> </div> <input name=\"DesiredPods\" aria-label=\"Desired Pods\" type=\"number\" kd-validate=\"integer\" min=\"0\" ng-model=\"$ctrl.desiredPods\" required kd-warn-threshold=\"100\" kd-warn-threshold-bind=\"showWarning\"> <ng-messages for=\"ctrl.updateReplicasForm.podCount.$error\" role=\"alert\"> <ng-message when=\"required\">Number of pods is required. </ng-message> <ng-message when=\"number,kdValidInteger\">Number of replicas must be equal to or greater than zero. </ng-message> </ng-messages> <span class=\"kd-warn-threshold\" ng-show=\"showWarning\"> Setting high number of pods may cause performance issues of the cluster and Dashboard UI. </span> </md-input-container> </div> <md-dialog-actions> <md-button class=\"md-primary kd-cancel-btn\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> <md-button class=\"md-primary kd-submit-btn\" ng-click=\"$ctrl.scaleResource()\"> OK </md-button> </md-dialog-actions> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Config Map\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/detail/detail.html\",' <div layout=\"column\"> <kd-config-map-info config-map=\"$ctrl.configMapDetail\"></kd-config-map-info> <kd-info-card> <kd-info-card-header>Data</kd-info-card-header> <kd-info-card-section ng-if=\"$ctrl.configMapDetail.data\"> <kd-info-card-entry ng-repeat=\"(key, value) in $ctrl.configMapDetail.data\" title=\"{{key}}\"> <pre class=\"kd-pre-block\">{{value}}</pre> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section class=\"kd-config-map-zero-state\" ng-if=\"!$ctrl.configMapDetail.data\"> <kd-zero-state> <kd-zero-state-title>There is no data to display</kd-zero-state-title> <kd-zero-state-text>You can edit config map to add data.</kd-zero-state-text> </kd-zero-state> </kd-info-card-section> </kd-info-card> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.configMap.objectMeta\"> </kd-object-meta-info-card> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.configMap.objectMeta\" type-meta=\"$ctrl.configMap.typeMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getConfigMapDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.configMap.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.configMap.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.configMap.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.configMap.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.configMap.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Config Map\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Config Map\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.configMapList\" list-resource=\"$ctrl.configMapListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Config Maps </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.configMapList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Config Maps to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.configMapList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-config-map-card dir-paginate=\"configMap in $ctrl.configMapList.items | itemsPerPage: default\" config-map=\"configMap\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"::$ctrl.configMapList.listMeta.totalItems\"> </kd-config-map-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"configmap/list/list.html\",' <kd-warnings warnings=\"::$ctrl.configMapList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-config-map-card-list config-map-list=\"$ctrl.configMapList\" config-map-list-resource=\"$ctrl.configMapListResource\"> </kd-config-map-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Cron Job\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.cronJobDetail.errors\"></kd-warnings> <kd-cron-job-info cron-job=\"::ctrl.cronJobDetail\"></kd-cron-job-info> <kd-content-card> <kd-content> <kd-job-card-list job-list=\"ctrl.cronJobDetail.activeJobs\" job-list-resource=\"ctrl.jobListResource\"> <kd-header>Active Jobs</kd-header> <kd-empty-list-text> There are currently no Jobs managed by this Cron Job. </kd-empty-list-text> </kd-job-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-job-card-list job-list=\"ctrl.cronJobDetail.inactiveJobs\" job-list-resource=\"ctrl.jobListResource\"> <kd-header>Inactive Jobs</kd-header> <kd-empty-list-text> There are currently no inactive Jobs managed by this Cron Job. </kd-empty-list-text> </kd-job-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.cronJobDetail.events\" event-list-resource=\"::ctrl.eventsResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.cronJob.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Schedule\"> <span>{{::$ctrl.cronJob.schedule}}</span> <span ng-hide=\"::$ctrl.cronJob.schedule\">-</span> </kd-info-card-entry> <kd-info-card-entry title=\"Active\"> {{::$ctrl.cronJob.active}} </kd-info-card-entry> <kd-info-card-entry title=\"Suspend\"> {{::$ctrl.cronJob.suspend}} </kd-info-card-entry> <kd-info-card-entry title=\"Last Schedule\"> <span ng-if=\"::$ctrl.cronJob.lastSchedule\">{{::$ctrl.cronJob.lastSchedule | relativeTime}}</span> <span ng-if=\"::!$ctrl.cronJob.lastSchedule\">-</span> </kd-info-card-entry> <kd-info-card-entry title=\"Concurrency Policy\"> <span>{{::$ctrl.cronJob.concurrencyPolicy}}</span> <span ng-hide=\"::$ctrl.cronJob.concurrencyPolicy\">-</span> </kd-info-card-entry> <kd-info-card-entry title=\"Starting Deadline Seconds\"> <span>{{::$ctrl.cronJob.startingDeadlineSeconds}}</span> <span ng-hide=\"::$ctrl.cronJob.startingDeadlineSeconds\">-</span> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.cronJob.objectMeta\" type-meta=\"$ctrl.cronJob.typeMeta\"> <kd-resource-card-status layout=\"row\" ng-switch=\"$ctrl.cronJob.suspend\"> <md-icon class=\"material-icons kd-error\" ng-switch-when=\"true\"> error <md-tooltip md-delay=\"500\" md-autohide> Cron Job is suspended </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-switch-default> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getCronJobDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.cronJob.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div>Cron Job</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.cronJob.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.cronJob.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span>{{::$ctrl.cronJob.schedule}}</span> <span ng-if=\"::!$ctrl.cronJob.schedule\">-</span> </kd-resource-card-column> <kd-resource-card-column> {{::!!$ctrl.cronJob.suspend}} </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.cronJob.active}} </kd-resource-card-column> <kd-resource-card-column> <span ng-if=\"::$ctrl.cronJob.lastSchedule\">{{::$ctrl.cronJob.lastSchedule | relativeTime}}</span> <span ng-if=\"::!$ctrl.cronJob.lastSchedule\">-</span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.cronJob.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.getCreatedAtTooltip($ctrl.cronJob.objectMeta.creationTimestamp)}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-trigger-menu-item cron=\"$ctrl.cronJob\"> </kd-resource-card-trigger-menu-item> <kd-resource-card-delete-menu-item resource-kind-name=\"Cron Job\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Cron Job\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.cronJobList\" list-resource=\"::$ctrl.cronJobListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Cron Jobs </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.cronJobList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Cron Jobs to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.cronJobList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Schedule </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Suspend </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Active </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Last Schedule </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-cron-job-card pagination-id=\"{{::$ctrl.getSelectId()}}\" dir-paginate=\"cronJob in $ctrl.cronJobList.items | itemsPerPage: default\" cron-job=\"cronJob\" show-resource-kind=\"::$ctrl.showResourceKind\" total-items=\"::$ctrl.cronJobList.listMeta.totalItems\"> </kd-cron-job-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"cronjob/list/list.html\",' <kd-warnings warnings=\"::$ctrl.cronJobList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-cron-job-card-list cron-job-list=\"$ctrl.cronJobList\" cron-job-list-resource=\"$ctrl.cronJobListResource\"> </kd-cron-job-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/detail/actionbar.html\",' <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-actionbar-detail-buttons resource-kind-name=\"Daemon Set\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.daemonSetDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.daemonSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this daemon set.\" metrics=\"::ctrl.daemonSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-daemon-set-info daemon-set=\"::ctrl.daemonSetDetail\"></kd-daemon-set-info> <kd-content-card> <kd-content> <kd-service-card-list service-list=\"::ctrl.daemonSetDetail.serviceList\" service-list-resource=\"::ctrl.daemonSetServicesResource\"> <kd-empty-list-text> There are currently no Services with the same label selector as this Daemon Set. </kd-empty-list-text> </kd-service-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::ctrl.daemonSetDetail.podList\" pod-list-resource=\"::ctrl.daemonSetPodsResource\" with-statuses=\"true\"> <kd-empty-list-text> There are currently no Pods scheduled on this Daemon Set. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.daemonSetDetail.eventList\" event-list-resource=\"::ctrl.daemonSetEventsResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.daemonSet.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Images\"> <div ng-repeat=\"image in $ctrl.daemonSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in $ctrl.daemonSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Pods\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.daemonSet.podInfo.current}} created, {{::$ctrl.daemonSet.podInfo.desired}} desired </div> <div ng-if=\"$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.daemonSet.podInfo.running}} running </div> </kd-info-card-entry> <kd-info-card-entry title=\"Pods status\" ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"::$ctrl.daemonSet.podInfo.pending\" class=\"kd-comma-separated-item\"> {{::$ctrl.daemonSet.podInfo.pending}} pending </div> <div ng-if=\"::$ctrl.daemonSet.podInfo.failed\" class=\"kd-comma-separated-item\"> {{::$ctrl.daemonSet.podInfo.failed}} failed</div> <div ng-if=\"::$ctrl.daemonSet.podInfo.running\" class=\"kd-comma-separated-item\"> {{::$ctrl.daemonSet.podInfo.running}} running </div> </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/list/card.html\",' <kd-resource-card object-meta=\"::$ctrl.daemonSet.objectMeta\" type-meta=\"::$ctrl.daemonSet.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors. </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state. </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <a ng-href=\"{{::$ctrl.getDaemonSetDetailHref()}}\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.daemonSet.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div>Daemon Set</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.daemonSet.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.daemonSet.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span> {{::$ctrl.daemonSet.pods.running}} / {{::$ctrl.daemonSet.pods.desired}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.daemonSet.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.daemonSet.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.daemonSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.daemonSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.daemonSet.objectMeta\" resource-kind-name=\"::$ctrl.daemonSet.typeMeta.kind\"> </kd-logs-button> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Daemon Set\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Daemon Set\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.daemonSet.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/list/cardlist.html\",' <kd-resource-card-list selectable=\"::$ctrl.selectable\" with-statuses=\"::$ctrl.withStatuses\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.daemonSetList\" list-resource=\"$ctrl.daemonSetListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Daemon Sets </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.daemonSetList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Daemon Sets to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.daemonSetList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\" size=\"small\" grow=\"2\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-daemon-set-card dir-paginate=\"daemonSet in $ctrl.daemonSetList.daemonSets | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"::$ctrl.daemonSetList.listMeta.totalItems\" daemon-set=\"daemonSet\" show-resource-kind=\"::$ctrl.showResourceKind\"> </kd-daemon-set-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"daemonset/list/list.html\",' <kd-warnings warnings=\"::ctrl.daemonSetList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.daemonSetList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these daemon sets.\" metrics=\"::ctrl.daemonSetList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-daemon-set-card-list daemon-set-list=\"::ctrl.daemonSetList\" daemon-set-list-resource=\"::ctrl.daemonSetListResource\" with-statuses=\"true\"> </kd-daemon-set-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromfile/deployfromfile.html\",' <div class=\"kd-deploy-from-file-info\"> <span ng-show=\"$ctrl.areMultipleNamespacesSelected()\"> Select YAML or JSON file specifying the resources to deploy to the namespace specified in the file. </span> <span ng-hide=\"$ctrl.areMultipleNamespacesSelected()\"> Select YAML or JSON file specifying the resources to deploy to the currently selected namespace. </span> <a href=\"http://kubernetes.io/docs/user-guide/deploying-applications/\" target=\"_blank\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </div> <form name=\"$ctrl.form\" ng-submit=\"$ctrl.deploy()\"> <kd-upload-file on-load=\"$ctrl.onFileLoad(file)\" label=\"Choose YAML or JSON file\"> </kd-upload-file> <md-button class=\"md-raised md-primary kd-deploy-from-file-button\" type=\"submit\" ng-disabled=\"$ctrl.isDeployDisabled()\"> Upload </md-button> <md-button class=\"md-primary\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> </form> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfrominput/deployfrominput.html\",' <div class=\"kd-deploy-from-input-info\"> <span ng-show=\"$ctrl.areMultipleNamespacesSelected()\"> Enter YAML or JSON content specifying the resources to deploy to the namespace specified in the file. </span> <span ng-hide=\"$ctrl.areMultipleNamespacesSelected()\"> Enter YAML or JSON content specifying the resources to deploy to the currently selected namespace. </span> <a href=\"http://kubernetes.io/docs/user-guide/deploying-applications/\" target=\"_blank\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </div> <kd-text-input input-data=\"$ctrl.inputData\"></kd-text-input> <md-button class=\"md-raised md-primary kd-deploy-from-input-button\" ng-click=\"$ctrl.deploy()\" ng-disabled=\"$ctrl.isDeployDisabled()\"> Upload </md-button> <md-button class=\"md-primary\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/deployfromsettings.html\",' <form name=\"$ctrl.form\" ng-submit=\"$ctrl.deploy()\" novalidate> <kd-help-section> <md-input-container class=\"md-block\" md-is-error=\"$ctrl.isNameError()\"> <label>App name</label> <div> <input ng-model=\"$ctrl.name\" name=\"name\" namespace=\"$ctrl.namespace\" required ng-pattern=\"$ctrl.namePattern\" ng-model-options=\"{ updateOn: \\'default blur\\', debounce: { \\'default\\': 500, \\'blur\\': 0 } }\" kd-unique-name md-maxlength=\"{{$ctrl.nameMaxLength}}\"> <md-progress-linear class=\"kd-deploy-form-progress\" md-mode=\"indeterminate\" ng-class=\"{\\'kd-deploy-form-progress-show\\': $ctrl.form.name.$pending}\"> </md-progress-linear> <ng-messages for=\"$ctrl.form.name.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"required\">Application name is required.</ng-message> <ng-message when=\"uniqueName\"> Deployment or service with this name already exists within namespace. <i>{{$ctrl.namespace}}</i>. </ng-message> <ng-message when=\"pattern\"> Application name must start with a lowercase letter and contain only lowercase letters, numbers, and \\'-\\' between words. </ng-message> <ng-message when=\"md-maxlength\"> Name must be up to {{ $ctrl.nameMaxLength}} characters long. </ng-message> </ng-messages> </div> </md-input-container> <kd-user-help> An \\'app\\' label with this value will be added to the Deployment and Service that get deployed. <a href=\"http://kubernetes.io/docs/user-guide/labels/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <md-input-container class=\"md-block\"> <label>Container image</label> <input ng-model=\"$ctrl.containerImage\" name=\"containerImage\" required ng-model-options=\"{ updateOn: \\'default blur\\', debounce: { \\'default\\': 500, \\'blur\\': 0 } }\" kd-valid-imagereference invalid-image-error-message=\"$ctrl.containerImageErrorMessage\"> <ng-messages for=\"$ctrl.form.containerImage.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"required\"> Container image is required </ng-message> <ng-message when=\"validImageReference\"> Container image is invalid: {{ $ctrl.containerImageErrorMessage }} </ng-message> </ng-messages> </md-input-container> <kd-user-help> Enter the URL of a public image on any registry, or a private image hosted on Docker Hub or Google Container Registry. <a href=\"http://kubernetes.io/docs/user-guide/images/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <md-input-container class=\"md-block\"> <label>Number of pods</label> <input ng-model=\"$ctrl.replicas\" type=\"number\" required min=\"1\" name=\"replicas\" kd-validate=\"integer\" kd-warn-threshold=\"100\" kd-warn-threshold-bind=\"showWarning\"> <ng-messages for=\"$ctrl.form.replicas.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"required\"> Number of pods is required </ng-message> <ng-message when=\"number, kdValidInteger\"> Number of pods must be a positive integer </ng-message> <ng-message when=\"min\">Number of pods must be at least 1</ng-message> </ng-messages> <span class=\"kd-warn-threshold\" ng-show=\"showWarning\"> Setting high number of pods may cause performance issues of the cluster and Dashboard UI. </span> </md-input-container> <kd-user-help> A Deployment will be created to maintain the desired number of pods across your cluster. <a href=\"https://kubernetes.io/docs/concepts/workloads/controllers/deployment/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <kd-port-mappings port-mappings=\"$ctrl.portMappings\" protocols=\"$ctrl.protocols\" is-external=\"$ctrl.isExternal\"> </kd-port-mappings> <kd-user-help> Optionally, an internal or external Service can be defined to map an incoming Port to a target Port seen by the container. <span ng-if=\"$ctrl.name\"> The internal DNS name for this Service will be: <span class=\"kd-emphasized\">{{$ctrl.name}}</span>. </span> <a href=\"http://kubernetes.io/docs/user-guide/services/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <div ng-show=\"$ctrl.isMoreOptionsEnabled()\"> <kd-help-section> <md-input-container> <label>Description</label> <textarea ng-model=\"$ctrl.description\"></textarea> </md-input-container> <kd-user-help> The description will be added as an annotation to the Deployment and displayed in the application\\'s details. </kd-user-help> </kd-help-section> <kd-help-section> <div layout=\"column\"> <div class=\"kd-label-title md-body-2\">Labels</div> <div layout=\"row\" class=\"kd-label-header-row\"> <div flex=\"45\">Key</div> <div flex=\"5\"></div> <div flex=\"40\">Value</div> </div> <div ng-repeat=\"label in $ctrl.labels\"> <kd-deploy-label layout=\"row\" flex=\"auto\" label=\"label\" labels=\"$ctrl.labels\"> </kd-deploy-label> </div> </div> <kd-user-help> The specified labels will be applied to the created Deployment, Service (if any) and Pods. Common labels include release, environment, tier, partition and track. <a href=\"http://kubernetes.io/docs/user-guide/labels/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <md-input-container class=\"md-block\"> <label>Namespace</label> <md-select ng-model=\"$ctrl.namespace\" ng-click=\"$ctrl.resetImagePullSecret()\" required> <md-option ng-repeat=\"namespace in $ctrl.namespaces\" ng-value=\"namespace\"> {{namespace}} </md-option> <md-option ng-click=\"$ctrl.handleNamespaceDialog($event)\"> Create a new namespace... </md-option> </md-select> </md-input-container> <kd-user-help> Namespaces let you partition resources into logically named groups. <a href=\"http://kubernetes.io/docs/admin/namespaces/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <md-input-container class=\"md-block\"> <label>Image Pull Secret</label> <md-select ng-model=\"$ctrl.imagePullSecret\" ng-click=\"$ctrl.getSecrets($ctrl.namespace)\"> <md-option ng-repeat=\"secret in $ctrl.secrets\" ng-value=\"secret\"> {{secret}} </md-option> <md-option ng-click=\"$ctrl.handleCreateSecretDialog($event)\"> Create a new secret... </md-option> </md-select> </md-input-container> <kd-user-help> The specified image could require a pull secret credential if it is private. You may choose an existing secret or create a new one. <a href=\"http://kubernetes.io/docs/user-guide/secrets/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <div layout=\"row\"> <md-input-container flex=\"auto\"> <label>CPU requirement (cores)</label> <input ng-model=\"$ctrl.cpuRequirement\" type=\"number\" name=\"cpuRequirement\" min=\"0\"> <ng-messages for=\"$ctrl.form.cpuRequirement.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"number\"> CPU requirement must be given as a valid number. </ng-message> <ng-message when=\"min\"> CPU requirement must be given as a positive number. </ng-message> </ng-messages> </md-input-container> <div flex=\"5\"></div> <md-input-container flex=\"auto\"> <label>Memory requirement (MiB)</label> <input ng-model=\"$ctrl.memoryRequirement\" type=\"number\" name=\"memoryRequirement\" min=\"0\"> <ng-messages for=\"$ctrl.form.memoryRequirement.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"number\"> Memory requirement must be given as a valid number. </ng-message> <ng-message when=\"min\"> Memory requirement must be given as a positive number. </ng-message> </ng-messages> </md-input-container> </div> <kd-user-help> You can specify minimum CPU and memory requirements for the container. <a href=\"http://kubernetes.io/docs/admin/limitrange/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <div> <md-input-container class=\"md-block\"> <label>Run command</label> <input ng-model=\"$ctrl.containerCommand\"> </md-input-container> <md-input-container class=\"md-block\"> <label>Run command arguments</label> <input ng-model=\"$ctrl.containerCommandArgs\"> </md-input-container> </div> <kd-user-help> By default, your containers run the selected image\\'s default entrypoint command. You can use the command options to override the default. <a href=\"http://kubernetes.io/docs/user-guide/containers/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <div class=\"md-block\"> <md-checkbox ng-model=\"$ctrl.runAsPrivileged\" class=\"md-primary\"> Run as privileged </md-checkbox> </div> <kd-user-help> Processes in privileged containers are equivalent to processes running as root on the host. <a href=\"http://kubernetes.io/docs/user-guide/pods/#privileged-mode-for-pod-containers\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <kd-environment-variables variables=\"$ctrl.variables\"> </kd-environment-variables> <kd-user-help> Environment variables available for use in the container. Values can reference other variables using $(VAR_NAME) syntax. <a href=\"https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> </div> <div> <md-button class=\"md-primary kd-deploy-moreoptions-button\" type=\"button\" ng-click=\"$ctrl.switchMoreOptions()\" ng-hide=\"$ctrl.isMoreOptionsEnabled()\"> Show advanced options </md-button> <md-button class=\"md-primary kd-deploy-moreoptions-button\" type=\"button\" ng-click=\"$ctrl.switchMoreOptions()\" ng-show=\"$ctrl.isMoreOptionsEnabled()\"> Hide advanced options </md-button> </div> <md-button class=\"md-raised md-primary kd-deploy-submit-button\" type=\"submit\" ng-disabled=\"$ctrl.isDeployDisabled()\"> Deploy </md-button> <md-button class=\"md-primary kd-deploy-cancel-button\" ng-click=\"$ctrl.cancel()\"> Cancel </md-button> </form> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/detail/actionbar.html\",' <kd-scale-button resource-kind-display-name=\"Deployment\" resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\" current-pods=\"$ctrl.details.statusInfo.replicas\" desired-pods=\"$ctrl.details.statusInfo.available\"> </kd-scale-button> <kd-actionbar-detail-buttons resource-kind-name=\"Deployment\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.deploymentDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.deploymentDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this deployment.\" metrics=\"::ctrl.deploymentDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-deployment-info deployment=\"::ctrl.deploymentDetail\"></kd-deployment-info> <kd-content-card> <kd-content> <kd-replica-set-card-list replica-set-list=\"::ctrl.newReplicaSetList\"> <kd-header>New Replica Set</kd-header> <kd-empty-list-text> There are currently no new Replica Sets on this Deployment. </kd-empty-list-text> </kd-replica-set-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-replica-set-card-list replica-set-list=\"::ctrl.deploymentDetail.oldReplicaSetList\" replica-set-list-resource=\"::ctrl.oldReplicaSetListResource\"> <kd-header>Old Replica Sets</kd-header> <kd-empty-list-text> This Deployment does not have any old replica sets </kd-empty-list-text> </kd-replica-set-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-horizontal-pod-autoscaler-card-list horizontal-pod-autoscaler-list=\"::ctrl.deploymentDetail.horizontalPodAutoscalerList\"> <kd-empty-list-text> There are currently no Horizontal Pod Autoscalers targeting this Deployment. </kd-empty-list-text> </kd-horizontal-pod-autoscaler-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.deploymentDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.deployment.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Selector\"> <kd-labels labels=\"::$ctrl.deployment.selector\"></kd-labels> </kd-info-card-entry> <kd-info-card-entry title=\"Strategy\"> {{::$ctrl.deployment.strategy}} </kd-info-card-entry> <kd-info-card-entry title=\"Min ready seconds\"> {{::$ctrl.deployment.minReadySeconds}} </kd-info-card-entry> <kd-info-card-entry title=\"Revision history limit\"> <span ng-if=\"::$ctrl.deployment.revisionHistoryLimit\"> {{::$ctrl.deployment.revisionHistoryLimit}} </span> <span ng-if=\"::!$ctrl.deployment.revisionHistoryLimit\"> Not set </span> </kd-info-card-entry> <kd-info-card-entry title=\"Rolling update strategy\" ng-if=\"$ctrl.rollingUpdateStrategy()\"> Max surge: {{ $ctrl.deployment.rollingUpdateStrategy.maxSurge}}, Max unavailable: {{ $ctrl.deployment.rollingUpdateStrategy.maxUnavailable}} </kd-info-card-entry> <kd-info-card-entry title=\"Status\"> {{ $ctrl.deployment.statusInfo.updated}} updated, {{ $ctrl.deployment.statusInfo.replicas}} total, {{ $ctrl.deployment.statusInfo.available}} available, {{ $ctrl.deployment.statusInfo.unavailable}} unavailable </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/list/card.html\",' <kd-resource-card type-meta=\"$ctrl.deployment.typeMeta\" object-meta=\"$ctrl.deployment.objectMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getDeploymentDetailHref()}}\" style=\"display: block\"> <kd-middle-ellipsis display-string=\"{{$ctrl.deployment.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.deployment.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.deployment.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-replicase-card-pods-stat\"> {{::$ctrl.deployment.pods.running}} / {{::$ctrl.deployment.pods.desired}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.deployment.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.deployment.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.deployment.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.deployment.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-scale-button resource-kind-display-name=\"Deployment\" resource-kind-name=\"$ctrl.deployment.typeMeta.kind\" object-meta=\"$ctrl.deployment.objectMeta\" current-pods=\"$ctrl.deployment.pods.current\" desired-pods=\"$ctrl.deployment.pods.desired\" menu-item=\"true\"> </kd-scale-button> <kd-resource-card-delete-menu-item resource-kind-name=\"Deployment\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Deployment\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.deployment.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.deploymentList\" list-resource=\"::$ctrl.deploymentListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Deployments </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.deploymentList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Deployment to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.deploymentList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-deployment-card dir-paginate=\"deployment in $ctrl.deploymentList.deployments | itemsPerPage: default\" deployment=\"deployment\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"$ctrl.deploymentList.listMeta.totalItems\"> </kd-deployment-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deployment/list/list.html\",' <kd-warnings warnings=\"::$ctrl.deploymentList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.deploymentList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these deployments.\" metrics=\"::$ctrl.deploymentList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-deployment-card-list deployment-list=\"::$ctrl.deploymentList\" deployment-list-resource=\"::$ctrl.deploymentListResource\"> </kd-deployment-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Horizontal Pod Autoscaler\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/detail/detail.html\",' <div layout=\"column\"> <kd-horizontal-pod-autoscaler-info horizontal-pod-autoscaler=\"::$ctrl.horizontalPodAutoscalerDetail\"></kd-horizontal-pod-autoscaler-info> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/detail/info.html\",' <kd-info-card> <kd-info-card-section name=\"Details\"> <kd-object-meta-info-card object-meta=\"::$ctrl.horizontalPodAutoscaler.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Target\"> <a ng-href=\"{{::$ctrl.getScaleTargetHref()}}\"> {{::$ctrl.horizontalPodAutoscaler.scaleTargetRef.kind}}: {{::$ctrl.horizontalPodAutoscaler.scaleTargetRef.name}} </a> </kd-info-card-entry> <kd-info-card-entry title=\"Min Replicas\"> <div ng-show=\"::$ctrl.horizontalPodAutoscaler.minReplicas\">{{::$ctrl.horizontalPodAutoscaler.minReplicas}}</div> <div ng-hide=\"::$ctrl.horizontalPodAutoscaler.minReplicas\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Max Replicas\"> <div ng-show=\"::$ctrl.horizontalPodAutoscaler.maxReplicas\">{{::$ctrl.horizontalPodAutoscaler.maxReplicas}}</div> <div ng-hide=\"::$ctrl.horizontalPodAutoscaler.maxReplicas\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Target CPU Utilization\"> <div ng-show=\"::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage\">{{::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage}}%</div> <div ng-hide=\"::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Current Replicas\"> <div>{{::$ctrl.horizontalPodAutoscaler.currentReplicas}}</div> </kd-info-card-entry> <kd-info-card-entry title=\"Desired Replicas\"> <div>{{::$ctrl.horizontalPodAutoscaler.desiredReplicas}}</div> </kd-info-card-entry> <kd-info-card-entry title=\"Current CPU Utilization\"> <div>{{::$ctrl.horizontalPodAutoscaler.currentCPUUtilizationPercentage}}%</div> </kd-info-card-entry> <kd-info-card-entry title=\"Last Scaled\"> {{::$ctrl.horizontalPodAutoscaler.lastScaleTime | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.getLastScaledTooltip()}} </md-tooltip> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/list/card.html\",' <kd-resource-card object-meta=\"::$ctrl.horizontalPodAutoscaler.objectMeta\" type-meta=\"::$ctrl.horizontalPodAutoscaler.typeMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <a ng-href=\"{{::$ctrl.getHorizontalPodAutoscalerDetailHref()}}\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.horizontalPodAutoscaler.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.horizontalPodAutoscaler.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.showScaleTarget\"> <a ng-href=\"{{::$ctrl.getScaleTargetHref()}}\"> {{::$ctrl.horizontalPodAutoscaler.scaleTargetRef.kind}}: {{::$ctrl.horizontalPodAutoscaler.scaleTargetRef.name}} </a> </kd-resource-card-column> <kd-resource-card-column> <span ng-show=\"::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage\"> {{::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage}}% </span> <span ng-hide=\"::$ctrl.horizontalPodAutoscaler.targetCPUUtilizationPercentage\"> - </span> </kd-resource-card-column> <kd-resource-card-column> <span> {{::$ctrl.horizontalPodAutoscaler.currentCPUUtilizationPercentage}}% </span> </kd-resource-card-column> <kd-resource-card-column> <span> {{::$ctrl.horizontalPodAutoscaler.minReplicas}} </span> </kd-resource-card-column> <kd-resource-card-column> <span> {{::$ctrl.horizontalPodAutoscaler.maxReplicas}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.horizontalPodAutoscaler.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.horizontalPodAutoscaler.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Horizontal Pod Autoscaler\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Horizontal Pod Autoscaler\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/list/cardlist.html\",' <kd-resource-card-list select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.horizontalPodAutoscalerList\" list-resource=\"$ctrl.horizontalPodAutoscalerListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Horizontal Pod Autoscalers </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.horizontalPodAutoscalerList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Horizontal Pod Autoscalers to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.horizontalPodAutoscalerList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\" size=\"small\" grow=\"2\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showScaleTarget\"> Target </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Target CPU Utilization </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Current CPU Utilization </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Min Replicas </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Max Replicas </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-horizontal-pod-autoscaler-card pagination-id=\"{{::$ctrl.getSelectId()}}\" dir-paginate=\"horizontalPodAutoscaler in $ctrl.horizontalPodAutoscalerList.horizontalpodautoscalers | itemsPerPage: default\" total-items=\"::$ctrl.horizontalPodAutoscalerList.listMeta.totalItems\" horizontal-pod-autoscaler=\"horizontalPodAutoscaler\" show-scale-target=\"::$ctrl.showScaleTarget\"> </kd-horizontal-pod-autoscaler-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"horizontalpodautoscaler/list/list.html\",' <kd-content-card> <kd-content> <kd-horizontal-pod-autoscaler-card-list ng-if=\"!ctrl.shouldShowZeroState()\" horizontal-pod-autoscaler-list=\"ctrl.horizontalPodAutoscalerList\" horizontal-pod-autoscaler-list-resource=\"ctrl.horizontalPodAutoscalerListResource\" show-scale-target=\"true\"> </kd-horizontal-pod-autoscaler-card-list> <kd-zero-state ng-if=\"ctrl.shouldShowZeroState()\"></kd-zero-state> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Ingress\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/detail/detail.html\",' <div layout=\"column\"> <kd-ingress-info ingress=\"::$ctrl.ingressDetail\"></kd-ingress-info> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.ingress.objectMeta\"> </kd-object-meta-info-card> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/list/card.html\",' <kd-resource-card type-meta=\"::$ctrl.ingress.typeMeta\" object-meta=\"::$ctrl.ingress.objectMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getIngressDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.ingress.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.ingress.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.ingress.endpoints.length\"> <kd-external-endpoint endpoints=\"::$ctrl.ingress.endpoints\"></kd-external-endpoint> </div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.ingress.objectMeta.creationTimestamp\"> {{::$ctrl.ingress.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.ingress.objectMeta.creationTimestamp | date}} </md-tooltip> </div> <div ng-if=\"::!$ctrl.ingress.objectMeta.creationTimestamp\">-</div> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/list/cardlist.html\",' <kd-resource-card-list ng-if=\"::$ctrl.ingressList.items\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.ingressList\" list-resource=\"$ctrl.ingressListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Ingresses </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.ingressList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Ingresses to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.ingressList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Endpoints </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-ingress-card pagination-id=\"{{::$ctrl.getSelectId()}}\" ingress=\"ingress\" dir-paginate=\"ingress in $ctrl.ingressList.items | itemsPerPage: default\" total-items=\"::$ctrl.ingressList.listMeta.totalItems\"> </kd-ingress-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"ingress/list/list.html\",' <kd-warnings warnings=\"::$ctrl.ingressList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-ingress-card-list ingress-list=\"$ctrl.ingressList\" with-statuses=\"false\" ingress-list-resource=\"$ctrl.ingressListResource\"> </kd-ingress-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/detail/actionbar.html\",' <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-scale-button resource-kind-display-name=\"Job\" resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\" current-pods=\"$ctrl.details.parallelism\" desired-pods=\"$ctrl.details.parallelism\"> </kd-scale-button> <kd-actionbar-detail-buttons resource-kind-name=\"Job\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.jobDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.jobDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this job.\" metrics=\"::ctrl.jobDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-job-info job=\"::ctrl.jobDetail\"></kd-job-info> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::ctrl.jobDetail.podList\" with-statuses=\"true\" pod-list-resource=\"::ctrl.jobPodsResource\"> <kd-empty-list-text> There are currently no Pods managed by this Job. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.jobDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section name=\"Details\"> <kd-object-meta-info-card object-meta=\"::$ctrl.job.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Images\"> <div ng-repeat=\"image in $ctrl.job.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in $ctrl.job.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> <kd-info-card-entry ng-if=\"::$ctrl.job.completions\" title=\"Completions\"> {{::$ctrl.job.completions}} </kd-info-card-entry> <kd-info-card-entry title=\"Parallelism\"> {{::$ctrl.job.parallelism}} </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Pods\"> <div> <div class=\"kd-comma-separated-item\"> {{::$ctrl.job.podInfo.running}} active </div> <div class=\"kd-comma-separated-item\"> {{::$ctrl.job.podInfo.succeeded}} succeeded </div> <div class=\"kd-comma-separated-item\"> {{::$ctrl.job.podInfo.failed}} failed </div> </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.job.objectMeta\" type-meta=\"$ctrl.job.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.isFailed()\"> error <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.job.jobStatus.message}} </md-tooltip> </md-icon> <md-icon class=\"material-icons md-warn\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons\" style=\"color: green\" ; ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getJobDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.job.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div>Job</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.job.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.job.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-replicase-card-pods-stat\"> {{::$ctrl.job.pods.running}} <span ng-if=\"::$ctrl.job.pods.desired\">/ {{::$ctrl.job.pods.desired}}</span> </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.job.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.job.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.job.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.job.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.job.objectMeta\" resource-kind-name=\"::$ctrl.job.typeMeta.kind\"> </kd-logs-button> <kd-resource-card-menu> <kd-scale-button resource-kind-display-name=\"Job\" resource-kind-name=\"$ctrl.job.typeMeta.kind\" object-meta=\"$ctrl.job.objectMeta\" current-pods=\"$ctrl.job.parallelism\" desired-pods=\"$ctrl.job.parallelism\" menu-item=\"true\"> </kd-scale-button> <kd-resource-card-delete-menu-item resource-kind-name=\"Job\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Job\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.job.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.jobList\" list-resource=\"::$ctrl.jobListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Jobs </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.jobList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Jobs to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.jobList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-job-card pagination-id=\"{{::$ctrl.getSelectId()}}\" dir-paginate=\"job in $ctrl.jobList.jobs | itemsPerPage: default\" job=\"job\" show-resource-kind=\"::$ctrl.showResourceKind\" total-items=\"::$ctrl.jobList.listMeta.totalItems\"> </kd-job-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"job/list/list.html\",' <kd-warnings warnings=\"::$ctrl.jobList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.jobList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these jobs.\" metrics=\"::$ctrl.jobList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-job-card-list job-list=\"$ctrl.jobList\" job-list-resource=\"$ctrl.jobListResource\"> </kd-job-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"logs/download/dialog.html\",' <div class=\"kd-download-dialog\" ng-if=\"!$ctrl.hasForbiddenError()\"> <div class=\"kd-download-info\"> <h3>Downloading log file</h3> Please wait until download has finished. <div class=\"kd-download-progress\"> Downloaded:  {{ $ctrl.loaded | kdMemory }} </div> </div> <md-progress-linear md-mode=\"{{$ctrl.getDownloadMode()}}\" value=\"100\" class=\"kd-download-progress-bar\"> </md-progress-linear> <div class=\"kd-download-buttons\"> <md-button class=\"md-primary md-raised\" ng-disabled=\"!$ctrl.hasDownloadFinished()\" ng-click=\"$ctrl.save()\"> Save </md-button> <md-button ng-click=\"$ctrl.abort()\"> Abort </md-button> </div> </div> <div class=\"kd-download-dialog-error\" ng-if=\"$ctrl.hasForbiddenError()\"> <div class=\"kd-download-info\"> <h3>Forbidden (403)</h3> {{$ctrl.kdLocalizerErrors.MSG_FORBIDDEN_RESOURCE_ERROR}} </div> <div class=\"kd-download-error-button\"> <md-button ng-click=\"$ctrl.abort()\"> Close </md-button> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/detail/actionbar.html\",' <kd-actionbar-namespace-overview namespace=\"$ctrl.details.objectMeta.name\"></kd-actionbar-namespace-overview> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.namespaceDetail.errors\"></kd-warnings> <kd-namespace-info link=\"::ctrl.getNamespaceOverviewHref()\" namespace=\"::ctrl.namespaceDetail\" button-text=\"::ctrl.buttonText\"> </kd-namespace-info> <div ng-if=\"ctrl.namespaceDetail.resourceQuotaList.items\"> <div ng-repeat=\"resourceQuota in ::ctrl.namespaceDetail.resourceQuotaList.items\"> <kd-resource-quota-detail resource-quota-detail=\"::resourceQuota\"></kd-resource-quota-detail> </div> </div> <kd-content-card ng-if=\"ctrl.namespaceDetail.resourceLimits.length\"> <kd-content> <kd-resource-limits resource-limits=\"ctrl.namespaceDetail.resourceLimits\"></kd-resource-limits> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.namespaceDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"> </kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.namespace.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Status\" ng-if=\"::$ctrl.namespace.phase\"> {{$ctrl.namespace.phase}} </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.namespace.objectMeta\" type-meta=\"$ctrl.namespace.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.isTerminating()\"> error </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isActive()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <a ng-href=\"{{::$ctrl.getNamespaceDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.namespace.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.namespace.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span> {{::$ctrl.namespace.phase}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.namespace.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.namespace.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.namespaceList\" list-resource=\"$ctrl.namespaceListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Namespaces </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.namespaceList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Namespaces to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.namespaceList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Status </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-namespace-card dir-paginate=\"ns in $ctrl.namespaceList.namespaces | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" namespace=\"ns\" total-items=\"::$ctrl.namespaceList.listMeta.totalItems\"> </kd-namespace-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"namespace/list/list.html\",' <kd-warnings warnings=\"::$ctrl.namespaceList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-namespace-card-list namespace-list=\"$ctrl.namespaceList\" namespace-list-resource=\"$ctrl.namespaceListResource\"> </kd-namespace-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/detail/allocatedresources.html\",' <kd-content-card> <kd-title>Allocated resources</kd-title> <kd-content> <div class=\"kd-allocated-resources\"> <div class=\"kd-graph-container\"> <kd-allocated-resources-chart outer=\"$ctrl.allocatedResources.cpuRequestsFraction\" inner=\"$ctrl.allocatedResources.cpuLimitsFraction\"> </kd-allocated-resources-chart> <div class=\"kd-graph-legend\"> <div class=\"kd-graph-legend-title\"> CPU allocation (cores) </div> <div class=\"kd-graph-legend-entry\"> <md-icon class=\"kd-graph-running\">stop</md-icon> Requests <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.cpuRequests | kdCores}} </span> </div> <div class=\"kd-graph-legend-entry\"> <md-icon class=\"kd-graph-blue\">stop</md-icon> Limits <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.cpuLimits | kdCores}} </span> </div> <div class=\"kd-graph-legend-entry\"> <div class=\"kd-graph-legend-placeholder\"></div> Capacity <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.cpuCapacity | kdCores}} </span> </div> </div> </div> <div class=\"kd-graph-container\"> <kd-allocated-resources-chart outer=\"$ctrl.allocatedResources.memoryRequestsFraction\" inner=\"$ctrl.allocatedResources.memoryLimitsFraction\"> </kd-allocated-resources-chart> <div class=\"kd-graph-legend\"> <div class=\"kd-graph-legend-title\"> Memory allocation (bytes) </div> <div class=\"kd-graph-legend-entry\"> <md-icon class=\"kd-graph-running\">stop</md-icon> Requests <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.memoryRequests | kdMemory}} </span> </div> <div class=\"kd-graph-legend-entry\"> <md-icon class=\"kd-graph-blue\">stop</md-icon> Limits <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.memoryLimits | kdMemory}} </span> </div> <div class=\"kd-graph-legend-entry\"> <div class=\"kd-graph-legend-placeholder\"></div> Capacity <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.memoryCapacity | kdMemory}} </span> </div> </div> </div> <div class=\"kd-graph-container\"> <kd-allocated-resources-chart outer=\"$ctrl.allocatedResources.podFraction\"> </kd-allocated-resources-chart> <div class=\"kd-graph-legend\"> <div class=\"kd-graph-legend-title\"> Pods allocation </div> <div class=\"kd-graph-legend-entry\"> <md-icon class=\"kd-graph-running\">stop</md-icon> Allocation <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.allocatedPods}} </span> </div> <div class=\"kd-graph-legend-entry\"> <div class=\"kd-graph-legend-placeholder\"></div> Capacity <span class=\"kd-graph-legend-value\"> {{$ctrl.allocatedResources.podCapacity}} </span> </div> </div> </div> </div> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.nodeDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.nodeDetail.metrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes caches.\" metrics=\"::ctrl.nodeDetail.metrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-node-info node=\"::ctrl.nodeDetail\"></kd-node-info> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::ctrl.nodeDetail.podList\" pod-list-resource=\"::ctrl.podListResource\" with-statuses=\"true\"> <kd-empty-list-text> There are currently no Pods scheduled on this Node. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.nodeDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/detail/info.html\",' <kd-info-card> <kd-info-card-header> <kd-resource-card-list-title> Details </kd-resource-card-list-title> </kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.node.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Addresses\" ng-if=\"::$ctrl.node.addresses\"> <div ng-repeat=\"(index, address) in $ctrl.node.addresses\" class=\"kd-chips\"> <kd-middle-ellipsis display-string=\"{{::address.type}}: {{::address.address}}\" class=\"kd-chip\"> </kd-middle-ellipsis> </div> </kd-info-card-entry> <kd-info-card-entry title=\"Taints\" ng-if=\"::$ctrl.node.taints\"> <div ng-repeat=\"(index, taint) in ::$ctrl.node.taints\" class=\"kd-chips\"> <kd-middle-ellipsis display-string=\"{{::taint.key}}={{::taint.value}}:{{::taint.effect}}\" class=\"kd-chip\" ng-if=\"::taint.value\"> </kd-middle-ellipsis> <kd-middle-ellipsis display-string=\"{{::taint.key}}:{{::taint.effect}}\" class=\"kd-chip\" ng-if=\"::!taint.value\"> </kd-middle-ellipsis> </div> </kd-info-card-entry> <kd-info-card-entry title=\"Phase\" ng-if=\"::$ctrl.node.phase\"> {{$ctrl.node.phase}} </kd-info-card-entry> <kd-info-card-entry title=\"Pod CIDR\" ng-if=\"::$ctrl.node.podCIDR\"> {{$ctrl.node.podCIDR}} </kd-info-card-entry> <kd-info-card-entry title=\"Provider ID\" ng-if=\"::$ctrl.node.providerID\"> {{$ctrl.node.providerID}} </kd-info-card-entry> <kd-info-card-entry title=\"Unschedulable\"> {{$ctrl.node.unschedulable}} </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"System info\"> <kd-info-card-entry title=\"Machine ID\" ng-if=\"::$ctrl.node.nodeInfo.machineID\"> {{$ctrl.node.nodeInfo.machineID}} </kd-info-card-entry> <kd-info-card-entry title=\"System UUID\" ng-if=\"::$ctrl.node.nodeInfo.systemUUID\"> {{$ctrl.node.nodeInfo.systemUUID}} </kd-info-card-entry> <kd-info-card-entry title=\"Boot ID\" ng-if=\"::$ctrl.node.nodeInfo.bootID\"> {{$ctrl.node.nodeInfo.bootID}} </kd-info-card-entry> <kd-info-card-entry title=\"Kernel Version\" ng-if=\"::$ctrl.node.nodeInfo.kernelVersion\"> {{$ctrl.node.nodeInfo.kernelVersion}} </kd-info-card-entry> <kd-info-card-entry title=\"OS Image\" ng-if=\"::$ctrl.node.nodeInfo.osImage\"> {{$ctrl.node.nodeInfo.osImage}} </kd-info-card-entry> <kd-info-card-entry title=\"Container Runtime Version\" ng-if=\"::$ctrl.node.nodeInfo.containerRuntimeVersion\"> {{$ctrl.node.nodeInfo.containerRuntimeVersion}} </kd-info-card-entry> <kd-info-card-entry title=\"Kubelet Version\" ng-if=\"::$ctrl.node.nodeInfo.kubeletVersion\"> {{$ctrl.node.nodeInfo.kubeletVersion}} </kd-info-card-entry> <kd-info-card-entry title=\"Kube-Proxy Version\" ng-if=\"::$ctrl.node.nodeInfo.kubeProxyVersion\"> {{$ctrl.node.nodeInfo.kubeProxyVersion}} </kd-info-card-entry> <kd-info-card-entry title=\"Operating system\" ng-if=\"::$ctrl.node.nodeInfo.operatingSystem\"> {{$ctrl.node.nodeInfo.operatingSystem}} </kd-info-card-entry> <kd-info-card-entry title=\"Architecture\" ng-if=\"::$ctrl.node.nodeInfo.architecture\"> {{$ctrl.node.nodeInfo.architecture}} </kd-info-card-entry> </kd-info-card-section> </kd-info-card> <kd-node-allocated-resources allocated-resources=\"::$ctrl.node.allocatedResources\"></kd-node-allocated-resources> <kd-content-card ng-if=\"::$ctrl.node.conditions.length\"> <kd-content> <kd-condition-list conditions=\"::$ctrl.node.conditions\"></kd-condition-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.node.objectMeta\" type-meta=\"$ctrl.node.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.isInNotReadyState()\"> error </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isInUnknownState()\"> help </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isInReadyState()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getNodeDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.node.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.node.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.node.ready}} </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.node.allocatedResources\"> {{::$ctrl.node.allocatedResources.cpuRequests | kdCores}} ({{$ctrl.node.allocatedResources.cpuRequestsFraction | number: 2}}%) </div> <div ng-if=\"::!$ctrl.node.allocatedResources\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.node.allocatedResources\"> {{::$ctrl.node.allocatedResources.cpuLimits | kdCores}} ({{$ctrl.node.allocatedResources.cpuLimitsFraction | number: 2}}%) </div> <div ng-if=\"::!$ctrl.node.allocatedResources\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.node.allocatedResources\"> {{::$ctrl.node.allocatedResources.memoryRequests | kdMemory}} ({{$ctrl.node.allocatedResources.memoryRequestsFraction | number: 2}}%) </div> <div ng-if=\"::!$ctrl.node.allocatedResources\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.node.allocatedResources\"> {{::$ctrl.node.allocatedResources.memoryLimits | kdMemory}} ({{$ctrl.node.allocatedResources.memoryLimitsFraction | number: 2}}%) </div> <div ng-if=\"::!$ctrl.node.allocatedResources\">-</div> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.node.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.node.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.nodeList\" list-resource=\"::$ctrl.nodeListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Nodes </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.nodeList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Nodes to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.nodeList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Ready </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> CPU requests (cores) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> CPU limits (cores) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Memory requests (bytes) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Memory limits (bytes) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-node-card dir-paginate=\"node in $ctrl.nodeList.nodes | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" node=\"node\" total-items=\"::$ctrl.nodeList.listMeta.totalItems\"> </kd-node-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"node/list/list.html\",' <kd-warnings warnings=\"::$ctrl.nodeList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"$ctrl.nodeList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes caches.\" metrics=\"$ctrl.nodeList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-node-card-list node-list=\"$ctrl.nodeList\" node-list-resource=\"$ctrl.nodeListResource\"> </kd-node-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"overview/workloadstatuses/workloadstatuses.html\",' <div layout=\"row\" layout-wrap> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.cronJobRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.cronJobRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Cron Jobs </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.daemonSetRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.daemonSetRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Daemon Sets </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.deploymentRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.deploymentRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Deployments </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.jobRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.jobRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Jobs </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.podRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.podRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Pods </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.replicaSetRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.replicaSetRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Replica Sets </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.rcRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.rcRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Replication Controllers </div> </div> </div> <div class=\"kd-graph-container\" ng-if=\"::$ctrl.resourcesRatio.statefulSetRatio.length\"> <div layout=\"column\" layout-align=\"center center\"> <kd-allocated-resources-chart color-palette=\"::$ctrl.colorPalette\" data=\"::$ctrl.resourcesRatio.statefulSetRatio\" ratio=\"0\" enable-tooltips=\"true\" size=\"140\"> </kd-allocated-resources-chart> <div class=\"kd-graph-title\"> Stateful Sets </div> </div> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Persistent Volume\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/detail/detail.html\",' <div layout=\"column\"> <kd-persistent-volume-info persistent-volume=\"::$ctrl.persistentVolumeDetail\"></kd-persistent-volume-info> <kd-persistent-volume-source-info persistent-volume-source=\"::$ctrl.persistentVolumeDetail.persistentVolumeSource\"></kd-persistent-volume-source-info> </div> <kd-capacity capacity=\"::$ctrl.persistentVolumeDetail.capacity\"></kd-capacity> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.persistentVolume.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Status\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolume.status}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.status\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Claim\"> <div ng-show=\"::$ctrl.persistentVolume.claim\"> <a ng-href=\"{{$ctrl.getPersistentVolumeClaimDetailsHref()}}\">{{::$ctrl.persistentVolume.claim}}</a> </div> <div ng-hide=\"::$ctrl.persistentVolume.claim\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Reclaim policy\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolume.reclaimPolicy}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.reclaimPolicy\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Access modes\"> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolume.accessModes\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.accessModes\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Storage class\"> <div ng-show=\"::$ctrl.persistentVolume.storageClass\"> <a ng-href=\"{{$ctrl.getStorageClassDetailsHref()}}\">{{::$ctrl.persistentVolume.storageClass}}</a> </div> <div ng-hide=\"::$ctrl.persistentVolume.storageClass\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Reason\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolume.reason}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.reason\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Message\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolume.message}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.message\">-</div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/detail/sourceinfo.html\",' <kd-info-card> <kd-info-card-header>Source</kd-info-card-header> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.hostPath\" name=\"Host path\"> <kd-info-card-entry title=\"Path\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.hostPath.path}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.hostPath.path\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.gcePersistentDisk\" name=\"GCE persistent disk\"> <kd-info-card-entry title=\"PD name\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.gcePersistentDisk.pdName}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.gcePersistentDisk.pdName\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"FS type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.gcePersistentDisk.fsType}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.gcePersistentDisk.fsType\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Partition\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.gcePersistentDisk.partition}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.gcePersistentDisk.partition\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.gcePersistentDisk.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.gcePersistentDisk.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.awsElasticBlockStore\" name=\"AWS block storage\"> <kd-info-card-entry title=\"Volume ID\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.awsElasticBlockStore.volumeID}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.awsElasticBlockStore.volumeID\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"FS type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.awsElasticBlockStore.fsType}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.awsElasticBlockStore.fsType\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Partition\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.awsElasticBlockStore.partition}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.awsElasticBlockStore.partition\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.awsElasticBlockStore.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.awsElasticBlockStore.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.glusterfs\" name=\"GlusterFS\"> <kd-info-card-entry title=\"Endpoints\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.glusterfs.endpoints}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.glusterfs.endpoints\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Path\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.glusterfs.path}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.glusterfs.path\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.glusterfs.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.glusterfs.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.nfs\" name=\"NFS\"> <kd-info-card-entry title=\"Server\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.nfs.server}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.nfs.server\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Path\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.nfs.path}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.nfs.path\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.nfs.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.nfs.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.rbd\" name=\"RBD\"> <kd-info-card-entry title=\"Monitors\"> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolumeSource.rbd.monitors\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.monitors\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Image\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.rbd.image}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.image\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"User\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.rbd.user}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.user\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Keyring\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.rbd.keyring}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.keyring\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"SecretRef\"> <kd-middle-ellipsis ng-if=\"::$ctrl.persistentVolumeSource.rbd.secretRef\" display-string=\"{{::$ctrl.persistentVolumeSource.rbd.secretRef.name}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.secretRef.name\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.rbd.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.rbd.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.iscsi\" name=\"ISCSI\"> <kd-info-card-entry title=\"Target portal\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.iscsi.targetPortal}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.iscsi.targetPortal\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"IQN\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.iscsi.iqn}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.iscsi.iqnl\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Lun\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.iscsi.lun}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.iscsi.lun\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"FS type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.iscsi.fsType}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.iscsi.fsType\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.iscsi.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.iscsi.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.cinder\" name=\"Cinder\"> <kd-info-card-entry title=\"Volume ID\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.cinder.volumeID}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.cinder.volumeID\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"FS Type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.cinder.fsType}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.cinder.fsType\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.cinder.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.cinder.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.fc\" name=\"FC\"> <kd-info-card-entry title=\"Target WWNs\"> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolumeSource.fc.targetWWNs\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.fc.targetWWNs\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"FS type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.fc.fsType}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.fc.fsType\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Lun\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.fc.lun}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.fc.lun\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Read only\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.fc.readOnly}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.fc.readOnly\">-</div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section ng-if=\"::$ctrl.persistentVolumeSource.flocker\" name=\"Flocker\"> <kd-info-card-entry title=\"Dataset name\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeSource.flocker.datasetName}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeSource.flocker.datasetName\">-</div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.persistentVolume.objectMeta\" type-meta=\"$ctrl.persistentVolume.typeMeta\"> <kd-resource-card-status layout=\"row\" ng-switch=\"$ctrl.persistentVolume.status\"> <md-icon class=\"material-icons kd-success\" ng-switch-when=\"Available\"> check_circle </md-icon> <md-icon class=\"material-icons\" ng-switch-when=\"Pending\"> update </md-icon> <md-icon class=\"material-icons kd-success\" ng-switch-when=\"Bound\"> check_circle </md-icon> <md-icon class=\"material-icons kd-warning\" ng-switch-when=\"Released\"> remove_circle </md-icon> <md-icon class=\"material-icons kd-error\" ng-switch-when=\"Failed\"> error </md-icon> <md-icon class=\"material-icons\" ng-switch-default> help </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getPersistentVolumeDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolume.capacity\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.capacity\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolume.accessModes\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.accessModes\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.reclaimPolicy}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.reclaimPolicy\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.status}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.status\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-show=\"::$ctrl.persistentVolume.claim\"> <a ng-href=\"{{::$ctrl.getPersistentVolumeClaimDetailsHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.claim}}\"> </kd-middle-ellipsis> </a> </div> <div ng-hide=\"::$ctrl.persistentVolume.claim\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.storageClass}}\"> </kd-middle-ellipsis>  <div ng-hide=\"::$ctrl.persistentVolume.storageClass\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.persistentVolume.reason}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolume.reason\">-</div> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.persistentVolume.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.persistentVolume.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Persistent Volume\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Persistent Volume\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.persistentVolumeList\" list-resource=\"$ctrl.persistentVolumeListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Persistent Volumes </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.persistentVolumeList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Persistent Volumes to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.persistentVolumeList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Capacity </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Access Modes </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Reclaim Policy </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Status </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Claim </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Storage Class </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Reason </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-persistent-volume-card dir-paginate=\"persistentVolume in $ctrl.persistentVolumeList.items | itemsPerPage: default\" persistent-volume=\"persistentVolume\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"::$ctrl.persistentVolumeList.listMeta.totalItems\"> </kd-persistent-volume-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolume/list/list.html\",' <kd-warnings warnings=\"::$ctrl.persistentVolumeList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-persistent-volume-card-list persistent-volume-list=\"$ctrl.persistentVolumeList\" persistent-volume-list-resource=\"$ctrl.persistentVolumeListResource\"> </kd-persistent-volume-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Persistent Volume Claim\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/detail/detail.html\",' <div layout=\"column\"> <kd-persistent-volume-claim-info persistent-volume-claim=\"::$ctrl.persistentVolumeClaimDetail\"></kd-persistent-volume-claim-info> </div> <kd-capacity capacity=\"::$ctrl.persistentVolumeClaimDetail.capacity\"></kd-capacity> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.persistentVolumeClaim.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Status\"> {{::$ctrl.persistentVolumeClaim.status}} </kd-info-card-entry> <kd-info-card-entry title=\"Volume\"> <div ng-show=\"::$ctrl.persistentVolumeClaim.volume\"> <a ng-href=\"{{$ctrl.getPersistentVolumeDetailsHref()}}\">{{::$ctrl.persistentVolumeClaim.volume}}</a> </div> <div ng-hide=\"::$ctrl.persistentVolumeClaim.volume\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Access modes\"> <div ng-repeat=\"mode in $ctrl.persistentVolumeClaim.accessModes\"> <kd-middle-ellipsis display-string=\"{{::mode}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> <kd-info-card-entry title=\"Storage class\"> <div ng-show=\"::$ctrl.persistentVolumeClaim.storageClass\"> <a ng-href=\"{{$ctrl.getStorageClassDetailsHref()}}\">{{::$ctrl.persistentVolumeClaim.storageClass}}</a> </div> <div ng-hide=\"::$ctrl.persistentVolumeClaim.storageClass\">-</div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/list/card.html\",' <kd-resource-card object-meta=\"::$ctrl.persistentVolumeClaim.objectMeta\" type-meta=\"::$ctrl.persistentVolumeClaim.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.isLost()\"> error <md-tooltip md-delay=\"500\" md-autohide> This claim is in lost state </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> This claim is in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isBound()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getPersistentVolumeClaimDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeClaim.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.persistentVolumeClaim.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <div ng-show=\"::$ctrl.persistentVolumeClaim.status\">{{::$ctrl.persistentVolumeClaim.status}}</div> <div ng-hide=\"::$ctrl.persistentVolumeClaim.status\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-show=\"::$ctrl.persistentVolumeClaim.volume\">{{::$ctrl.persistentVolumeClaim.volume}}</div> <div ng-hide=\"::$ctrl.persistentVolumeClaim.volume\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolumeClaim.capacity\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeClaim.capacity\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis ng-repeat=\"(key, value) in ::$ctrl.persistentVolumeClaim.accessModes\" display-string=\"{{::value}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.persistentVolumeClaim.accessModes\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-show=\"::$ctrl.persistentVolumeClaim.storageClass\">{{::$ctrl.persistentVolumeClaim.storageClass}}</div> <div ng-hide=\"::$ctrl.persistentVolumeClaim.storageClass\">-</div> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.persistentVolumeClaim.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.persistentVolumeClaim.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Persistent Volume Claim\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Persistent Volume Claim\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.persistentVolumeClaimList\" list-resource=\"$ctrl.persistentVolumeClaimListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Persistent Volume Claims </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.persistentVolumeClaimList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Persistent Volume Claims to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.persistentVolumeClaimList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Status </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Volume </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Capacity </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Access Modes </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Storage Class </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-persistent-volume-claim-card dir-paginate=\"persistentVolumeClaim in $ctrl.persistentVolumeClaimList.items | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" persistent-volume-claim=\"persistentVolumeClaim\" total-items=\"$ctrl.persistentVolumeClaimList.listMeta.totalItems\"> </kd-persistent-volume-claim-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"persistentvolumeclaim/list/list.html\",' <kd-warnings warnings=\"::$ctrl.persistentVolumeClaimList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-persistent-volume-claim-card-list persistent-volume-claim-list=\"$ctrl.persistentVolumeClaimList\" persistent-volume-claim-list-resource=\"$ctrl.persistentVolumeClaimListResource\"> </kd-persistent-volume-claim-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/detail/actionbar.html\",' <kd-actionbar-shell-button namespace=\"$ctrl.details.objectMeta.namespace\" pod-name=\"$ctrl.details.objectMeta.name\"> </kd-actionbar-shell-button> <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-actionbar-detail-buttons resource-kind-name=\"Pod\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/detail/containerinfo.html\",' <kd-info-card> <kd-info-card-header ng-transclude=\"header\"> Containers </kd-info-card-header> <kd-info-card-section ng-repeat=\"container in ::$ctrl.containers\" name=\"{{::container.name}}\"> <kd-info-card-entry title=\"Image\"> {{::container.image}} </kd-info-card-entry> <kd-info-card-entry title=\"Environment variables\"> <div ng-if=\"::container.env.length\"> <div ng-repeat=\"env in ::container.env\" layout=\"row\"> <span ng-if=\"::$ctrl.isHref(env)\" class=\"kd-env-href-wrapper\"> {{::env.name}}&nbsp;(<a ng-href=\"{{::$ctrl.getRefObjectHref(env)}}\">{{::$ctrl.getRefObjectName(env)}}</a>):&nbsp; <span ng-if=\"::$ctrl.isSecret(env)\"> <md-button ng-if=\"!$ctrl.isSecretVisible\" ng-click=\"::$ctrl.showSecret()\" class=\"md-icon-button kd-env-secret-button\"> <i class=\"material-icons kd-env-secret-icon\">visibility</i> <md-tooltip md-delay=\"500\" md-autohide> Show secret value </md-tooltip> </md-button> <span ng-if=\"$ctrl.isSecretVisible && env.value\" class=\"kd-env-value\">{{::$ctrl.formatSecretValue(env.value)}}</span> <span ng-if=\"$ctrl.isSecretVisible && !env.value\">-</span> </span> <pre class=\"kd-env-config-map-value\" ng-if=\"!$ctrl.isSecret(env)\">{{::env.value}}</pre> </span> <span ng-if=\"::!$ctrl.isHref(env)\"> {{::env.name}}:&nbsp;<span class=\"kd-env-value\">{{::$ctrl.getFieldRefValue(env)}}</span> </span> </div> </div> <div ng-if=\"::!container.env.length\"> - </div> </kd-info-card-entry> <kd-info-card-entry title=\"Commands\"> <div ng-if=\"::container.commands.length\"> <div ng-repeat=\"(key, value) in ::container.commands\" layout=\"row\"> <kd-middle-ellipsis display-string=\"{{::value}}\" flex=\"shrink\"> <kd-middle-ellipsis> </kd-middle-ellipsis></kd-middle-ellipsis></div> </div> <div ng-if=\"::!container.commands.length\"> - </div> </kd-info-card-entry> <kd-info-card-entry title=\"Args\"> <div ng-if=\"::container.args.length\"> <div ng-repeat=\"(key, value) in ::container.args\" layout=\"row\"> <kd-middle-ellipsis display-string=\"{{::value}}\" flex=\"shrink\"> <kd-middle-ellipsis> </kd-middle-ellipsis></kd-middle-ellipsis></div> </div> <div ng-if=\"::!container.args.length\"> - </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/detail/creatorinfo.html\",' <kd-content-card> <kd-content> <kd-resource-card-list selectable=\"false\" with-statuses=\"true\"> <kd-resource-card-list-header> <kd-resource-card-list-title> Created by </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.creator.typeMeta.kind\"> <kd-zero-state-text> This Pod does not have a creator. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.creator.typeMeta.kind\"> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card ng-if=\"$ctrl.creator.typeMeta.kind\" object-meta=\"$ctrl.creator.objectMeta\" type-meta=\"$ctrl.creator.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons md-warn\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getCreatorDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.creator.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.creator.typeMeta.kind}} </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.creator.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.creator.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-replicase-card-pods-stat\"> {{::$ctrl.creator.pods.running}} <span ng-if=\"$ctrl.creator.pods.desired != null\">/ {{::$ctrl.creator.pods.desired}}</span> </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.creator.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.creator.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.creator.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"{{::$ctrl.creator.typeMeta.kind}}\"> </kd-resource-card-delete-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.creator.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> </kd-resource-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.podDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.podDetail.metrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in this pod.\" metrics=\"::ctrl.podDetail.metrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-pod-info pod=\"::ctrl.podDetail\"></kd-pod-info> <kd-container-info containers=\"::ctrl.podDetail.containers\" namespace=\"::ctrl.podDetail.objectMeta.namespace\" pod-name=\"::ctrl.podDetail.objectMeta.name\"> </kd-container-info> <kd-container-info ng-if=\"::ctrl.podDetail.initContainers.length > 0\" containers=\"::ctrl.podDetail.initContainers\" is-init-container=\"true\" namespace=\"::ctrl.podDetail.objectMeta.namespace\" pod-name=\"::ctrl.podDetail.objectMeta.name\"> <kd-header>Init Containers</kd-header> </kd-container-info> <kd-content-card ng-if=\"::ctrl.podDetail.conditions.length\"> <kd-content> <kd-condition-list conditions=\"::ctrl.podDetail.conditions\"></kd-condition-list> </kd-content> </kd-content-card> <kd-creator-info creator=\"::ctrl.podDetail.controller\"></kd-creator-info> <kd-event-card-list event-list=\"::ctrl.podDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> <kd-content-card> <kd-content> <kd-persistent-volume-claim-card-list persistent-volume-claim-list=\"::ctrl.podDetail.persistentVolumeClaimList\" persistent-volume-claim-list-resource=\"::ctrl.persistentVolumeClaimsResource\"> </kd-persistent-volume-claim-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.pod.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Status\"> {{::$ctrl.pod.podPhase}} </kd-info-card-entry> <kd-info-card-entry title=\"QoS Class\"> <span ng-if=\"$ctrl.pod.qosClass\">{{::$ctrl.pod.qosClass}}</span> <span ng-if=\"!$ctrl.pod.qosClass\">-</span> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Network\"> <kd-info-card-entry title=\"Node\"> <a href=\"{{$ctrl.getNodeDetailsHref()}}\">{{::$ctrl.pod.nodeName}}</a> </kd-info-card-entry> <kd-info-card-entry title=\"IP\"> {{::$ctrl.pod.podIP}} </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/list/card.html\",' <kd-resource-card object-meta=\"::$ctrl.pod.objectMeta\" type-meta=\"::$ctrl.pod.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.isFailed()\"> error <md-tooltip md-delay=\"500\" md-autohide> This pod has errors. </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> This pod is in a pending state. </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getPodDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.pod.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.pod.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.pod.nodeName}} </kd-resource-card-column> <kd-resource-card-column> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.getDisplayStatus()}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column>{{::$ctrl.pod.restartCount}}</kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.pod.objectMeta.creationTimestamp\"> {{::$ctrl.pod.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Started at  {{::$ctrl.pod.objectMeta.creationTimestamp | date}} </md-tooltip> </div> <div ng-if=\"::!$ctrl.pod.objectMeta.creationTimestamp\">-</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showMetrics\"> <div ng-if=\"::$ctrl.hasCpuUsage(pod)\"> <kd-sparkline timeseries=\"::$ctrl.pod.metrics.cpuUsageHistory\" class=\"kd-sparkline-cpu-series\"></kd-sparkline> {{::($ctrl.pod.metrics.cpuUsage | kdCores)}} </div> <div ng-if=\"::!$ctrl.hasCpuUsage(pod)\">-</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showMetrics\"> <div ng-if=\"::$ctrl.hasMemoryUsage()\"> <kd-sparkline timeseries=\"::$ctrl.pod.metrics.memoryUsageHistory\" class=\"kd-sparkline-memory-series\"></kd-sparkline> {{::($ctrl.pod.metrics.memoryUsage | kdMemory)}} </div> <div ng-if=\"::!$ctrl.hasMemoryUsage()\">-</div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.pod.objectMeta\" resource-kind-name=\"::$ctrl.pod.typeMeta.kind\"> </kd-logs-button> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Pod\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Pod\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.isFailed()\"> <kd-pod-warnings warnings=\"::$ctrl.pod.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/list/cardlist.html\",' <kd-resource-card-list selectable=\"::$ctrl.selectable\" with-statuses=\"::$ctrl.withStatuses\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.podList\" list-resource=\"$ctrl.podListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Pods </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.podList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Pods to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.podList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Node </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.STATUS\"> Status </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> Restarts </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showMetrics()\"> CPU (cores) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showMetrics()\"> Memory (bytes) </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-pod-card dir-paginate=\"pod in $ctrl.podList.pods | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" pod=\"pod\" show-metrics=\"::$ctrl.showMetrics()\" total-items=\"::$ctrl.podList.listMeta.totalItems\"> </kd-pod-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"pod/list/list.html\",' <kd-warnings warnings=\"::$ctrl.podList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in these pods.\" metrics=\"::$ctrl.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"$ctrl.podList\" pod-list-resource=\"$ctrl.podListResource\" with-statuses=\"true\"> </kd-pod-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/detail/actionbar.html\",' <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-scale-button resource-kind-display-name=\"Replica Set\" resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\" current-pods=\"$ctrl.details.podInfo.current\" desired-pods=\"$ctrl.details.podInfo.desired\"> </kd-scale-button> <kd-actionbar-detail-buttons resource-kind-name=\"Replica Set\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.replicaSetDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.replicaSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this replica set.\" metrics=\"::ctrl.replicaSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-replica-set-info replica-set=\"::ctrl.replicaSetDetail\"></kd-replica-set-info> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::ctrl.replicaSetDetail.podList\" with-statuses=\"true\" pod-list-resource=\"::ctrl.replicaSetPodsResource\"> <kd-empty-list-text> There are currently no Pods managed by this Replica Set </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-service-card-list service-list=\"::ctrl.replicaSetDetail.serviceList\" service-list-resource=\"::ctrl.replicaSetServicesResource\"> <kd-empty-list-text> There are currently no Services with the same label selector as this Replica Set. </kd-empty-list-text> </kd-service-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-horizontal-pod-autoscaler-card-list horizontal-pod-autoscaler-list=\"::ctrl.replicaSetDetail.horizontalPodAutoscalerList\"> <kd-empty-list-text> There are currently no Horizontal Pod Autoscalers targeting this Replica Set. </kd-empty-list-text> </kd-horizontal-pod-autoscaler-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.replicaSetDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.replicaSet.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Selector\"> <kd-labels labels=\"::$ctrl.replicaSet.selector.matchLabels\"></kd-labels> </kd-info-card-entry> <kd-info-card-entry title=\"Images\"> <div ng-repeat=\"image in $ctrl.replicaSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in $ctrl.replicaSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Pods\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.replicaSet.podInfo.current}} created, {{::$ctrl.replicaSet.podInfo.desired}} desired </div> <div ng-if=\"$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.replicaSet.podInfo.running}} running </div> </kd-info-card-entry> <kd-info-card-entry title=\"Pods status\" ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"::$ctrl.replicaSet.podInfo.pending\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicaSet.podInfo.pending}} pending </div> <div ng-if=\"::$ctrl.replicaSet.podInfo.failed\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicaSet.podInfo.failed}} failed </div> <div ng-if=\"::$ctrl.replicaSet.podInfo.running\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicaSet.podInfo.running}} running </div> </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.replicaSet.objectMeta\" type-meta=\"$ctrl.replicaSet.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons md-warn\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons\" style=\"color: green\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getReplicaSetDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.replicaSet.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div> Replica Set </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.replicaSet.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.replicaSet.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-replicase-card-pods-stat\"> {{::$ctrl.replicaSet.pods.running}} / {{::$ctrl.replicaSet.pods.desired}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.replicaSet.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at  {{::$ctrl.replicaSet.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.replicaSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.replicaSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.replicaSet.objectMeta\" resource-kind-name=\"::$ctrl.replicaSet.typeMeta.kind\"> </kd-logs-button> <kd-resource-card-menu> <kd-scale-button resource-kind-display-name=\"Replica Set\" resource-kind-name=\"$ctrl.replicaSet.typeMeta.kind\" object-meta=\"$ctrl.replicaSet.objectMeta\" current-pods=\"$ctrl.replicaSet.pods.current\" desired-pods=\"$ctrl.replicaSet.pods.desired\" menu-item=\"true\"> </kd-scale-button> <kd-resource-card-delete-menu-item resource-kind-name=\"Replica Set\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Replica Set\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.replicaSet.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.replicaSetList\" list-resource=\"::$ctrl.replicaSetListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Replica Sets </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.replicaSetList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Replica Sets to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.replicaSetList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-replica-set-card dir-paginate=\"rs in $ctrl.replicaSetList.replicaSets | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" replica-set=\"rs\" show-resource-kind=\"::$ctrl.showResourceKind\" total-items=\"::$ctrl.replicaSetList.listMeta.totalItems\"> </kd-replica-set-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicaset/list/list.html\",' <kd-warnings warnings=\"::$ctrl.replicaSetList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.replicaSetList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these replica sets.\" metrics=\"::$ctrl.replicaSetList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-replica-set-card-list replica-set-list=\"$ctrl.replicaSetList\" replica-set-list-resource=\"$ctrl.replicaSetListResource\"> </kd-replica-set-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/detail/actionbar.html\",' <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-scale-button resource-kind-display-name=\"Replication Controller\" resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\" current-pods=\"$ctrl.details.podInfo.current\" desired-pods=\"$ctrl.details.podInfo.desired\"> </kd-scale-button> <kd-actionbar-detail-buttons resource-kind-name=\"Replication Controller\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/detail/detail.html\",' <kd-warnings warnings=\"::$ctrl.replicationControllerDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.replicationControllerDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this replication controller.\" metrics=\"::$ctrl.replicationControllerDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-replication-controller-info replication-controller=\"::$ctrl.replicationControllerDetail\"> </kd-replication-controller-info> <kd-content-card> <kd-content> <kd-service-card-list service-list=\"::$ctrl.replicationControllerDetail.serviceList\" service-list-resource=\"::$ctrl.serviceListResource\"> <kd-empty-list-text> There are currently no Services with the same label selector as this Replication Controller. </kd-empty-list-text> </kd-service-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::$ctrl.replicationControllerDetail.podList\" pod-list-resource=\"::$ctrl.podListResource\" with-statuses=\"true\"> <kd-empty-list-text> There are currently no Pods managed by this Replication Controller. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-content-card> <kd-content> <kd-horizontal-pod-autoscaler-card-list horizontal-pod-autoscaler-list=\"::$ctrl.replicationControllerDetail.horizontalPodAutoscalerList\"> <kd-empty-list-text> There are currently no Horizontal Pod Autoscalers targeting this Replication Controller. </kd-empty-list-text> </kd-horizontal-pod-autoscaler-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::$ctrl.replicationControllerDetail.eventList\" event-list-resource=\"::$ctrl.eventListResource\"> </kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.replicationController.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Selector\"> <kd-labels labels=\"::$ctrl.replicationController.labelSelector\"></kd-labels> </kd-info-card-entry> <kd-info-card-entry title=\"Images\"> <div ng-repeat=\"image in $ctrl.replicationController.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in $ctrl.replicationController.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Pods\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.replicationController.podInfo.current}} created, {{::$ctrl.replicationController.podInfo.desired}} desired </div> <div ng-if=\"$ctrl.areDesiredPodsRunning()\"> {{::$ctrl.replicationController.podInfo.running}} running </div> </kd-info-card-entry> <kd-info-card-entry title=\"Pods status\" ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"::$ctrl.replicationController.podInfo.pending\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicationController.podInfo.pending}} pending </div> <div ng-if=\"::$ctrl.replicationController.podInfo.failed\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicationController.podInfo.failed}} failed </div> <div ng-if=\"::$ctrl.replicationController.podInfo.running\" class=\"kd-comma-separated-item\"> {{::$ctrl.replicationController.podInfo.running}} running </div> </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.replicationController.objectMeta\" type-meta=\"$ctrl.replicationController.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <a ng-href=\"{{::$ctrl.getReplicationControllerDetailHref()}}\"> <div> <kd-middle-ellipsis display-string=\"{{$ctrl.replicationController.objectMeta.name}}\"> </kd-middle-ellipsis> </div> </a> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div> Replication Controller </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.replicationController.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.replicationController.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-replicase-card-pods-stat\"> {{::$ctrl.replicationController.pods.running}} / {{::$ctrl.replicationController.pods.desired}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.replicationController.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at  {{::$ctrl.replicationController.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.replicationController.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.replicationController.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.replicationController.objectMeta\" resource-kind-name=\"::$ctrl.replicationController.typeMeta.kind\"> </kd-logs-button> <kd-replication-controller-card-menu replication-controller=\"::$ctrl.replicationController\"> </kd-replication-controller-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.replicationController.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.replicationControllerList\" list-resource=\"$ctrl.replicationControllerListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Replication Controllers </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.replicationControllerList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Replication Controllers to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.replicationControllerList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"4\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\" class=\"kd-row-layout-column\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-replication-controller-card replication-controller=\"rc\" pagination-id=\"{{::$ctrl.getSelectId()}}\" dir-paginate=\"rc in $ctrl.replicationControllerList.replicationControllers | itemsPerPage: default\" show-resource-kind=\"::$ctrl.showResourceKind\" total-items=\"$ctrl.replicationControllerList.listMeta.totalItems\"> </kd-replication-controller-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/list/cardmenu.html\",' <kd-resource-card-menu> <kd-scale-button resource-kind-display-name=\"Replication Controller\" resource-kind-name=\"$ctrl.replicationController.typeMeta.kind\" object-meta=\"$ctrl.replicationController.objectMeta\" current-pods=\"$ctrl.replicationController.pods.current\" desired-pods=\"$ctrl.replicationController.pods.desired\" menu-item=\"true\"> </kd-scale-button> <kd-resource-card-delete-menu-item resource-kind-name=\"Replication Controller\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Replication Controller\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"replicationcontroller/list/list.html\",' <kd-warnings warnings=\"::$ctrl.replicationControllerList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.replicationControllerList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these replication controllers.\" metrics=\"::$ctrl.replicationControllerList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-replication-controller-card-list replication-controller-list=\"$ctrl.replicationControllerList\" replication-controller-list-resource=\"$ctrl.rcListResource\"> </kd-replication-controller-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"resourcelimit/detail/detail.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Resource Limits </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-resource-card-header-columns> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Type </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Resource </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Min </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Max </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Default Request </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Default Limit </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Max Limit/Request Ratio </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card ng-repeat=\"(key, limitRange) in ::$ctrl.resourceLimits\" omit-meta=\"true\"> <kd-resource-card-columns> <kd-resource-card-column> <div>{{::limitRange.resourceType}}</div> <div ng-if=\"::!limitRange.resourceType.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.resourceName}}</div> <div ng-if=\"::!limitRange.resourceName.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.min}}</div> <div ng-if=\"::!limitRange.min.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.max}}</div> <div ng-if=\"::!limitRange.max.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.defaultRequest}}</div> <div ng-if=\"::!limitRange.defaultRequest.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.default}}</div> <div ng-if=\"::!limitRange.default.length\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::limitRange.maxLimitRequestRatio}}</div> <div ng-if=\"::!limitRange.maxLimitRequestRatio.length\">-</div> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"resourcequota/detail/detail.html\",' <div layout=\"column\"> <kd-content-card> <kd-title>Resource Quotas</kd-title> <kd-content> <div layout=\"column\" class=\"layout-column\"> <div class=\"kd-info-card-section layout-padding layout-row\" layout=\"row\" layout-padding=\"\"> <div layout=\"column\" class=\"kd-info-card-section-container layout-column\"> <div flex=\"auto\" class=\"flex-auto\"> <div layout=\"row\" class=\"kd-info-card-entry layout-row\"> <div flex=\"nogrow\" class=\"ng-binding ng-scope flex-nogrow\"> Name </div> <div flex=\"auto\" class=\"kd-info-card-entry-content flex-auto\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.resourceQuotaDetail.objectMeta.name}}\"> </kd-middle-ellipsis> </div> </div> </div> </div> <div layout=\"column\" class=\"kd-info-card-section-container layout-column\"> <div flex=\"auto\" class=\"flex-auto\"> <div layout=\"row\" class=\"kd-info-card-entry layout-row\"> <div flex=\"nogrow\" class=\"ng-binding flex-nogrow\"> Scopes </div> <div flex=\"auto\" class=\"kd-info-card-entry-content flex-auto\"> <kd-middle-ellipsis ng-repeat=\"scope in ::$ctrl.resourceQuotaDetail.scopes\" display-string=\"{{::scope}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.resourceQuotaDetail.scopes\">-</div> </div> </div> </div> </div> </div> <kd-resource-quota-detail-status status-list=\"::$ctrl.resourceQuotaDetail.statusList\"></kd-resource-quota-detail-status> </div> </kd-content> </kd-content-card> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"resourcequota/detail/status.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\"> <kd-resource-card-header-columns> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Resource Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Hard </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Used </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card ng-repeat=\"(key, value) in ::$ctrl.statusList\" omit-meta=\"true\"> <kd-resource-card-columns> <kd-resource-card-column> <div>{{::key}}</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::value.hard}}</div> </kd-resource-card-column> <kd-resource-card-column> <div>{{::value.used}}</div> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"role/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.role.objectMeta\" type-meta=\"$ctrl.role.typeMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <div> <kd-middle-ellipsis display-string=\"{{$ctrl.role.objectMeta.name}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column ng-switch=\"::$ctrl.role.typeMeta.kind\"> <kd-middle-ellipsis ng-switch-when=\"clusterrole\" display-string=\"Cluster Role\"> </kd-middle-ellipsis> <kd-middle-ellipsis ng-switch-when=\"role\" display-string=\"Role\"> </kd-middle-ellipsis> <div ng-switch-default>-</div> </kd-resource-card-column> <kd-resource-card-column ng-switch=\"::!!$ctrl.role.objectMeta.namespace\"> <kd-middle-ellipsis ng-switch-when=\"false\" display-string=\"All Namespaces\"> </kd-middle-ellipsis> <div ng-switch-default>{{::$ctrl.role.objectMeta.namespace}}</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.role.objectMeta.creationTimestamp\"> {{::$ctrl.role.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.role.objectMeta.creationTimestamp | date}} </md-tooltip> </div> <div ng-if=\"::!$ctrl.role.objectMeta.creationTimestamp\">-</div> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"role/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.roleList\" list-resource=\"$ctrl.roleListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Roles </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.roleList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Roles to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.roleList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Role Type </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-role-card dir-paginate=\"role in $ctrl.roleList.items | itemsPerPage: default\" role=\"role\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"::$ctrl.roleList.listMeta.totalItems\"> </kd-role-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"role/list/list.html\",' <kd-warnings warnings=\"::$ctrl.roleList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-role-card-list role-list=\"$ctrl.roleList\" role-list-resource=\"$ctrl.roleListResource\" with-statuses=\"false\"> </kd-role-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Secret\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/detail/detail.html\",' <div layout=\"column\"> <kd-secret-info secret=\"::$ctrl.secretDetail\"></kd-secret-info> <kd-info-card> <kd-info-card-header>Data</kd-info-card-header> <kd-info-card-section> <div layout=\"row\" class=\"kd-info-card-entry kd-secret-detail-row\" ng-repeat=\"(key, value) in ::$ctrl.secretDetail.data\"> <div flex=\"nogrow\" style=\"position: relative\"> <md-button ng-click=\"isActive = !isActive\" class=\"md-icon-button\"> <md-icon md-font-library=\"material-icons\" ng-if=\"isActive\"> visibility_off </md-icon> <md-icon md-font-library=\"material-icons\" ng-if=\"!isActive\"> visibility </md-icon> <md-tooltip md-delay=\"500\" md-autohide ng-if=\"!isActive\"> Show secret content </md-tooltip> <md-tooltip md-delay=\"500\" md-autohide ng-if=\"isActive\"> Hide secret content </md-tooltip> </md-button> {{::key}}: </div> <div class=\"kd-info-card-entry-content\"> <kd-toggle-hidden-text active=\"isActive\" placeholder=\"{{::$ctrl.formatDataValue(value).length}} bytes \" text=\"{{::$ctrl.formatDataValue(value)}}\"> </kd-toggle-hidden-text> </div> </div> </kd-info-card-section> </kd-info-card> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.secret.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Type\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.secret.type}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.secret.type\">-</div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/list/card.html\",' <kd-resource-card type-meta=\"::$ctrl.secret.typeMeta\" object-meta=\"::$ctrl.secret.objectMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getSecretDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.secret.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.secret.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.secret.type}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.secret.type\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.secret.objectMeta.creationTimestamp\"> {{::$ctrl.secret.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.secret.objectMeta.creationTimestamp | date}} </md-tooltip> </div> <div ng-if=\"::!$ctrl.secret.objectMeta.creationTimestamp\">-</div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Secret\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Secret\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/list/cardlist.html\",' <kd-resource-card-list ng-if=\"::$ctrl.secretList.secrets\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.secretList\" list-resource=\"$ctrl.secretListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Secrets </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.secretList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Secrets to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.secretList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Type </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-secret-card dir-paginate=\"secret in $ctrl.secretList.secrets | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" secret=\"secret\" total-items=\"::$ctrl.secretList.listMeta.totalItems\"> </kd-secret-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"secret/list/list.html\",' <kd-warnings warnings=\"::$ctrl.secretList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-secret-card-list secret-list=\"$ctrl.secretList\" with-statuses=\"false\" secret-list-resource=\"$ctrl.secretListResource\"> </kd-secret-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Service\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.serviceDetail.errors\"></kd-warnings> <kd-service-info service=\"ctrl.serviceDetail\"></kd-service-info> <kd-endpoint-card-list endpoint-list=\"::ctrl.serviceDetail.endpointList\" endpoint-list-resource=\"::ctrl.endpointListResource\"></kd-endpoint-card-list>  <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"ctrl.serviceDetail.podList\" with-statuses=\"true\" pod-list-resource=\"ctrl.servicePodsResource\"> <kd-empty-list-text> There are currently no Pods selected by this Service. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.serviceDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.service.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Label selector\"> <div ng-if=\"::$ctrl.service.selector\"> <kd-labels labels=\"::$ctrl.service.selector\"></kd-labels> </div> <div ng-hide=\"::$ctrl.service.selector\"> none </div> </kd-info-card-entry> <kd-info-card-entry title=\"Type\"> {{::$ctrl.service.type}} </kd-info-card-entry> <kd-info-card-entry title=\"Session Affinity\"> {{::$ctrl.service.sessionAffinity}} </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Connection\"> <kd-info-card-entry title=\"Cluster IP\"> {{::$ctrl.service.clusterIP}} </kd-info-card-entry> <kd-info-card-entry title=\"Internal endpoints\" ng-if=\"::$ctrl.service.internalEndpoint\"> <kd-internal-endpoint endpoint=\"::$ctrl.service.internalEndpoint\"></kd-internal-endpoint> </kd-info-card-entry> <kd-info-card-entry title=\"External endpoints\" ng-if=\"::$ctrl.service.externalEndpoints\"> <kd-external-endpoint endpoints=\"::$ctrl.service.externalEndpoints\"></kd-external-endpoint> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/list/card.html\",' <kd-resource-card object-meta=\"::$ctrl.service.objectMeta\" type-meta=\"::$ctrl.service.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> This service is in a pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <a ng-href=\"{{::$ctrl.getServiceDetailHref()}}\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.service.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.service.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.service.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <div>{{::$ctrl.getServiceClusterIP()}}</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.service.internalEndpoint\"> <kd-internal-endpoint endpoint=\"::$ctrl.service.internalEndpoint\"></kd-internal-endpoint> </div> <div ng-hide=\"::$ctrl.service.internalEndpoint\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.service.externalEndpoints\"> <kd-external-endpoint endpoints=\"::$ctrl.service.externalEndpoints\"></kd-external-endpoint> </div> <div ng-hide=\"::$ctrl.service.externalEndpoints\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::$ctrl.service.objectMeta.creationTimestamp\"> {{::$ctrl.service.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.service.objectMeta.creationTimestamp | date}} </md-tooltip> </div> <div ng-if=\"::!$ctrl.service.objectMeta.creationTimestamp\">-</div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Service\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Service\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/list/cardlist.html\",' <kd-resource-card-list selectable=\"::$ctrl.selectable\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.serviceList\" list-resource=\"::$ctrl.serviceListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Services </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.serviceList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Services to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.serviceList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Cluster IP </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Internal endpoints </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> External endpoints </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-service-card dir-paginate=\"service in $ctrl.serviceList.services | itemsPerPage: default\" service=\"service\" pagination-id=\"{{::$ctrl.getSelectId()}}\" total-items=\"::$ctrl.serviceList.listMeta.totalItems\"> </kd-service-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"service/list/list.html\",' <kd-warnings warnings=\"::ctrl.serviceList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-service-card-list service-list=\"::ctrl.serviceList\" service-list-resource=\"::ctrl.serviceListResource\"> </kd-service-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"settings/settingsentry/settingsentry.html\",' <div> <div>{{::$ctrl.key}}</div> <div class=\"kd-settings-entry-desc\">{{::$ctrl.desc}}</div> </div> <div class=\"kd-settings-entry-form\"> <ng-transclude></ng-transclude> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/detail/actionbar.html\",' <kd-actionbar-logs resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-logs> <kd-scale-button resource-kind-display-name=\"Stateful Set\" resource-kind-name=\"$ctrl.details.typeMeta.kind\" object-meta=\"$ctrl.details.objectMeta\" current-pods=\"$ctrl.details.podInfo.current\" desired-pods=\"$ctrl.details.podInfo.desired\"> </kd-scale-button> <kd-actionbar-detail-buttons resource-kind-name=\"Stateful Set\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/detail/detail.html\",' <kd-warnings warnings=\"::ctrl.statefulSetDetail.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::ctrl.statefulSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by this stateful set.\" metrics=\"::ctrl.statefulSetDetail.podList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-stateful-set-info stateful-set=\"::ctrl.statefulSetDetail\"></kd-stateful-set-info> <kd-content-card> <kd-content> <kd-pod-card-list pod-list=\"::ctrl.statefulSetDetail.podList\" pod-list-resource=\"::ctrl.statefulSetPodsResource\" with-statuses=\"true\"> <kd-empty-list-text> There are currently no Pods managed by this Stateful Set. </kd-empty-list-text> </kd-pod-card-list> </kd-content> </kd-content-card> <kd-event-card-list event-list=\"::ctrl.statefulSetDetail.eventList\" event-list-resource=\"::ctrl.eventListResource\"></kd-event-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.statefulSet.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Images\"> <div ng-repeat=\"image in $ctrl.statefulSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in $ctrl.statefulSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-info-card-entry> </kd-info-card-section> <kd-info-card-section name=\"Status\"> <kd-info-card-entry title=\"Pods\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> {{ $ctrl.statefulSet.podInfo.current}} created, {{ $ctrl.statefulSet.podInfo.desired}} desired </div> <div ng-if=\"$ctrl.areDesiredPodsRunning()\"> {{ $ctrl.statefulSet.podInfo.running}} running </div> </kd-info-card-entry> <kd-info-card-entry title=\"Pods status\" ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"!$ctrl.areDesiredPodsRunning()\"> <div ng-if=\"::$ctrl.statefulSet.podInfo.pending\" class=\"kd-comma-separated-item\"> {{ $ctrl.statefulSet.podInfo.pending}} pending </div> <div ng-if=\"::$ctrl.statefulSet.podInfo.failed\" class=\"kd-comma-separated-item\"> {{ $ctrl.statefulSet.podInfo.failed}} failed </div> <div ng-if=\"::$ctrl.statefulSet.podInfo.running\" class=\"kd-comma-separated-item\"> {{ $ctrl.statefulSet.podInfo.running}} running </div> </div> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.statefulSet.objectMeta\" type-meta=\"$ctrl.statefulSet.typeMeta\"> <kd-resource-card-status layout=\"row\"> <md-icon class=\"material-icons kd-error\" ng-if=\"::$ctrl.hasWarnings()\"> error <md-tooltip md-delay=\"500\" md-autohide> One or more pods have errors </md-tooltip> </md-icon> <md-icon class=\"material-icons\" ng-if=\"::$ctrl.isPending()\"> timelapse <md-tooltip md-delay=\"500\" md-autohide> One or more pods are in pending state </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-success\" ng-if=\"::$ctrl.isSuccess()\"> check_circle </md-icon> </kd-resource-card-status> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getStatefulSetDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.statefulSet.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"::$ctrl.showResourceKind\"> <div>Stateful Set</div> </kd-resource-card-column> <kd-resource-card-column ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.statefulSet.objectMeta.namespace}}\"> </kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.statefulSet.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <span class=\"kd-statefulse-card-pods-stat\"> {{::$ctrl.statefulSet.pods.running}} / {{::$ctrl.statefulSet.pods.desired}} </span> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.statefulSet.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.statefulSet.objectMeta.creationTimestamp| date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column> <div ng-repeat=\"image in ::$ctrl.statefulSet.containerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> <div ng-repeat=\"image in ::$ctrl.statefulSet.initContainerImages track by $index\"> <kd-middle-ellipsis display-string=\"{{::image}}\"></kd-middle-ellipsis> </div> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-logs-button object-meta=\"::$ctrl.statefulSet.objectMeta\" resource-kind-name=\"::$ctrl.statefulSet.typeMeta.kind\"> </kd-logs-button> <kd-resource-card-menu> <kd-scale-button resource-kind-display-name=\"Stateful Set\" resource-kind-name=\"$ctrl.statefulSet.typeMeta.kind\" object-meta=\"$ctrl.statefulSet.objectMeta\" current-pods=\"$ctrl.statefulSet.pods.current\" desired-pods=\"$ctrl.statefulSet.pods.desired\" menu-item=\"true\"> </kd-scale-button> <kd-resource-card-delete-menu-item resource-kind-name=\"Stateful Set\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Stateful Set\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> <kd-resource-card-footer ng-if=\"::$ctrl.hasWarnings()\"> <kd-pod-warnings warnings=\"::$ctrl.statefulSet.pods.warnings\"></kd-pod-warnings> </kd-resource-card-footer> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"true\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.statefulSetList\" list-resource=\"$ctrl.statefulSetListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Stateful Sets </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.statefulSetList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Stateful Sets to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.statefulSetList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" ng-if=\"::$ctrl.showResourceKind\"> Kind </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\" ng-if=\"$ctrl.areMultipleNamespacesSelected()\"> Namespace </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Pods </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Images </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-stateful-set-card dir-paginate=\"statefulSet in $ctrl.statefulSetList.statefulSets | itemsPerPage: default\" pagination-id=\"{{::$ctrl.getSelectId()}}\" stateful-set=\"statefulSet\" show-resource-kind=\"::$ctrl.showResourceKind\" total-items=\"::$ctrl.statefulSetList.listMeta.totalItems\"> </kd-stateful-set-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"statefulset/list/list.html\",' <kd-warnings warnings=\"::$ctrl.statefulSetList.errors\"></kd-warnings> <div layout=\"row\"> <kd-graph-card graph-title=\"CPU usage\" metrics=\"::$ctrl.statefulSetList.cumulativeMetrics\" selected-metric-names=\"\\'cpu/usage_rate\\'\"> </kd-graph-card> <kd-graph-card graph-title=\"Memory usage\" graph-info=\"The memory usage includes the caches in the pods managed by these stateful sets.\" metrics=\"::$ctrl.statefulSetList.cumulativeMetrics\" selected-metric-names=\"\\'memory/usage\\'\"> </kd-graph-card> </div> <kd-content-card> <kd-content> <kd-stateful-set-card-list stateful-set-list=\"$ctrl.statefulSetList\" stateful-set-list-resource=\"$ctrl.statefulSetListResource\"> </kd-stateful-set-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/detail/actionbar.html\",' <kd-actionbar-detail-buttons resource-kind-name=\"Storage Class\" type-meta=\"$ctrl.details.typeMeta\" object-meta=\"$ctrl.details.objectMeta\"> </kd-actionbar-detail-buttons> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/detail/detail.html\",' <div layout=\"column\"> <kd-storage-class-info storage-class=\"::$ctrl.storageClass\"></kd-storage-class-info> <kd-content-card> <kd-content> <kd-persistent-volume-card-list persistent-volume-list=\"::$ctrl.storageClass.persistentVolumeList\" persistent-volume-list-resource=\"::$ctrl.storageClassPersistentVolumesResource\"> </kd-persistent-volume-card-list> </kd-content> </kd-content-card> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/detail/info.html\",' <kd-info-card> <kd-info-card-header>Details</kd-info-card-header> <kd-info-card-section> <kd-object-meta-info-card object-meta=\"::$ctrl.storageClass.objectMeta\"> </kd-object-meta-info-card> <kd-info-card-entry title=\"Labels\"> <kd-labels labels=\"::$ctrl.storageClass.objectMeta.labels\"></kd-labels> </kd-info-card-entry> <kd-info-card-entry title=\"Provisioner\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.storageClass.provisioner}}\"></kd-middle-ellipsis> <div ng-hide=\"::$ctrl.storageClass.provisioner\">-</div> </kd-info-card-entry> <kd-info-card-entry title=\"Parameters\"> <kd-labels labels=\"::$ctrl.storageClass.parameters\"></kd-labels> </kd-info-card-entry> </kd-info-card-section> </kd-info-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/list/card.html\",' <kd-resource-card object-meta=\"$ctrl.storageClass.objectMeta\" type-meta=\"$ctrl.storageClass.typeMeta\"> <kd-resource-card-columns> <kd-resource-card-column> <div> <a ng-href=\"{{::$ctrl.getStorageClassDetailHref()}}\" class=\"kd-middle-ellipsised-link\"> <kd-middle-ellipsis display-string=\"{{$ctrl.storageClass.objectMeta.name}}\"> </kd-middle-ellipsis> </a> </div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.storageClass.objectMeta.labels\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> <kd-middle-ellipsis display-string=\"{{$ctrl.storageClass.provisioner}}\"> </kd-middle-ellipsis> <div ng-hide=\"::$ctrl.storageClass.provisioner\">-</div> </kd-resource-card-column> <kd-resource-card-column> <kd-labels labels=\"::$ctrl.storageClass.parameters\"></kd-labels> </kd-resource-card-column> <kd-resource-card-column> {{::$ctrl.storageClass.objectMeta.creationTimestamp | relativeTime}} <md-tooltip md-delay=\"500\" md-autohide> Created at {{::$ctrl.storageClass.objectMeta.creationTimestamp | date}} </md-tooltip> </kd-resource-card-column> <kd-resource-card-column class=\"kd-row-layout-column kd-icon-column\"> <kd-resource-card-menu> <kd-resource-card-delete-menu-item resource-kind-name=\"Storage Class\"> </kd-resource-card-delete-menu-item> <kd-resource-card-edit-menu-item resource-kind-name=\"Storage Class\"> </kd-resource-card-edit-menu-item> </kd-resource-card-menu> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/list/cardlist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\" select-id=\"{{::$ctrl.getSelectId()}}\" list=\"$ctrl.storageClassList\" list-resource=\"$ctrl.storageClassListResource\"> <kd-resource-card-list-header> <kd-resource-card-list-title ng-transclude=\"header\"> Storage Classes </kd-resource-card-list-title> <kd-resource-card-list-filter></kd-resource-card-list-filter> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.storageClassList.listMeta.totalItems\"> <kd-zero-state-text ng-transclude=\"zerostate\"> There are no Storage Classes to display. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.storageClassList.listMeta.totalItems\"> <kd-resource-card-header-column size=\"small\" grow=\"2\" sortable=\"true\" sort-id=\"$root.SortableProperties.NAME\"> Name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Labels </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Provisioner </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Parameters </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\" sortable=\"true\" sort-id=\"$root.SortableProperties.AGE\"> Age </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"nogrow\"> </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-storage-class-card dir-paginate=\"storageClass in $ctrl.storageClassList.storageClasses | itemsPerPage: default\" total-items=\"::$ctrl.storageClassList.listMeta.totalItems\" storage-class=\"storageClass\" pagination-id=\"{{::$ctrl.getSelectId()}}\"> </kd-storage-class-card> <kd-resource-card-list-footer> <kd-resource-card-list-pagination></kd-resource-card-list-pagination> </kd-resource-card-list-footer> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"storageclass/list/list.html\",' <kd-warnings warnings=\"::$ctrl.storageClassList.errors\"></kd-warnings> <kd-content-card> <kd-content> <kd-storage-class-card-list storage-class-list=\"$ctrl.storageClassList\" storage-class-list-resource=\"$ctrl.storageClassListResource\"> </kd-storage-class-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbar.html\",' <div layout=\"row\" layout-align=\"center center\"> <div ui-view=\"actionbar\" class=\"kd-actionbar-view-part\"></div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbardeleteitem.html\",' <md-button ng-click=\"$ctrl.remove()\" class=\"kd-actionbar-button\"> <md-icon>delete</md-icon> <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.getDeleteTooltip()}} </md-tooltip> <div class=\"kd-actionbar-button-text\"> Delete </div> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbardetailbuttons.html\",' <div layout=\"row\"> <kd-actionbar-edit-item resource-kind-name=\"{{$ctrl.resourceKindName}}\" type-meta=\"$ctrl.typeMeta\" object-meta=\"$ctrl.objectMeta\"> </kd-actionbar-edit-item> <kd-actionbar-delete-item resource-kind-name=\"{{$ctrl.resourceKindName}}\" type-meta=\"$ctrl.typeMeta\" object-meta=\"$ctrl.objectMeta\"> </kd-actionbar-delete-item> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbaredititem.html\",' <md-button ng-click=\"$ctrl.edit()\" class=\"kd-actionbar-button\"> <md-icon>edit</md-icon> <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.getEditTooltip()}} </md-tooltip> <div class=\"kd-actionbar-button-text\"> Edit </div> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbarlogs.html\",' <md-button ng-click=\"::$ctrl.viewLogs()\" class=\"kd-actionbar-button\"> <md-icon>subject</md-icon> <md-tooltip md-delay=\"500\" md-autohide> View logs </md-tooltip> <div class=\"kd-actionbar-button-text\">Logs</div> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/actionbarnamespaceoverview.html\",' <md-button ng-click=\"$ctrl.goToNamespaceOverview()\" class=\"kd-actionbar-button\"> <md-icon>description</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Go to namespace overview page </md-tooltip> <div class=\"kd-actionbar-button-text\">Overview</div> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/actionbar/shell.html\",' <md-button ng-click=\"::$ctrl.openShell()\" class=\"kd-actionbar-button\"> <md-icon>input</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Exec into Pod </md-tooltip> <div class=\"kd-actionbar-button-text\">Exec</div> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/allocatedresourceschart/allocatedresourceschart.html\",\" \")}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/annotations/annotations.html\",' <div ng-if=\"::annotationsCtrl.labels\"> <div ng-repeat=\"(key, value) in ::annotationsCtrl.labels\" ng-if=\"annotationsCtrl.isVisible($index)\" class=\"kd-chips\"> <div ng-switch on=\"::key\"> <div ng-switch-when=\"kubernetes.io/created-by\" class=\"kd-chip\"> kubernetes.io/created-by: <kd-serialized-reference reference=\"value\"></kd-serialized-reference> </div> <div ng-switch-when=\"kubectl.kubernetes.io/last-applied-configuration\" class=\"kd-chip\"> <kd-last-applied-configuration value=\"::value\"></kd-last-applied-configuration> </div> <div ng-switch-default class=\"kd-chip\"> <span>{{::key}}:&nbsp;</span> <kd-middle-ellipsis ng-if=\"!annotationsCtrl.isHref(value)\" display-string=\" {{::value}}\"></kd-middle-ellipsis> <a ng-if=\"annotationsCtrl.isHref(value)\" href=\"{{::value}}\" target=\"_blank\"> <kd-middle-ellipsis display-string=\" {{::value}}\"></kd-middle-ellipsis> </a> </div> </div> </div> <div class=\"kd-chips kd-chips-switch\" ng-show=\"annotationsCtrl.isMoreAvailable()\" ng-click=\"annotationsCtrl.switchLabelsView()\"> {{annotationsCtrl.isShowingAll() ? \"show less\" : \"show all\"}} </div> </div> <div ng-hide=\"::annotationsCtrl.labels\">-</div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/annotations/lastappliedconfiguration.html\",' <a href ng-click=\"$ctrl.openDetails()\"> kubectl.kubernetes.io/last-applied-configuration </a> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/breadcrumbs/breadcrumbs.html\",' <div ng-switch=\"$last\" ng-repeat=\"breadcrumb in ctrl.breadcrumbs\" flex=\"shrink\" class=\"md-title kd-breadcrumbs-ellipsised kd-breadcrumbs-spacing\" ng-class=\"{\\'kd-inline-breadcrumb\\': !$last}\"> <a ng-switch-when=\"false\" href=\"{{::breadcrumb.stateLink}}\" class=\"kd-faded-breadcrumb\"> {{breadcrumb.label}} </a> <div ng-switch-when=\"true\" class=\"kd-breadcrumbs-ellipsised\"> <kd-middle-ellipsis display-string=\"{{breadcrumb.label}}\"></kd-middle-ellipsis> </div> <md-icon ng-switch-when=\"false\" class=\"kd-faded-breadcrumb\"> keyboard_arrow_right </md-icon> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/capacity/capacity.html\",' <kd-content-card> <kd-content> <kd-resource-card-list selectable=\"false\" with-statuses=\"false\"> <kd-resource-card-list-header> <kd-resource-card-list-title> Capacity </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-zero-state ng-if=\"!$ctrl.capacity\"> <kd-zero-state-text> No capacity has been assigned to this resource. </kd-zero-state-text> </kd-zero-state> <kd-resource-card-header-columns ng-show=\"$ctrl.capacity\"> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Resource name </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Quantity </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card-columns ng-repeat=\"(key, value) in ::$ctrl.capacity\"> <kd-resource-card-column class=\"kd-capitalize\">{{key}}</kd-resource-card-column> <kd-resource-card-column>{{value}}</kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card-list> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/conditions/conditionslist.html\",' <kd-resource-card-list selectable=\"false\" with-statuses=\"false\"> <kd-resource-card-list-header> <kd-resource-card-list-title> Conditions </kd-resource-card-list-title> </kd-resource-card-list-header> <kd-resource-card-header-columns> <kd-resource-card-header-column size=\"small\" grow=\"2\"> Type </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Status </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Last heartbeat time </kd-resource-card-header-column> <kd-resource-card-header-column size=\"small\" grow=\"1\"> Last transition time </kd-resource-card-header-column> <kd-resource-card-header-column size=\"medium\" grow=\"2\"> Reason </kd-resource-card-header-column> <kd-resource-card-header-column size=\"medium\" grow=\"4\"> Message </kd-resource-card-header-column> </kd-resource-card-header-columns> <kd-resource-card ng-repeat=\"condition in $ctrl.conditions\" omit-meta=\"true\"> <kd-resource-card-columns> <kd-resource-card-column> <div ng-if=\"::condition.type\">{{condition.type}}</div> <div ng-if=\"::!condition.type\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::condition.status\">{{condition.status}}</div> <div ng-if=\"::!condition.status\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::condition.lastProbeTime\">{{condition.lastProbeTime | relativeTime}}</div> <md-tooltip ng-if=\"::condition.lastProbeTime\" md-delay=\"500\" md-autohide> Probed at  {{condition.lastProbeTime | date}} </md-tooltip> <div ng-if=\"::!condition.lastProbeTime\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::condition.lastTransitionTime\"> {{condition.lastTransitionTime | relativeTime}} </div> <md-tooltip ng-if=\"::condition.lastTransitionTime\" md-delay=\"500\" md-autohide> Probed at  {{condition.lastTransitionTime | date}} </md-tooltip> <div ng-if=\"::!condition.lastTransitionTime\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::condition.reason\">{{condition.reason}}</div> <div ng-if=\"::!condition.reason\">-</div> </kd-resource-card-column> <kd-resource-card-column> <div ng-if=\"::condition.message\">{{condition.message}}</div> <div ng-if=\"::!condition.message\">-</div> </kd-resource-card-column> </kd-resource-card-columns> </kd-resource-card> </kd-resource-card-list> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/contentcard/contentcard.html\",' <div class=\"kd-content-card\"> <div class=\"kd-content-card-content\"> <h1 ng-if=\"$ctrl.isTitleSlotFilled()\" layout-padding class=\"kd-content-card-content-title md-title\" ng-transclude=\"title\"></h1> <div ng-transclude=\"content\" class=\"kd-content-card-transclude-content\"></div> <div class=\"kd-content-card-content-footer\" ng-if=\"$ctrl.isFooterSlotFilled()\" ng-transclude=\"footer\"></div> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/endpoint/externalendpoint.html\",' <div> <div ng-repeat=\"endpoint in ::$ctrl.endpoints\"> <div ng-repeat=\"port in ::endpoint.ports\"> <div> <a href=\"http://{{::endpoint.host}}:{{::port.port}}\" target=\"_blank\" layout layout-align=\"start center\"> <kd-middle-ellipsis display-string=\"{{::endpoint.host}}:{{::port.port}}\"> </kd-middle-ellipsis> &nbsp; <md-icon class=\"kd-endpoint-icon\">open_in_new</md-icon> </a> </div> <div ng-if=\"::!port.port\"> <a href=\"http://{{::endpoint.host}}:{{::port.nodePort}}\" target=\"_blank\" layout layout-align=\"start center\"> <kd-middle-ellipsis display-string=\"{{::endpoint.host}}:{{::port.nodePort}}\"> </kd-middle-ellipsis> &nbsp; <md-icon class=\"kd-endpoint-icon\">open_in_new</md-icon> </a> </div> </div> <div ng-if=\"::!endpoint.ports.length\"> <a href=\"http://{{::endpoint.host}}\" target=\"_blank\" layout layout-align=\"start center\"> <kd-middle-ellipsis display-string=\"{{::endpoint.host}}\"> </kd-middle-ellipsis> &nbsp; <md-icon class=\"kd-endpoint-icon\">open_in_new</md-icon> </a> </div> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/endpoint/internalendpoint.html\",' <div> <div ng-repeat=\"port in ::$ctrl.endpoint.ports\"> <div> <kd-middle-ellipsis display-string=\"{{::$ctrl.endpoint.host}}:{{::port.port}} {{::port.protocol}}\"> </kd-middle-ellipsis> </div> <div ng-if=\"port.nodePort != 0\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.endpoint.host}}:{{::port.nodePort}} {{::port.protocol}}\"> </kd-middle-ellipsis> </div> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/graph/graph.html\",\" \")}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/graph/graphcard.html\",' <kd-content-card ng-if=\"$ctrl.shouldShowGraph()\"> <kd-title>{{$ctrl.graphTitle}} <span ng-if=\"::$ctrl.graphInfo\"> <md-icon class=\"kd-graph-card-icon\">info_outline</md-icon> <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.graphInfo}} </md-tooltip> </span> </kd-title> <kd-content> <kd-graph metrics=\"::$ctrl.selectedMetrics\"></kd-graph> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/infocard/infocard.html\",' <kd-content-card ng-if=\"::$ctrl.isHeaderFilled()\"> <kd-title ng-transclude=\"header\"></kd-title> <kd-content> <div layout=\"column\"> <div class=\"kd-info-card-section\" ng-transclude=\"section\" layout=\"row\" layout-padding> </div> </div> </kd-content> </kd-content-card> <kd-content-card ng-if=\"::!$ctrl.isHeaderFilled()\"> <kd-content> <div layout=\"column\"> <div class=\"kd-info-card-section\" ng-transclude=\"section\" layout=\"row\" layout-padding> </div> </div> </kd-content> </kd-content-card> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/infocard/infocardentry.html\",' <div layout=\"row\" class=\"kd-info-card-entry\"> <div ng-if=\"::$ctrl.title\" class=\"kd-info-card-entry-title\">{{$ctrl.title}}:</div> <div ng-if=\"::$ctrl.title\" flex=\"auto\" class=\"kd-info-card-entry-content\" ng-transclude></div> <div ng-if=\"::!$ctrl.title\" flex=\"nogrow\" ng-transclude></div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/infocard/infocardsection.html\",' <div layout=\"column\" class=\"kd-info-card-section-container\"> <div class=\"kd-info-card-section-name\" ng-if=\"::$ctrl.name\">{{$ctrl.name}}</div> <div flex=\"auto\" ng-transclude></div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/labels/labels.html\",' <div ng-if=\"::labelsCtrl.labels\"> <div ng-repeat=\"(key, value) in ::labelsCtrl.labels\" ng-if=\"labelsCtrl.isVisible($index)\" class=\"kd-chips\"> <kd-middle-ellipsis display-string=\"{{::key}}: {{::value}}\" class=\"kd-chip\"> </kd-middle-ellipsis> </div> <div class=\"kd-chips kd-chips-switch\" ng-show=\"labelsCtrl.isMoreAvailable()\" ng-click=\"labelsCtrl.switchLabelsView()\"> {{labelsCtrl.isShowingAll() ? \\'show less\\' : \\'show all\\' }} </div> </div> <div ng-hide=\"::labelsCtrl.labels\">-</div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/middleellipsis/middleellipsis.html\",' <span class=\"kd-middleellipsis\">{{ellipsisCtrl.displayString}}</span> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/podwarnings/podwarnings.html\",' <div ng-repeat=\"warning in $ctrl.warnings|limitTo:$ctrl.getLimitTo()\"> <span class=\"kd-error\">{{::warning.message}}</span> </div> <div ng-if=\"::!$ctrl.shouldShowAll()\"> <div class=\"kd-pod-warnings-button\" ng-hide=\"!$ctrl.isHidden()\" ng-click=\"$ctrl.switchVisibility()\"> <md-icon>expand_more</md-icon> <span>Show more</span> </div> <div class=\"kd-pod-warnings-button\" ng-hide=\"$ctrl.isHidden()\" ng-click=\"$ctrl.switchVisibility()\"> <md-icon>expand_less</md-icon> <span>Show less</span> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/logsbutton.html\",' <md-button ng-if=\"::$ctrl.getLogsHref()\" ng-href=\"{{::$ctrl.getLogsHref()}}\" target=\"_blank\" class=\"md-icon-button\"> <md-icon md-font-library=\"material-icons\">subject</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Logs </md-tooltip> </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecard.html\",' <div class=\"kd-resource-card\"> <div layout=\"row\" class=\"kd-resource-card-columns-container\" flex=\"grow\"> <div ng-if=\"$ctrl.isSelectable()\" flex=\"none\" class=\"kd-resource-card-select\"> <md-checkbox aria-label=\"Select the resource\"></md-checkbox> </div> <ng-transclude ng-if=\"$ctrl.hasStatus()\" ng-transclude-slot=\"status\" class=\"kd-resource-card-status\" flex=\"none\"> </ng-transclude> <ng-transclude ng-transclude-slot=\"columns\" class=\"kd-resource-card-columns-slot\" flex=\"shrink\"> </ng-transclude> </div> <ng-transclude ng-transclude-slot=\"footer\" class=\"kd-resource-card-footer-slot\"> </ng-transclude> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardcolumn.html\",' <ng-transclude class=\"kd-resource-card-column-container\"></ng-transclude> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardcolumns.html\",' <div class=\"kd-resource-card-columns\" flex=\"grow\" ng-transclude></div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecarddeletemenuitem.html\",' <md-menu-item> <md-button ng-click=\"$ctrl.remove()\"> Delete </md-button> </md-menu-item> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardeditmenuitem.html\",' <md-menu-item> <md-button ng-click=\"$ctrl.edit()\"> View/edit YAML </md-button> </md-menu-item> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardfooter.html\",' <ng-transclude class=\"kd-resource-card-footer\"></ng-transclude> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardheadercolumn.html\",' <div class=\"kd-resource-card-header-column-container\" ng-class=\"{\\'kd-resource-card-header-column-sortable\\': $ctrl.isSortable(),\\n                \\'kd-resource-card-header-column-sorted\\': $ctrl.isSorted()}\"> <ng-transclude ng-click=\"::$ctrl.shouldEnableSorting() && $ctrl.sort()\"></ng-transclude> <div class=\"kd-resource-card-header-sort-column-icon-container\" ng-click=\"$ctrl.sort()\" ng-if=\"::$ctrl.shouldEnableSorting()\"> <md-icon class=\"kd-resource-card-header-sort-column-icon-asc\" ng-class=\"{\\'kd-resource-card-header-column-sorted\\': $ctrl.isAscending()}\"> arrow_drop_up </md-icon> <md-icon ng-class=\"{\\'kd-resource-card-header-column-sorted\\': $ctrl.isDescending()}\"> arrow_drop_down </md-icon> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardheadercolumns.html\",' <div class=\"kd-resource-card-header-columns\" flex=\"grow\" ng-transclude></div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardlist.html\",' <div class=\"kd-resource-card-list-wrapper\"> <div ng-transclude=\"header\" ng-if=\"::$ctrl.hasHeader()\"> </div> <div class=\"kd-resource-card-list\" ng-class=\"{\\'kd-resource-card-list-selectable\\': $ctrl.selectable,\\n                  \\'kd-resource-card-list-with-statuses\\': $ctrl.withStatuses}\" ng-transclude> </div> <div ng-transclude=\"footer\" ng-if=\"::$ctrl.hasFooter()\"> </div> <div class=\"kd-resource-card-list-pending-overlay\" ng-if=\"$ctrl.pending\"> <md-progress-circular md-mode=\"indeterminate\" md-diameter=\"48\"> </md-progress-circular> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardlistfilter.html\",' <div class=\"kd-resource-card-list-filter-wrapper\" ng-if=\"$ctrl.shouldEnable()\"> <div class=\"kd-search-container\"> <input ng-if=\"$ctrl.isSearchVisible()\" ng-model=\"$ctrl.inputText\" ng-model-options=\"{\\n            updateOn: \\'default blur\\',\\n            debounce: {\\n             \\'default\\': 250,\\n             \\'blur\\': 0\\n            }\\n           }\" ng-change=\"$ctrl.onTextUpdate()\" name=\"search\" type=\"search\" placeholder=\"{{::$ctrl.getPlaceholderText()}}\" class=\"kd-search-input\"> <md-icon class=\"material-icons kd-search-icon\" ng-if=\"!$ctrl.isSearchVisible()\" ng-click=\"$ctrl.switchSearchVisibility()\"> filter_list <md-tooltip md-delay=\"500\" md-autohide> {{::$ctrl.getTooltipMessage()}} </md-tooltip> </md-icon> <md-icon class=\"material-icons kd-search-icon\" ng-if=\"$ctrl.isSearchVisible()\" ng-click=\"$ctrl.clearInput()\"> close </md-icon> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardlistfooter.html\",' <div class=\"kd-resource-card-list-footer\" ng-class=\"{\\'kd-resource-card-list-footer-border\\': $ctrl.isBottomBorderVisible()}\"> <div ng-transclude class=\"kd-resource-card-list-footer-content\"></div> <div ng-transclude=\"pagination\" class=\"kd-resource-card-list-footer-pagination\"></div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardlistheader.html\",' <div ng-transclude=\"title\" class=\"kd-resource-card-list-header md-title\"></div> <div ng-transclude></div> <div ng-transclude=\"filter\" ng-if=\"::$ctrl.isFilterSlotFilled()\" class=\"kd-resource-card-list-header-filter\"></div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardlistpagination.html\",' <div ng-if=\"$ctrl.shouldShowPagination()\" flex=\"auto\" layout=\"row\" class=\"kd-list-pagination\"> <dir-pagination-controls pagination-id=\"::$ctrl.selectId\" class=\"kd-list-pagination-controls\" boundary-links=\"true\" template-url=\"common/pagination/pagination.html\" on-page-change=\"$ctrl.pageChanged(newPageNumber)\"> </dir-pagination-controls> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardmenu.html\",' <md-menu> <md-button ng-click=\"$mdMenu.open($event)\" class=\"md-icon-button\"> <md-icon md-font-library=\"material-icons\">more_vert</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Actions </md-tooltip> </md-button> <md-menu-content ng-transclude> </md-menu-content> </md-menu> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcecard/resourcecardtriggermenuitem.html\",' <md-menu-item> <md-button ng-click=\"$ctrl.trigger()\"> Trigger </md-button> </md-menu-item> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/resourcedetail/infocard.html\",' <kd-info-card-entry title=\"Name\"> <kd-middle-ellipsis display-string=\"{{::$ctrl.objectMeta.name}}\"></kd-middle-ellipsis> </kd-info-card-entry> <kd-info-card-entry ng-if=\"::$ctrl.objectMeta.namespace\" title=\"Namespace\"> {{::$ctrl.objectMeta.namespace}} </kd-info-card-entry> <kd-info-card-entry ng-if=\"::$ctrl.objectMeta.labels\" title=\"Labels\"> <kd-labels labels=\"::$ctrl.objectMeta.labels\"></kd-labels> </kd-info-card-entry> <kd-info-card-entry ng-if=\"::$ctrl.objectMeta.annotations\" title=\"Annotations\"> <kd-annotations labels=\"::$ctrl.objectMeta.annotations\"></kd-annotations> </kd-info-card-entry> <kd-info-card-entry title=\"Creation Time\"> {{::$ctrl.objectMeta.creationTimestamp | date}} </kd-info-card-entry> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/scale/scale.html\",' <md-menu-item ng-if=\"$ctrl.isMenuItem()\"> <md-button ng-click=\"$ctrl.handleScaleResourceDialog()\" role=\"menuitem\"> Scale </md-button> </md-menu-item> <md-button ng-if=\"!$ctrl.isMenuItem()\" ng-click=\"$ctrl.handleScaleResourceDialog()\"> <md-icon>linear_scale</md-icon> <md-tooltip md-delay=\"500\" md-autohide> Edit number of pods </md-tooltip> Scale </md-button> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/serializedreference/serializedreference.html\",' <a ng-if=\"$ctrl.valid\" ng-href=\"{{$ctrl.href}}\">{{$ctrl.kind}} {{$ctrl.name}}</a> <span ng-if=\"!$ctrl.valid\">{{$ctrl.reference}}</span> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/sparkline/sparkline.html\",' <svg viewBox=\"0,0 1,1\" preserveAspectRatio=\"none\" class=\"kd-sparkline\"> <polygon ng-attr-points=\"0,1 {{::sparklineCtrl.polygonPoints()}} 1,1\"/> </svg> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/textinput/textinput.html\",' <div ui-ace=\"{{ $ctrl.getEditorConfig() }}\" class=\"kd-text-input\" ng-model=\"$ctrl.inputData\"> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/togglehiddentext/togglehiddentext.html\",' <pre ng-if=\"$ctrl.active\" class=\"kd-pre-block\">{{::$ctrl.text}}</pre> <span ng-if=\"!$ctrl.active\"> <span ng-if=\"::$ctrl.placeholder.length\">{{::$ctrl.placeholder}}</span> <input ng-if=\"::!$ctrl.placeholder.length\" type=\"password\" readonly=\"readonly\" flex=\"nogrow\" class=\"kd-toggle-hidden-text-input\" value=\"{{::$ctrl.text}}\"> </span> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/uploadfile/uploadfile.html\",' <div layout=\"row\" layout-align=\"space-between start\"> <input id=\"fileInput\" type=\"file\" class=\"ng-hide\"> <div flex=\"auto\"> <md-input-container class=\"md-block kd-upload-file-container\"> <label>{{label}}</label> <input id=\"textInput\" ng-model=\"fileName\" ng-readonly=\"true\" required md-no-asterisk> </md-input-container> </div> <md-button id=\"uploadButton\" class=\"md-primary kd-upload-button\" aria-label=\"attach_file\"> <label class=\"kd-upload-label\"> <md-icon> <i class=\"material-icons\">more_horiz</i> </md-icon> </label> </md-button> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/warnings/warnings.html\",' <div ng-if=\"$ctrl.warnings.length\" class=\"kd-warnings-container\"> <div class=\"kd-warning-message\" ng-repeat=\"warning in $ctrl.warnings | limitTo: $ctrl.limit\"> <md-icon class=\"material-icons\">warning</md-icon> <span class=\"kd-raw-warning\" flex> {{$ctrl.getLocalizedMessage(warning.ErrStatus.message)}} </span> <md-icon ng-click=\"$ctrl.dismissWarning($index)\" class=\"material-icons kd-dismiss-icon\"> close <md-tooltip md-delay=\"500\" md-autohide> Dismiss </md-tooltip> </md-icon> </div> <div class=\"kd-more-warnings\" ng-if=\"$ctrl.warnings.length > $ctrl.defaultLimit\"> <md-button ng-if=\"$ctrl.limit\" ng-click=\"$ctrl.toggleWarnings()\"> <md-icon class=\"material-icons\">expand_more</md-icon> {{$ctrl.getShowMoreLabel()}} </md-button> <md-button ng-if=\"!$ctrl.limit\" ng-click=\"$ctrl.toggleWarnings()\"> <md-icon class=\"material-icons\">expand_less</md-icon> {{$ctrl.getShowLessLabel()}} </md-button> <span flex></span> <md-button ng-click=\"$ctrl.dismissWarnings()\">Dismiss all</md-button> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"common/components/zerostate/zerostate.html\",' <div ng-class=\"{\\'layout-padding\\': $ctrl.showDefaultZerostate()}\" class=\"kd-zerostate-message\"> <div class=\"kd-zerostate-title\" ng-transclude=\"title\">There is nothing to display here </div> <div class=\"kd-zerostate-text\" ng-transclude=\"text\"> <span> You can <a href=\"{{::$ctrl.getStateHref()}}\">deploy a containerized app</a>, select other namespace or <a href=\"http://kubernetes.io/docs/user-guide/ui/\" target=\"_blank\">take the Dashboard Tour <i class=\"material-icons kd-zerostate-icon\">open_in_new</i></a> to learn more. </span> </div> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/createnamespace/createnamespace.html\",' <md-dialog aria-label=\"Create a new namespace\" layout=\"column\"> <md-dialog-content layout-padding> <h4 class=\"md-title\">Create a new namespace</h4> <div>The new namespace will be added to the cluster.</div> <form name=\"$ctrl.namespaceForm\" ng-submit=\"$ctrl.createNamespace()\" novalidate> <kd-help-section> <md-input-container class=\"md-block\"> <label>Namespace name</label> <input name=\"namespace\" ng-model=\"$ctrl.namespace\" md-maxlength=\"{{$ctrl.namespaceMaxLength}}\" ng-pattern=\"$ctrl.namespacePattern\" required> <div ng-messages=\"$ctrl.namespaceForm.namespace.$error\"> <div ng-message=\"pattern\">Name must be alphanumeric and may contain dashes.</div> <div ng-message=\"md-maxlength\">Name must be up to {{::$$ctrl.namespaceMaxLength}} characters long.</div> <div ng-message=\"required\">Name is required.</div> </div> </md-input-container> <kd-user-help> A namespace with the specified name will be added to the cluster. <a href=\"http://kubernetes.io/docs/admin/namespaces/\" target=\"_blank\" tabindex=\"-1\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <md-dialog-actions layout=\"row\"> <md-button ng-disabled=\"$ctrl.isDisabled()\" class=\"md-primary\" type=\"submit\"> Create </md-button> <md-button ng-click=\"$ctrl.cancel()\">Cancel</md-button> </md-dialog-actions> </form> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/createsecret/createsecret.html\",' <md-dialog aria-label=\"Create a new secret\" layout=\"column\" class=\"kd-create-secret-dialog\"> <md-dialog-content layout-padding> <h4 class=\"md-title\">Create a new image pull secret</h4> <div>The new secret will be added to the cluster</div> <form name=\"$ctrl.secretForm\" ng-submit=\"$ctrl.createSecret()\" novalidate> <kd-help-section> <md-input-container class=\"md-block\" layout-wrap> <label>Secret name</label> <input name=\"secretName\" ng-model=\"$ctrl.secretName\" md-maxlength=\"{{$ctrl.secretNameMaxLength}}\" ng-pattern=\"$ctrl.secretNamePattern\" required> <div ng-messages=\"$ctrl.secretForm.secretName.$error\" role=\"alert\" multiple=\"multiple\"> <div ng-message=\"pattern\"> Name must follow the DNS domain name syntax (e.g. new.image-pull.secret). </div> <div ng-message=\"md-maxlength\"> Name must be up to {{::$$ctrl.secretNameMaxLength}} characters long. </div> <div ng-message=\"required\">Name is required.</div> </div> </md-input-container> <kd-user-help> A secret with the specified name will be added to the cluster in the namespace. <span class=\"kd-emphasized\">{{$ctrl.namespace}}.</span> <a href=\"http://kubernetes.io/docs/user-guide/secrets/\" target=\"_blank\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <kd-help-section> <md-input-container class=\"md-block\" layout-wrap> <label>Image pull secret data</label> <input name=\"data\" ng-model=\"$ctrl.data\" class=\"kd-secret-data\" columns=\"1\" rows=\"5\" ng-pattern=\"$ctrl.dataPattern\" required> <div ng-messages=\"$ctrl.secretForm.data.$error\" role=\"alert\" multiple=\"multiple\"> <div ng-message=\"required\">Data is required.</div> <div ng-message=\"pattern\">Data must be Base64 encoded.</div> </div> </md-input-container> <kd-user-help> Specify the data for your secret to hold. The value is the Base64 encoded content of a .dockercfg file. <a href=\"http://kubernetes.io/docs/user-guide/images/#specifying-imagepullsecrets-on-a-pod\" target=\"_blank\"> Learn more <i class=\"material-icons\">open_in_new</i> </a> </kd-user-help> </kd-help-section> <md-dialog-actions layout=\"row\"> <md-button class=\"md-primary\" type=\"submit\">Create</md-button> <md-button ng-click=\"$ctrl.cancel()\">Cancel</md-button> </md-dialog-actions> </form> </md-dialog-content> </md-dialog> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/deploylabel/deploylabel.html\",' <ng-form layout=\"row\" flex=\"auto\" name=\"labelForm\"> <md-input-container md-no-float class=\"kd-deploy-input-row\" flex=\"45\"> <input name=\"key\" aria-label=\"key\" ng-model=\"$ctrl.label.key\" ng-change=\"$ctrl.check(labelForm)\" placeholder=\"{{$ctrl.label.key}}\" ng-disabled=\"!$ctrl.label.editable\" kd-validate=\"labelKeyNameLength,labelKeyPrefixLength,labelKeyNamePattern,labelKeyPrefixPattern\" ng-model-options=\"{allowInvalid: true}\"> <ng-messages for=\"labelForm.key.$error\" ng-if=\"labelForm.key.$touched && labelForm.key.$invalid\"> <ng-message when=\"unique\"> {{ $ctrl.label.key}} is not unique </ng-message> <ng-message when=\"kdValidLabelKeyPrefixPattern\"> Prefix is not a valid DNS subdomain prefix (eg. my-domain.com). </ng-message> <ng-message when=\"kdValidLabelKeyNamePattern\"> Label key name must be alphanumeric separated by \\'-\\', \\'_\\' or \\'.\\', optionally prefixed by a DNS subdomain and \\'/\\'. </ng-message> <ng-message when=\"kdValidLabelKeyPrefixLength\">Prefix should not exceed 253 characters.</ng-message> <ng-message when=\"kdValidLabelKeyNameLength\">Label Key name should not exceed 63 characters.</ng-message> </ng-messages> </md-input-container> <p flex=\"5\"></p> <md-input-container md-no-float class=\"kd-deploy-input-row\" flex=\"40\"> <input name=\"value\" aria-label=\"value\" ng-model=\"$ctrl.label.value\" placeholder=\"{{$ctrl.label.value()}}\" ng-disabled=\"!$ctrl.label.editable\" kd-validate=\"labelValuePattern\" ng-change=\"$ctrl.check()\" md-maxlength=\"253\" ng-model-options=\"{ getterSetter: true, allowInvalid: true }\"> <ng-messages for=\"labelForm.value.$error\" ng-if=\"labelForm.value.$touched && labelForm.value.$invalid\"> <ng-message when=\"kdValidLabelValuePattern\"> Label value must be alphanumeric separated by \\'.\\' , \\'-\\' or \\'_\\'. </ng-message> <ng-message when=\"md-maxlength\">Label Value must not exceed 253 characters.</ng-message> </ng-messages> </md-input-container> <md-button type=\"button\" ng-show=\"$ctrl.isRemovable()\" ng-click=\"$ctrl.deleteLabel()\" class=\"material-icons md-icon-button\">delete </md-button> </ng-form> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/environmentvariables/environmentvariables.html\",' <div class=\"kd-environment-variables-title md-body-2\"> Environment variables </div> <div ng-repeat=\"variable in ctrl.variables\"> <ng-form name=\"variablesForm\" layout=\"row\"> <md-input-container flex=\"auto\" class=\"kd-deploy-input-row\"> <label> Name </label> <input ng-model=\"variable.name\" name=\"name\" ng-change=\"ctrl.addVariableIfNeeed()\" ng-pattern=\"ctrl.namePattern\"> <ng-messages for=\"variablesForm.name.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"pattern\"> Variable name must be a valid C identifier. </ng-message> </ng-messages> </md-input-container> <div flex=\"5\"></div> <md-input-container flex=\"auto\" class=\"kd-deploy-input-row\"> <label> Value </label> <input ng-model=\"variable.value\" name=\"value\"> </md-input-container> <div flex=\"10\"> <md-button type=\"button\" ng-if=\"ctrl.isRemovable($index)\" ng-click=\"ctrl.remove($index)\" class=\"material-icons md-icon-button\"> delete </md-button> </div> </ng-form> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/helpsection/helpsection.html\",' <ng-transclude class=\"kd-help-section\" layout=\"row\" layout-xs=\"column\" layout-sm=\"column\"> </ng-transclude> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/portmappings/portmappings.html\",' <md-input-container class=\"md-block kd-deploy-input-row\"> <label>Service</label> <md-select ng-model=\"$ctrl.serviceType\" ng-change=\"$ctrl.changeServiceType()\" required> <md-option ng-repeat=\"serviceType in $ctrl.serviceTypes\" ng-value=\"serviceType\" class=\"md-block\"> {{serviceType.label}} </md-option> </md-select> </md-input-container> <div ng-repeat=\"portMapping in $ctrl.portMappings\"> <ng-form name=\"portMappingForm\" layout=\"row\"> <md-input-container flex=\"50\"> <label>Port</label> <input ng-model=\"portMapping.port\" ng-change=\"$ctrl.checkPortMapping(portMappingForm, $index)\" type=\"number\" min=\"1\" max=\"65535\" name=\"port\" ng-required=\"$ctrl.isFirst($index)\"> <ng-messages for=\"portMappingForm.port.$error\" role=\"alert\"> <ng-message when=\"number\"> Port must be an integer. </ng-message> <ng-message when=\"min\"> Port must be greater than 0. </ng-message> <ng-message when=\"max\"> Port must be less than 65536. </ng-message> <ng-message when=\"required\"> Port cannot be empty. </ng-message> </ng-messages> </md-input-container> <div flex=\"5\"></div> <md-input-container flex=\"50\"> <label>Target port</label> <input ng-model=\"portMapping.targetPort\" ng-change=\"$ctrl.checkPortMapping(portMappingForm, $index)\" type=\"number\" min=\"1\" max=\"65535\" name=\"targetPort\" ng-required=\"$ctrl.isFirst($index)\"> <ng-messages for=\"portMappingForm.targetPort.$error\" role=\"alert\"> <ng-message when=\"number\">Target port must be an integer.</ng-message> <ng-message when=\"min\">Target port must be greater than 0.</ng-message> <ng-message when=\"max\">[Target port must be less than 65536.|This warning appears when a typed in target port number exceeds the maximum allowed value (in the port mappings section on the deploy page).]]</ng-message> <ng-message when=\"required\">Target port cannot be empty.</ng-message> </ng-messages> </md-input-container> <div flex=\"5\"></div> <md-input-container flex=\"none\"> <label>Protocol</label> <md-select ng-model=\"portMapping.protocol\" name=\"protocol\" is-external=\"$ctrl.isExternal\" required kd-valid-protocol> <md-option ng-repeat=\"protocol in $ctrl.protocols\" ng-value=\"protocol\"> {{protocol}} </md-option> </md-select> <md-progress-linear class=\"kd-deploy-form-progress\" md-mode=\"indeterminate\" ng-show=\"portMappingForm.protocol.$pending\"> </md-progress-linear> <ng-messages for=\"portMappingForm.protocol.$error\" role=\"alert\" multiple=\"multiple\"> <ng-message when=\"required\">Protocol is required.</ng-message> <ng-message when=\"validProtocol\">Invalid protocol.</ng-message> </ng-messages></md-input-container> <div flex=\"10\"> <md-button type=\"button\" ng-if=\"$ctrl.isRemovable($index)\" ng-click=\"$ctrl.remove($index)\" class=\"material-icons md-icon-button\"> delete </md-button> </div> </ng-form> </div> ')}]);Z.run([\"$templateCache\",function(a){a.put(\"deploy/deployfromsettings/helpsection/userhelp/userhelp.html\",' <div ng-transclude class=\"kd-user-help\" layout-align=\"start center\"> </div> ')}]);\n"
            }
          ]
        }
      }
    }
  ]
}